{"version":3,"file":"SanityVision.js","sources":["../../src/apiVersions.ts","../../src/components/DelayedSpinner.tsx","../../src/codemirror/extensions.ts","../../src/codemirror/useCodemirrorTheme.ts","../../src/codemirror/VisionCodeMirror.styled.tsx","../../src/codemirror/VisionCodeMirror.tsx","../../src/perspectives.ts","../../src/util/encodeQueryString.ts","../../src/util/isPlainObject.ts","../../src/util/localStorage.ts","../../src/util/parseApiQueryString.ts","../../src/util/prefixApiVersion.ts","../../src/util/validateApiVersion.ts","../../src/util/tryParseParams.ts","../../src/components/VisionGui.styled.tsx","../../src/components/ParamsEditor.tsx","../../src/components/usePaneSize.ts","../../src/components/VisionGuiControls.tsx","../../src/components/PerspectivePopover.styled.tsx","../../src/components/PerspectivePopover.tsx","../../src/components/VisionGuiHeader.tsx","../../src/util/getBlobUrl.ts","../../src/components/QueryErrorDialog.styled.tsx","../../src/components/QueryErrorDetails.tsx","../../src/components/QueryErrorDialog.tsx","../../src/components/ResultView.styled.tsx","../../src/components/ResultView.tsx","../../src/components/SaveResultButtons.tsx","../../src/components/VisionGuiResult.tsx","../../src/components/VisionGui.tsx","../../src/hooks/useDatasets.ts","../../src/containers/VisionContainer.tsx","../../src/containers/VisionErrorBoundary.tsx","../../src/SanityVision.tsx"],"sourcesContent":["export const API_VERSIONS = [\n  'v1',\n  'vX',\n  'v2021-03-25',\n  'v2021-10-21',\n  'v2022-03-07',\n  'v2025-02-19',\n  `v${new Date().toISOString().split('T')[0]}`,\n]\nexport const [DEFAULT_API_VERSION] = API_VERSIONS.slice(-1)\n","import {Spinner} from '@sanity/ui'\nimport {useEffect, useState} from 'react'\n\ninterface DelayedSpinnerProps {\n  delay?: number\n}\n\n// Waits for X ms before showing a spinner\nexport function DelayedSpinner(props: DelayedSpinnerProps) {\n  const [show, setShow] = useState(false)\n\n  useEffect(() => {\n    const timer = setTimeout(() => setShow(true), props.delay || 500)\n    return () => clearTimeout(timer)\n  }, [props.delay])\n\n  return show ? <Spinner muted size={4} /> : null\n}\n","import {closeBrackets} from '@codemirror/autocomplete'\nimport {defaultKeymap, history, historyKeymap} from '@codemirror/commands'\nimport {javascriptLanguage} from '@codemirror/lang-javascript'\nimport {\n  bracketMatching,\n  defaultHighlightStyle,\n  indentOnInput,\n  syntaxHighlighting,\n} from '@codemirror/language'\nimport {highlightSelectionMatches} from '@codemirror/search'\nimport {type Extension} from '@codemirror/state'\nimport {\n  drawSelection,\n  highlightActiveLine,\n  highlightActiveLineGutter,\n  highlightSpecialChars,\n  keymap,\n  lineNumbers,\n} from '@codemirror/view'\n\nexport const codemirrorExtensions: Extension[] = [\n  [javascriptLanguage],\n  lineNumbers(),\n  highlightActiveLine(),\n  highlightActiveLineGutter(),\n  highlightSelectionMatches(),\n  highlightSpecialChars(),\n  indentOnInput(),\n  bracketMatching(),\n  closeBrackets(),\n  history(),\n  drawSelection(),\n  syntaxHighlighting(defaultHighlightStyle, {fallback: true}),\n  keymap.of(\n    [\n      // Override the default keymap for Mod-Enter to not insert a new line, we have a custom event handler for executing queries\n      {key: 'Mod-Enter', run: () => true},\n\n      // Add the default keymap and history keymap\n      defaultKeymap,\n      historyKeymap,\n    ]\n      .flat()\n      .filter(Boolean),\n  ),\n]\n","import {HighlightStyle, syntaxHighlighting} from '@codemirror/language'\nimport {EditorView} from '@codemirror/view'\nimport {tags as t} from '@lezer/highlight'\nimport {hues} from '@sanity/color'\nimport {rem, type Theme} from '@sanity/ui'\nimport {useMemo} from 'react'\n\nexport function useCodemirrorTheme(theme: Theme) {\n  const cmTheme = useMemo(() => createTheme(theme), [theme])\n  const cmHighlight = useMemo(() => syntaxHighlighting(createHighlight(theme)), [theme])\n\n  return [cmTheme, cmHighlight]\n}\n\nfunction createTheme(theme: Theme) {\n  const {color, fonts} = theme.sanity\n  const card = color.card.enabled\n  const cursor = hues.blue[color.dark ? 400 : 500].hex\n  const selection = hues.gray[theme.sanity.color.dark ? 900 : 100].hex\n\n  return EditorView.theme(\n    {\n      '&': {\n        color: card.fg,\n        backgroundColor: card.bg,\n      },\n\n      '.cm-content': {\n        caretColor: cursor,\n      },\n\n      '.cm-editor': {\n        fontFamily: fonts.code.family,\n        fontSize: rem(fonts.code.sizes[1].fontSize),\n        lineHeight: 'inherit',\n      },\n\n      '.cm-cursor, .cm-dropCursor': {borderLeftColor: cursor},\n      '&.cm-focused .cm-selectionBackground, .cm-selectionBackground, .cm-content ::selection': {\n        backgroundColor: selection,\n      },\n\n      '.cm-panels': {backgroundColor: card.bg, color: card.fg},\n      '.cm-panels.cm-panels-top': {borderBottom: `2px solid ${card.border}`},\n      '.cm-panels.cm-panels-bottom': {borderTop: `2px solid ${card.border}`},\n    },\n    {dark: color.dark},\n  )\n}\n\nfunction createHighlight(theme: Theme) {\n  const c = theme.sanity.color.base\n  const s = theme.sanity.color.syntax\n  return HighlightStyle.define([\n    {tag: t.keyword, color: s.keyword},\n    {tag: [t.propertyName, t.name, t.deleted, t.character, t.macroName], color: s.property},\n    {tag: [t.function(t.variableName), t.labelName], color: s.function},\n    {tag: [t.color, t.constant(t.name), t.standard(t.name)], color: s.variable},\n    {tag: [t.definition(t.name), t.separator], color: s.constant},\n    {\n      tag: [\n        t.typeName,\n        t.className,\n        t.number,\n        t.changed,\n        t.annotation,\n        t.modifier,\n        t.self,\n        t.namespace,\n      ],\n      color: s.number,\n    },\n    {\n      tag: [t.operator, t.operatorKeyword, t.url, t.escape, t.regexp, t.link, t.special(t.string)],\n      color: s.operator,\n    },\n    {tag: [t.meta, t.comment], color: s.comment},\n    {tag: t.strong, fontWeight: 'bold'},\n    {tag: t.emphasis, fontStyle: 'italic'},\n    {tag: t.strikethrough, textDecoration: 'line-through'},\n    {tag: t.heading, fontWeight: 'bold', color: s.property},\n    {tag: [t.atom, t.bool, t.special(t.variableName)], color: s.boolean},\n    {tag: [t.processingInstruction, t.string, t.inserted], color: s.string},\n    {tag: t.invalid, color: c.fg},\n  ])\n}\n","import {rem} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nexport const EditorRoot = styled.div`\n  width: 100%;\n  box-sizing: border-box;\n  height: 100%;\n  overflow: hidden;\n  overflow: clip;\n  position: relative;\n  display: flex;\n\n  & .cm-theme {\n    width: 100%;\n  }\n\n  & .cm-editor {\n    height: 100%;\n\n    font-size: 16px;\n    line-height: 21px;\n  }\n\n  & .cm-line {\n    padding-left: ${({theme}) => rem(theme.sanity.space[3])};\n  }\n\n  & .cm-content {\n    border-right-width: ${({theme}) => rem(theme.sanity.space[4])} !important;\n    padding-top: ${({theme}) => rem(theme.sanity.space[5])};\n  }\n`\n","import {useTheme} from '@sanity/ui'\nimport CodeMirror, {\n  EditorSelection,\n  type ReactCodeMirrorProps,\n  type ReactCodeMirrorRef,\n} from '@uiw/react-codemirror'\nimport {forwardRef, useCallback, useImperativeHandle, useRef, useState} from 'react'\n\nimport {codemirrorExtensions} from './extensions'\nimport {useCodemirrorTheme} from './useCodemirrorTheme'\nimport {EditorRoot} from './VisionCodeMirror.styled'\n\nexport interface VisionCodeMirrorHandle {\n  resetEditorContent: (newContent: string) => void\n}\n\nexport const VisionCodeMirror = forwardRef<\n  VisionCodeMirrorHandle,\n  Pick<ReactCodeMirrorProps, 'onChange'> & {\n    initialValue: ReactCodeMirrorProps['value']\n  }\n>((props, ref) => {\n  // The value prop is only passed for initial value, and is not updated when the parent component updates the value.\n  // If you need to update the value, use the resetEditorContent function.\n  const [initialValue] = useState(props.initialValue)\n  const sanityTheme = useTheme()\n  const theme = useCodemirrorTheme(sanityTheme)\n  const codeMirrorRef = useRef<ReactCodeMirrorRef>(null)\n\n  const resetEditorContent = useCallback((newContent: string) => {\n    const editorView = codeMirrorRef.current?.view\n    if (!editorView) return\n\n    const currentDoc = editorView.state.doc.toString()\n    if (newContent !== currentDoc) {\n      editorView.dispatch({\n        changes: {from: 0, to: currentDoc.length, insert: newContent},\n        selection: EditorSelection.cursor(newContent.length), // Place cursor at end\n      })\n    }\n  }, [])\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      resetEditorContent,\n    }),\n    [resetEditorContent],\n  )\n\n  return (\n    <EditorRoot>\n      <CodeMirror\n        ref={codeMirrorRef}\n        basicSetup={false}\n        theme={theme}\n        extensions={codemirrorExtensions}\n        value={initialValue}\n        onChange={props.onChange}\n      />\n    </EditorRoot>\n  )\n})\n\n// Add display name\nVisionCodeMirror.displayName = 'VisionCodeMirror'\n","import {type ClientPerspective} from '@sanity/client'\nimport isEqual from 'react-fast-compare'\nimport {type PerspectiveContextValue} from 'sanity'\n\nexport const SUPPORTED_PERSPECTIVES = ['pinnedRelease', 'raw', 'published', 'drafts'] as const\n\nexport type SupportedPerspective = (typeof SUPPORTED_PERSPECTIVES)[number]\n\n/**\n * Virtual perspectives are recognised by Vision, but do not concretely reflect the names of real\n * perspectives. Virtual perspectives are transformed into real perspectives before being used to\n * interact with data.\n *\n * For example, the `pinnedRelease` virtual perspective is transformed to the real perspective\n * currently pinned in Studio.\n */\nexport const VIRTUAL_PERSPECTIVES = ['pinnedRelease'] as const\n\nexport type VirtualPerspective = (typeof VIRTUAL_PERSPECTIVES)[number]\n\nexport function isSupportedPerspective(p: string): p is SupportedPerspective {\n  return SUPPORTED_PERSPECTIVES.includes(p as SupportedPerspective)\n}\n\nexport function isVirtualPerspective(\n  maybeVirtualPerspective: unknown,\n): maybeVirtualPerspective is VirtualPerspective {\n  return (\n    typeof maybeVirtualPerspective === 'string' &&\n    VIRTUAL_PERSPECTIVES.includes(maybeVirtualPerspective as VirtualPerspective)\n  )\n}\n\nexport function hasPinnedPerspective({selectedPerspectiveName}: PerspectiveContextValue): boolean {\n  return typeof selectedPerspectiveName !== 'undefined'\n}\n\nexport function hasPinnedPerspectiveChanged(\n  previous: PerspectiveContextValue,\n  next: PerspectiveContextValue,\n): boolean {\n  const hasPerspectiveStackChanged = !isEqual(previous.perspectiveStack, next.perspectiveStack)\n\n  return (\n    previous.selectedPerspectiveName !== next.selectedPerspectiveName || hasPerspectiveStackChanged\n  )\n}\n\nexport function getActivePerspective({\n  visionPerspective,\n  perspectiveStack,\n}: {\n  visionPerspective: ClientPerspective | SupportedPerspective | undefined\n  perspectiveStack: PerspectiveContextValue['perspectiveStack']\n}): ClientPerspective | undefined {\n  if (visionPerspective !== 'pinnedRelease') {\n    return visionPerspective\n  }\n  return perspectiveStack\n}\n","export function encodeQueryString(\n  query: string,\n  params: Record<string, unknown> = {},\n  options: Record<string, string | string[]> = {},\n): string {\n  const searchParams = new URLSearchParams()\n  searchParams.set('query', query)\n\n  for (const [key, value] of Object.entries(params)) {\n    searchParams.set(`$${key}`, JSON.stringify(value))\n  }\n\n  for (const [key, value] of Object.entries(options)) {\n    if (value) searchParams.set(key, `${value}`)\n  }\n\n  return `?${searchParams}`\n}\n","export function isPlainObject(obj: unknown): obj is Record<string, unknown> {\n  return (\n    !!obj && typeof obj === 'object' && Object.prototype.toString.call(obj) === '[object Object]'\n  )\n}\n","import {isPlainObject} from './isPlainObject'\n\nconst hasLocalStorage = supportsLocalStorage()\nconst keyPrefix = 'sanityVision:'\n\nexport interface LocalStorageish {\n  get: <T>(key: string, defaultVal: T) => T\n  set: <T>(key: string, value: T) => T\n  merge: <T>(props: T) => T\n}\n\nexport function clearLocalStorage() {\n  if (!hasLocalStorage) {\n    return\n  }\n\n  for (let i = 0; i < localStorage.length; i++) {\n    const key = localStorage.key(i)\n    if (key?.startsWith(keyPrefix)) {\n      localStorage.removeItem(key)\n    }\n  }\n}\n\nexport function getLocalStorage(namespace: string): LocalStorageish {\n  const storageKey = `${keyPrefix}${namespace}`\n  let loadedState: Record<string, unknown> | null = null\n\n  return {get, set, merge}\n\n  function get<T>(key: string, defaultVal: T): T {\n    const state = ensureState()\n    return typeof state[key] === 'undefined' ? defaultVal : (state[key] as T)\n  }\n\n  function set<T>(key: string, value: T): T {\n    const state = ensureState()\n    state[key] = value\n    localStorage.setItem(storageKey, JSON.stringify(loadedState))\n    return value\n  }\n\n  function merge<T>(props: T): T {\n    const state = {...ensureState(), ...props}\n    localStorage.setItem(storageKey, JSON.stringify(state))\n    return state\n  }\n\n  function ensureState(): Record<string, unknown> {\n    if (loadedState === null) {\n      loadedState = loadState()\n    }\n\n    return loadedState\n  }\n\n  function loadState() {\n    if (!hasLocalStorage) {\n      return {}\n    }\n\n    try {\n      const stored = JSON.parse(localStorage.getItem(storageKey) || '{}')\n      return isPlainObject(stored) ? stored : {}\n    } catch (err) {\n      return {}\n    }\n  }\n}\n\nfunction supportsLocalStorage() {\n  const mod = 'lsCheck'\n  try {\n    localStorage.setItem(mod, mod)\n    localStorage.removeItem(mod)\n    return true\n  } catch (err) {\n    return false\n  }\n}\n","export interface ParsedApiQueryString {\n  query: string\n  params: Record<string, unknown>\n  options: Record<string, string>\n}\n\nexport function parseApiQueryString(qs: URLSearchParams): ParsedApiQueryString {\n  const params: Record<string, unknown> = {}\n  const options: Record<string, string> = {}\n\n  for (const [key, value] of qs.entries()) {\n    if (key[0] === '$') {\n      params[key.slice(1)] = JSON.parse(value)\n      continue\n    }\n\n    if (key === 'perspective') {\n      options[key] = value\n      continue\n    }\n  }\n\n  return {query: qs.get('query') || '', params, options}\n}\n","export function prefixApiVersion(version: string): string {\n  if (version[0] !== 'v' && version !== 'other') {\n    return `v${version}`\n  }\n\n  return version\n}\n","export function validateApiVersion(apiVersion: string): boolean {\n  const parseableApiVersion = apiVersion.replace(/^v/, '').trim().toUpperCase()\n\n  const isValidApiVersion =\n    parseableApiVersion.length > 0 &&\n    (parseableApiVersion === 'X' ||\n      parseableApiVersion === '1' ||\n      (/^\\d{4}-\\d{2}-\\d{2}$/.test(parseableApiVersion) && !isNaN(Date.parse(parseableApiVersion))))\n\n  return isValidApiVersion\n}\n","import JSON5 from 'json5'\nimport {type TFunction} from 'sanity'\n\nexport function tryParseParams(\n  val: string,\n  t: TFunction<'vision', undefined>,\n): Record<string, unknown> | Error {\n  try {\n    const parsed = val ? JSON5.parse(val) : {}\n    return typeof parsed === 'object' && parsed && !Array.isArray(parsed) ? parsed : {}\n  } catch (err) {\n    // JSON5 always prefixes the error message with JSON5:, so we remove it\n    // to clean up the error tooltip\n    err.message = `${t('params.error.params-invalid-json')}:\\n\\n${err.message.replace(\n      'JSON5:',\n      '',\n    )}`\n    return err\n  }\n}\n","import {Box, Card, Flex, Label, rem, Text} from '@sanity/ui'\nimport {css, styled} from 'styled-components'\n\nexport const Root = styled(Flex)`\n  .sidebarPanes .Pane {\n    overflow-y: auto;\n    overflow-x: hidden;\n  }\n\n  & .Resizer {\n    background: var(--card-border-color);\n    opacity: 1;\n    z-index: 1;\n    box-sizing: border-box;\n    background-clip: padding-box;\n    border: solid transparent;\n  }\n\n  & .Resizer:hover {\n    border-color: var(--card-shadow-ambient-color);\n  }\n\n  & .Resizer.horizontal {\n    height: 11px;\n    margin: -5px 0;\n    border-width: 5px 0;\n    cursor: row-resize;\n    width: 100%;\n    z-index: 4;\n  }\n\n  & .Resizer.vertical {\n    width: 11px;\n    margin: 0 -5px;\n    border-width: 0 5px;\n    cursor: col-resize;\n    z-index: 2; /* To prevent the resizer from being hidden behind CodeMirror scroll area */\n  }\n\n  .Resizer.disabled {\n    cursor: not-allowed;\n  }\n\n  .Resizer.disabled:hover {\n    border-color: transparent;\n  }\n`\n\nRoot.displayName = 'Root'\n\nexport const Header = styled(Card)`\n  border-bottom: 1px solid var(--card-border-color);\n`\n\nexport const StyledLabel = styled(Label)`\n  flex: 1;\n`\n\nexport const SplitpaneContainer = styled(Box)`\n  position: relative;\n`\n\nexport const QueryCopyLink = styled.a`\n  cursor: pointer;\n  margin-right: auto;\n`\n\nexport const InputBackgroundContainer = styled(Box)`\n  position: absolute;\n  top: 1rem;\n  left: 0;\n  padding: 0;\n  margin: 0;\n  z-index: 10;\n  right: 0;\n\n  ${StyledLabel} {\n    user-select: none;\n  }\n`\n\nexport const InputBackgroundContainerLeft = styled(InputBackgroundContainer)`\n  // This is so its aligned with the gutters of CodeMirror\n  left: 33px;\n`\n\nexport const InputContainer = styled(Card)`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  flex-direction: column;\n`\n\nexport const ResultOuterContainer = styled(Flex)`\n  height: 100%;\n`\n\nexport const ResultInnerContainer = styled(Box)`\n  position: relative;\n`\n\nexport const ResultContainer = styled(Card)<{$isInvalid: boolean}>`\n  height: 100%;\n  width: 100%;\n  position: absolute;\n  max-width: 100%;\n\n  ${({$isInvalid}) =>\n    $isInvalid &&\n    css`\n      &:after {\n        background-color: var(--card-bg-color);\n        content: '';\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        width: 100%;\n      }\n    `}\n`\n\nexport const Result = styled(Box)`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  z-index: 20;\n`\n\nexport const ResultFooter = styled(Flex)`\n  border-top: 1px solid var(--card-border-color);\n`\n\nexport const TimingsCard = styled(Card)`\n  position: relative;\n`\n\nexport const TimingsContainer = styled(Box)`\n  width: 100%;\n  height: 100%;\n`\n\nexport const TimingsTextContainer = styled(Flex)`\n  height: 100%;\n  min-height: ${({theme}) =>\n    rem(\n      theme.sanity.space[3] * 2 +\n        theme.sanity.fonts.text.sizes[2].lineHeight -\n        theme.sanity.fonts.text.sizes[2].ascenderHeight -\n        theme.sanity.fonts.text.sizes[2].descenderHeight,\n    )};\n`\n\nexport const DownloadsCard = styled(Card)`\n  position: relative;\n`\n\nexport const SaveResultLabel = styled(Text)`\n  transform: initial;\n  &:before,\n  &:after {\n    content: none;\n  }\n  > span {\n    display: flex !important;\n    gap: ${({theme}) => rem(theme.sanity.space[3])};\n    align-items: center;\n  }\n`\n\nexport const ControlsContainer = styled(Box)`\n  border-top: 1px solid var(--card-border-color);\n`\n","import {ErrorOutlineIcon} from '@sanity/icons'\nimport {Box, Card, Flex, Text, Tooltip} from '@sanity/ui'\nimport {debounce} from 'lodash'\nimport {type RefObject, useCallback, useEffect, useMemo, useState} from 'react'\nimport {type TFunction, useTranslation} from 'sanity'\n\nimport {VisionCodeMirror, type VisionCodeMirrorHandle} from '../codemirror/VisionCodeMirror'\nimport {visionLocaleNamespace} from '../i18n'\nimport {tryParseParams} from '../util/tryParseParams'\nimport {type Params} from './VisionGui'\nimport {InputBackgroundContainerLeft, StyledLabel} from './VisionGui.styled'\n\nconst defaultValue = `{\\n  \\n}`\n\nexport interface ParamsEditorProps {\n  value: string\n  onChange: (changeEvt: Params) => void\n  paramsError: string | undefined\n  hasValidParams: boolean\n  editorRef: RefObject<VisionCodeMirrorHandle | null>\n}\n\nexport interface ParamsEditorChange {\n  valid: boolean\n}\n\nexport function ParamsEditor(props: ParamsEditorProps) {\n  const {onChange, paramsError, hasValidParams, editorRef} = props\n  const {t} = useTranslation(visionLocaleNamespace)\n  const {raw: value, error, parsed, valid} = parseParams(props.value, t)\n  const [isValid, setValid] = useState(valid)\n  const [init, setInit] = useState(false)\n\n  // Emit onChange on very first render\n  useEffect(() => {\n    if (!init) {\n      onChange({parsed, raw: value, valid: isValid, error})\n      setInit(true)\n    }\n  }, [error, init, isValid, onChange, parsed, value])\n\n  const handleChangeRaw = useCallback(\n    (newValue: string) => {\n      const event = parseParams(newValue, t)\n      setValid(event.valid)\n      onChange(event)\n    },\n    [onChange, t],\n  )\n\n  const handleChange = useMemo(() => debounce(handleChangeRaw, 333), [handleChangeRaw])\n  return (\n    <Card flex={1} tone={hasValidParams ? 'default' : 'critical'} data-testid=\"params-editor\">\n      <InputBackgroundContainerLeft>\n        <Flex>\n          <StyledLabel muted>{t('params.label')}</StyledLabel>\n          {paramsError && (\n            <Tooltip animate placement=\"top\" portal content={<Text size={1}>{paramsError}</Text>}>\n              <Box padding={1} marginX={2}>\n                <Text>\n                  <ErrorOutlineIcon />\n                </Text>\n              </Box>\n            </Tooltip>\n          )}\n        </Flex>\n      </InputBackgroundContainerLeft>\n      <VisionCodeMirror\n        ref={editorRef}\n        initialValue={props.value || defaultValue}\n        onChange={handleChange}\n      />\n    </Card>\n  )\n}\n\nexport function parseParams(\n  value: string,\n  t: TFunction<typeof visionLocaleNamespace, undefined>,\n): Params {\n  const parsedParams = tryParseParams(value, t)\n  const params = parsedParams instanceof Error ? {} : parsedParams\n  const validationError = parsedParams instanceof Error ? parsedParams.message : undefined\n  const isValid = !validationError\n\n  return {\n    parsed: params,\n    raw: value,\n    valid: isValid,\n    error: validationError,\n  }\n}\n","import {useEffect, useState} from 'react'\n\ninterface PaneSizeOptions {\n  defaultSize: number\n  size?: number\n  allowResize: boolean\n  minSize: number\n  maxSize: number\n}\nfunction narrowBreakpoint(): boolean {\n  return typeof window !== 'undefined' && window.innerWidth > 600\n}\n\nfunction calculatePaneSizeOptions(height: number | undefined): PaneSizeOptions {\n  let rootHeight = height\n\n  if (!rootHeight) {\n    // Initial root height without header\n    rootHeight =\n      typeof window !== 'undefined' && typeof document !== 'undefined'\n        ? document.body.getBoundingClientRect().height - 60\n        : 0\n  }\n  return {\n    defaultSize: rootHeight / (narrowBreakpoint() ? 2 : 1),\n    size: rootHeight > 550 ? undefined : rootHeight * 0.4,\n    allowResize: rootHeight > 550,\n    minSize: Math.min(170, Math.max(170, rootHeight / 2)),\n    maxSize: rootHeight > 650 ? rootHeight * 0.7 : rootHeight * 0.6,\n  }\n}\n\nexport function usePaneSize({\n  visionRootRef,\n}: {\n  visionRootRef: React.RefObject<HTMLDivElement | null>\n}) {\n  const [isNarrowBreakpoint, setIsNarrowBreakpoint] = useState(() => narrowBreakpoint())\n  const [paneSizeOptions, setPaneSizeOptions] = useState<PaneSizeOptions>(() =>\n    calculatePaneSizeOptions(undefined),\n  )\n\n  useEffect(() => {\n    if (!visionRootRef.current) {\n      return undefined\n    }\n    const handleResize = (entries: ResizeObserverEntry[]) => {\n      setIsNarrowBreakpoint(narrowBreakpoint())\n      const entry = entries?.[0]\n      if (entry) {\n        setPaneSizeOptions(calculatePaneSizeOptions(entry.contentRect.height))\n      }\n    }\n    const resizeObserver = new ResizeObserver(handleResize)\n    resizeObserver.observe(visionRootRef.current)\n\n    return () => {\n      resizeObserver.disconnect()\n    }\n  }, [visionRootRef])\n\n  return {paneSizeOptions, isNarrowBreakpoint}\n}\n","import {PlayIcon, StopIcon} from '@sanity/icons'\nimport {Box, Button, Card, Flex, Hotkeys, Text, Tooltip} from '@sanity/ui'\nimport {useTranslation} from 'sanity'\n\nimport {visionLocaleNamespace} from '../i18n'\nimport {ControlsContainer} from './VisionGui.styled'\n\nexport interface VisionGuiControlsProps {\n  hasValidParams: boolean\n  queryInProgress: boolean\n  listenInProgress: boolean\n  onQueryExecution: () => void\n  onListenExecution: () => void\n}\n\n/**\n * Vision GUI controls\n * To handle query and listen execution.\n */\nexport function VisionGuiControls({\n  hasValidParams,\n  listenInProgress,\n  queryInProgress,\n  onQueryExecution,\n  onListenExecution,\n}: VisionGuiControlsProps) {\n  const {t} = useTranslation(visionLocaleNamespace)\n\n  return (\n    <ControlsContainer>\n      <Card padding={3} paddingX={3}>\n        <Tooltip\n          content={\n            <Card radius={4}>\n              <Text size={1} muted>\n                {t('params.error.params-invalid-json')}\n              </Text>\n            </Card>\n          }\n          placement=\"top\"\n          disabled={hasValidParams}\n          portal\n        >\n          <Flex justify=\"space-evenly\">\n            <Box flex={1}>\n              <Tooltip\n                content={\n                  <Card radius={4}>\n                    <Hotkeys keys={['Ctrl', 'Enter']} />\n                  </Card>\n                }\n                placement=\"top\"\n                portal\n              >\n                <Button\n                  width=\"fill\"\n                  onClick={onQueryExecution}\n                  type=\"button\"\n                  icon={queryInProgress ? StopIcon : PlayIcon}\n                  disabled={listenInProgress || !hasValidParams}\n                  tone={queryInProgress ? 'positive' : 'primary'}\n                  text={queryInProgress ? t('action.query-cancel') : t('action.query-execute')}\n                />\n              </Tooltip>\n            </Box>\n            <Box flex={1} marginLeft={3}>\n              <Button\n                width=\"fill\"\n                onClick={onListenExecution}\n                type=\"button\"\n                icon={listenInProgress ? StopIcon : PlayIcon}\n                text={listenInProgress ? t('action.listen-cancel') : t('action.listen-execute')}\n                mode=\"ghost\"\n                disabled={!hasValidParams}\n                tone={listenInProgress ? 'positive' : 'default'}\n              />\n            </Box>\n          </Flex>\n        </Tooltip>\n      </Card>\n    </ControlsContainer>\n  )\n}\n","import {Box} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nexport const PerspectivePopoverContent = styled(Box)`\n  /* This limits the width of the popover content */\n  max-width: 240px;\n`\n\nexport const PerspectivePopoverLink = styled.a`\n  cursor: pointer;\n  margin-right: auto;\n`\n","import {HelpCircleIcon} from '@sanity/icons'\nimport {\n  Badge,\n  Box,\n  Button,\n  Card,\n  type CardTone,\n  Inline,\n  Popover,\n  Stack,\n  Text,\n  useClickOutsideEvent,\n} from '@sanity/ui'\nimport {useCallback, useRef, useState} from 'react'\nimport {Translate, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {visionLocaleNamespace} from '../i18n'\nimport {PerspectivePopoverContent, PerspectivePopoverLink} from './PerspectivePopover.styled'\n\nconst Dot = styled.div<{tone: CardTone}>`\n  width: 4px;\n  height: 4px;\n  border-radius: 3px;\n  box-shadow: 0 0 0 1px var(--card-bg-color);\n  background-color: ${({tone}) => `var(--card-badge-${tone}-dot-color)`};\n`\n\nconst SHOW_DEFAULT_PERSPECTIVE_NOTIFICATION = false\n\nexport function PerspectivePopover() {\n  const [open, setOpen] = useState(false)\n  const buttonRef = useRef<HTMLButtonElement | null>(null)\n  const popoverRef = useRef<HTMLDivElement | null>(null)\n\n  const handleClick = useCallback(() => setOpen((o) => !o), [])\n\n  const {t} = useTranslation(visionLocaleNamespace)\n\n  useClickOutsideEvent(\n    () => setOpen(false),\n    () => [buttonRef.current, popoverRef.current],\n  )\n\n  return (\n    <Popover\n      content={\n        <PerspectivePopoverContent>\n          <Stack space={4}>\n            <Inline space={2}>\n              <Text weight=\"medium\">{t('settings.perspectives.title')}</Text>\n            </Inline>\n\n            <Card>\n              <Text muted>{t('settings.perspectives.description')}</Text>\n            </Card>\n            <Card>\n              <Stack space={2}>\n                <Box>\n                  <Badge tone=\"primary\">{t('label.new')}</Badge>\n                </Box>\n                <Text muted>\n                  <Translate\n                    t={t}\n                    i18nKey=\"settings.perspective.preview-drafts-renamed-to-drafts.description\"\n                  />\n                </Text>\n              </Stack>\n            </Card>\n            {SHOW_DEFAULT_PERSPECTIVE_NOTIFICATION ? (\n              <Card>\n                <Badge tone=\"caution\">{t('label.new')}</Badge>\n                <Card>\n                  <Text muted>\n                    <Translate t={t} i18nKey=\"settings.perspectives.new-default.description\" />\n                  </Text>\n                </Card>\n              </Card>\n            ) : null}\n\n            <Card>\n              <Text>\n                <PerspectivePopoverLink href=\"https://sanity.io/docs/perspectives\" target=\"_blank\">\n                  {t('settings.perspectives.action.docs-link')} &rarr;\n                </PerspectivePopoverLink>\n              </Text>\n            </Card>\n          </Stack>\n        </PerspectivePopoverContent>\n      }\n      placement=\"bottom-start\"\n      portal\n      padding={3}\n      ref={popoverRef}\n      open={open}\n    >\n      <Button\n        icon={HelpCircleIcon}\n        mode=\"bleed\"\n        padding={2}\n        paddingRight={1}\n        tone=\"primary\"\n        fontSize={1}\n        ref={buttonRef}\n        onClick={handleClick}\n        selected={open}\n      >\n        <Dot tone={SHOW_DEFAULT_PERSPECTIVE_NOTIFICATION ? 'caution' : 'primary'} />\n      </Button>\n    </Popover>\n  )\n}\n","import {CopyIcon} from '@sanity/icons'\nimport {Box, Button, Card, Flex, Grid, Inline, Select, Stack, TextInput, Tooltip} from '@sanity/ui'\nimport {\n  type ChangeEvent,\n  type ComponentType,\n  Fragment,\n  type RefObject,\n  useCallback,\n  useMemo,\n  useRef,\n} from 'react'\nimport {type PerspectiveContextValue, type TFunction, usePerspective, useTranslation} from 'sanity'\n\nimport {API_VERSIONS} from '../apiVersions'\nimport {visionLocaleNamespace} from '../i18n'\nimport {\n  hasPinnedPerspective,\n  SUPPORTED_PERSPECTIVES,\n  type SupportedPerspective,\n} from '../perspectives'\nimport {PerspectivePopover} from './PerspectivePopover'\nimport {Header, QueryCopyLink, StyledLabel} from './VisionGui.styled'\n\nconst PinnedReleasePerspectiveOption: ComponentType<{\n  pinnedPerspective: PerspectiveContextValue\n  t: TFunction\n}> = ({pinnedPerspective, t}) => {\n  const name =\n    typeof pinnedPerspective.selectedPerspective === 'object'\n      ? pinnedPerspective.selectedPerspective.metadata.title\n      : pinnedPerspective.selectedPerspectiveName\n\n  const label = hasPinnedPerspective(pinnedPerspective)\n    ? `(${t('settings.perspectives.pinned-release-label')})`\n    : t('settings.perspectives.pinned-release-label')\n\n  const text = useMemo(\n    () => [name, label].filter((value) => typeof value !== 'undefined').join(' '),\n    [label, name],\n  )\n\n  return (\n    <option value=\"pinnedRelease\" disabled={!hasPinnedPerspective(pinnedPerspective)}>\n      {text}\n    </option>\n  )\n}\n\nexport interface VisionGuiHeaderProps {\n  onChangeDataset: (evt: ChangeEvent<HTMLSelectElement>) => void\n  dataset: string\n  customApiVersion: string | false\n  apiVersion: string\n  onChangeApiVersion: (evt: ChangeEvent<HTMLSelectElement>) => void\n  datasets: string[]\n  customApiVersionElementRef: RefObject<HTMLInputElement | null>\n  onCustomApiVersionChange: (evt: ChangeEvent<HTMLInputElement>) => void\n  isValidApiVersion: boolean\n  onChangePerspective: (evt: ChangeEvent<HTMLSelectElement>) => void\n  url?: string\n  perspective?: SupportedPerspective\n}\n\nexport function VisionGuiHeader({\n  onChangeDataset,\n  dataset,\n  customApiVersion,\n  apiVersion,\n  onChangeApiVersion,\n  datasets,\n  customApiVersionElementRef,\n  onCustomApiVersionChange,\n  isValidApiVersion,\n  onChangePerspective,\n  url,\n  perspective,\n}: VisionGuiHeaderProps) {\n  const pinnedPerspective = usePerspective()\n  const {t} = useTranslation(visionLocaleNamespace)\n  const operationUrlElement = useRef<HTMLInputElement | null>(null)\n  const handleCopyUrl = useCallback(() => {\n    const el = operationUrlElement.current\n    if (!el) return\n\n    try {\n      el.select()\n      document.execCommand('copy')\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('Unable to copy to clipboard :(')\n    }\n  }, [])\n\n  return (\n    <Header paddingX={3} paddingY={2}>\n      <Grid columns={[1, 4, 8, 12]}>\n        {/* Dataset selector */}\n        <Box padding={1} column={2}>\n          <Stack>\n            <Card paddingTop={2} paddingBottom={3}>\n              <StyledLabel>{t('settings.dataset-label')}</StyledLabel>\n            </Card>\n            <Select value={dataset} onChange={onChangeDataset}>\n              {datasets.map((ds: string) => (\n                <option key={ds}>{ds}</option>\n              ))}\n            </Select>\n          </Stack>\n        </Box>\n\n        {/* API version selector */}\n        <Box padding={1} column={2}>\n          <Stack>\n            <Card paddingTop={2} paddingBottom={3}>\n              <StyledLabel>{t('settings.api-version-label')}</StyledLabel>\n            </Card>\n            <Select\n              data-testid=\"api-version-selector\"\n              value={customApiVersion === false ? apiVersion : 'other'}\n              onChange={onChangeApiVersion}\n            >\n              {API_VERSIONS.map((version) => (\n                <option key={version}>{version}</option>\n              ))}\n              <option key=\"other\" value=\"other\">\n                {t('settings.other-api-version-label')}\n              </option>\n            </Select>\n          </Stack>\n        </Box>\n\n        {/* Custom API version input */}\n        {customApiVersion !== false && (\n          <Box padding={1} column={2}>\n            <Stack>\n              <Card paddingTop={2} paddingBottom={3}>\n                <StyledLabel textOverflow=\"ellipsis\">\n                  {t('settings.custom-api-version-label')}\n                </StyledLabel>\n              </Card>\n\n              <TextInput\n                ref={customApiVersionElementRef}\n                value={customApiVersion}\n                onChange={onCustomApiVersionChange}\n                customValidity={\n                  isValidApiVersion ? undefined : t('settings.error.invalid-api-version')\n                }\n                maxLength={11}\n              />\n            </Stack>\n          </Box>\n        )}\n\n        {/* Perspective selector */}\n        <Box padding={1} column={2}>\n          <Stack>\n            <Card paddingBottom={1}>\n              <Inline space={1}>\n                <Box>\n                  <StyledLabel>{t('settings.perspective-label')}</StyledLabel>\n                </Box>\n\n                <Box>\n                  <PerspectivePopover />\n                </Box>\n              </Inline>\n            </Card>\n            <Select value={perspective || 'default'} onChange={onChangePerspective}>\n              {SUPPORTED_PERSPECTIVES.map((perspectiveName) => {\n                if (perspectiveName === 'pinnedRelease') {\n                  return (\n                    <Fragment key=\"pinnedRelease\">\n                      <PinnedReleasePerspectiveOption pinnedPerspective={pinnedPerspective} t={t} />\n                      <option key=\"default\" value=\"default\">\n                        {t('settings.perspectives.default')}\n                      </option>\n                      <hr />\n                    </Fragment>\n                  )\n                }\n                return <option key={perspectiveName}>{perspectiveName}</option>\n              })}\n            </Select>\n          </Stack>\n        </Box>\n\n        {/* Query URL (for copying) */}\n        {typeof url === 'string' ? (\n          <Box padding={1} flex={1} column={customApiVersion === false ? 6 : 4}>\n            <Stack>\n              <Card paddingTop={2} paddingBottom={3}>\n                <StyledLabel>\n                  {t('query.url')}&nbsp;\n                  <QueryCopyLink onClick={handleCopyUrl}>\n                    [{t('action.copy-url-to-clipboard')}]\n                  </QueryCopyLink>\n                </StyledLabel>\n              </Card>\n              <Flex flex={1} gap={1}>\n                <Box flex={1}>\n                  <TextInput readOnly type=\"url\" ref={operationUrlElement} value={url} />\n                </Box>\n                <Tooltip content={t('action.copy-url-to-clipboard')}>\n                  <Button\n                    aria-label={t('action.copy-url-to-clipboard')}\n                    type=\"button\"\n                    mode=\"ghost\"\n                    icon={CopyIcon}\n                    onClick={handleCopyUrl}\n                  />\n                </Tooltip>\n              </Flex>\n            </Stack>\n          </Box>\n        ) : (\n          <Box flex={1} />\n        )}\n      </Grid>\n    </Header>\n  )\n}\n","import {json2csv} from 'json-2-csv'\n\nfunction getBlobUrl(content: string, mimeType: string): string {\n  return URL.createObjectURL(\n    new Blob([content], {\n      type: mimeType,\n    }),\n  )\n}\n\nfunction getMemoizedBlobUrlResolver(mimeType: string, stringEncoder: (input: any) => string) {\n  return (() => {\n    let prevResult = ''\n    let prevContent = ''\n    return (input: unknown) => {\n      const content = stringEncoder(input)\n      if (typeof content !== 'string' || content === '') {\n        return undefined\n      }\n\n      if (content === prevContent) {\n        return prevResult\n      }\n\n      prevContent = content\n      if (prevResult) {\n        URL.revokeObjectURL(prevResult)\n      }\n\n      prevResult = getBlobUrl(content, mimeType)\n      return prevResult\n    }\n  })()\n}\n\nexport const getJsonBlobUrl = getMemoizedBlobUrlResolver('application/json', (input) =>\n  JSON.stringify(input, null, 2),\n)\n\nexport const getCsvBlobUrl = getMemoizedBlobUrlResolver('text/csv', (input) => {\n  return json2csv(Array.isArray(input) ? input : [input]).trim()\n})\n","import {Code} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nexport const ErrorCode = styled(Code)`\n  color: ${({theme}) => theme.sanity.color.muted.critical.enabled.fg};\n`\n","import {Box} from '@sanity/ui'\nimport {useTranslation} from 'sanity'\n\nimport {visionLocaleNamespace} from '../i18n'\nimport {ErrorCode} from './QueryErrorDialog.styled'\n\ninterface ContentLakeQueryError {\n  details: {\n    query: string\n    start: number\n    end: number\n\n    lineNumber?: number\n    column?: number\n  }\n}\n\nexport function QueryErrorDetails({error}: {error: ContentLakeQueryError | Error}) {\n  const {t} = useTranslation(visionLocaleNamespace)\n\n  if (!('details' in error)) {\n    return null\n  }\n\n  const details = {...error.details, ...mapToLegacyDetails(error.details)}\n  if (!details.line) {\n    return null\n  }\n\n  return (\n    <div>\n      <ErrorCode size={1}>{`${details.line}\\n${dashLine(\n        details.column,\n        details.columnEnd,\n      )}`}</ErrorCode>\n      <Box marginTop={4}>\n        <ErrorCode size={1}>{`${t('query.error.line')}:   ${details.lineNumber}\\n${t(\n          'query.error.column',\n        )}: ${details.column}`}</ErrorCode>\n      </Box>\n    </div>\n  )\n}\n\nfunction mapToLegacyDetails(details: ContentLakeQueryError['details']) {\n  if (!details || typeof details.query !== 'string' || typeof details.start !== 'number') {\n    return {}\n  }\n\n  const {query, start, end} = details\n  const lineStart = query.slice(0, start).lastIndexOf('\\n') + 1\n  const lineNumber = (query.slice(0, lineStart).match(/\\n/g) || []).length\n  const line = query.slice(lineStart, query.indexOf('\\n', lineStart))\n  const column = start - lineStart\n  const columnEnd = typeof end === 'number' ? end - lineStart : undefined\n\n  return {line, lineNumber, column, columnEnd}\n}\n\nfunction dashLine(column: number, columnEnd: number | undefined): string {\n  const line = '-'.repeat(column)\n  const hats = `^`.repeat(columnEnd ? columnEnd - column : 1)\n  return `${line}${hats}`\n}\n","import {Stack} from '@sanity/ui'\n\nimport {QueryErrorDetails} from './QueryErrorDetails'\nimport {ErrorCode} from './QueryErrorDialog.styled'\n\nexport function QueryErrorDialog(props: {error: Error}) {\n  return (\n    <Stack space={5} marginTop={2}>\n      <ErrorCode size={1}>{props.error.message}</ErrorCode>\n      <QueryErrorDetails error={props.error} />\n    </Stack>\n  )\n}\n","import {rem, type Theme} from '@sanity/ui'\nimport {css, styled} from 'styled-components'\n\nexport const ResultViewWrapper = styled.div<{theme: Theme}>(({theme}) => {\n  const {color, fonts, space} = theme.sanity\n\n  return css`\n    & .json-inspector,\n    & .json-inspector .json-inspector__selection {\n      font-family: ${fonts.code.family};\n      font-size: ${fonts.code.sizes[2].fontSize}px;\n      line-height: ${fonts.code.sizes[2].lineHeight}px;\n      color: var(--card-code-fg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf {\n      padding-left: ${rem(space[4])};\n    }\n\n    & .json-inspector .json-inspector__leaf.json-inspector__leaf_root {\n      padding-top: ${rem(space[0])};\n      padding-left: 0;\n    }\n\n    & .json-inspector > .json-inspector__leaf_root > .json-inspector__line > .json-inspector__key {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__line {\n      display: block;\n      position: relative;\n      cursor: default;\n    }\n\n    & .json-inspector .json-inspector__line::after {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: -200px;\n      right: -50px;\n      bottom: 0;\n      z-index: -1;\n      pointer-events: none;\n    }\n\n    & .json-inspector .json-inspector__line:hover::after {\n      background: var(--card-code-bg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line {\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line::before {\n      content: '▸ ';\n      margin-left: calc(0px - ${rem(space[4])});\n      font-size: ${fonts.code.sizes[2].fontSize}px;\n      line-height: ${fonts.code.sizes[2].lineHeight}px;\n    }\n\n    &\n      .json-inspector\n      .json-inspector__leaf_expanded.json-inspector__leaf_composite\n      > .json-inspector__line::before {\n      content: '▾ ';\n      font-size: ${fonts.code.sizes[2].fontSize}px;\n      line-height: ${fonts.code.sizes[2].lineHeight}px;\n    }\n\n    & .json-inspector .json-inspector__radio,\n    & .json-inspector .json-inspector__flatpath {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__value {\n      margin-left: ${rem(space[4] / 2)};\n    }\n\n    &\n      .json-inspector\n      > .json-inspector__leaf_root\n      > .json-inspector__line\n      > .json-inspector__key\n      + .json-inspector__value {\n      margin: 0;\n    }\n\n    & .json-inspector .json-inspector__key {\n      color: ${color.syntax.property};\n    }\n\n    & .json-inspector .json-inspector__value_helper,\n    & .json-inspector .json-inspector__value_null {\n      color: ${color.syntax.constant};\n    }\n\n    & .json-inspector .json-inspector__not-found {\n      padding-top: ${rem(space[2])};\n    }\n\n    & .json-inspector .json-inspector__value_string {\n      color: ${color.syntax.string};\n      word-break: break-word;\n    }\n\n    & .json-inspector .json-inspector__value_boolean {\n      color: ${color.syntax.boolean};\n    }\n\n    & .json-inspector .json-inspector__value_number {\n      color: ${color.syntax.number};\n    }\n\n    & .json-inspector .json-inspector__show-original {\n      display: inline-block;\n      padding: 0 6px;\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__show-original:hover {\n      color: inherit;\n    }\n\n    & .json-inspector .json-inspector__show-original::before {\n      content: '↔';\n    }\n\n    & .json-inspector .json-inspector__show-original:hover::after {\n      content: ' expand';\n    }\n  `\n})\n","import {JsonInspector} from '@rexxars/react-json-inspector'\nimport {LinkIcon} from '@sanity/icons'\nimport {Code} from '@sanity/ui'\nimport LRU from 'quick-lru'\nimport {useDataset} from 'sanity'\nimport {IntentLink} from 'sanity/router'\n\nimport {ResultViewWrapper} from './ResultView.styled'\n\nconst lru = new LRU({maxSize: 50000})\n\nexport function ResultView(props: {data: unknown; datasetName: string}): React.JSX.Element {\n  const {data, datasetName} = props\n  const workspaceDataset = useDataset()\n\n  if (isRecord(data) || Array.isArray(data)) {\n    return (\n      <ResultViewWrapper>\n        <JsonInspector\n          data={data}\n          search={false}\n          isExpanded={isExpanded}\n          onClick={toggleExpanded}\n          interactiveLabel={workspaceDataset === datasetName ? DocumentEditLabel : undefined}\n        />\n      </ResultViewWrapper>\n    )\n  }\n\n  return <Code language=\"json\">{JSON.stringify(data)}</Code>\n}\n\nfunction DocumentEditLabel(props: {value: string; isKey: boolean; keypath: string}) {\n  if (props.isKey || (!props.keypath.endsWith('_id') && !props.keypath.endsWith('_ref'))) {\n    return null\n  }\n\n  return (\n    <IntentLink intent=\"edit\" params={{id: props.value}}>\n      <LinkIcon />\n    </IntentLink>\n  )\n}\n\nfunction isExpanded(keyPath: string, value: unknown): boolean {\n  const depthLimit = 4\n  const cached = lru.get(keyPath) as boolean | undefined\n\n  if (typeof cached === 'boolean') {\n    return cached\n  }\n\n  const segments = keyPath.split('.', depthLimit)\n  if (segments.length === depthLimit) {\n    return false\n  }\n\n  if (Array.isArray(value)) {\n    return true\n  }\n\n  return isRecord(value) && !segments.some((key) => isArrayKeyOverLimit(key))\n}\n\nfunction toggleExpanded(event: {path: string}): void {\n  const {path} = event\n  const current = lru.get(path)\n\n  if (current === undefined) {\n    // something is wrong\n    return\n  }\n\n  lru.set(path, !current)\n}\n\nfunction isRecord(value: unknown): value is Record<string, unknown> {\n  return value !== null && typeof value === 'object' && !Array.isArray(value)\n}\n\nconst numeric = /^\\d+$/\nfunction isArrayKeyOverLimit(segment: string, limit = 10) {\n  return numeric.test(segment) && parseInt(segment, 10) > limit\n}\n","import {DocumentSheetIcon} from '@sanity/icons'\nimport {Button, Tooltip} from '@sanity/ui'\nimport {type MouseEvent} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {visionLocaleNamespace} from '../i18n'\n\ninterface SaveButtonProps {\n  blobUrl: string | undefined\n}\n\nfunction preventSave(evt: MouseEvent<HTMLButtonElement>) {\n  return evt.preventDefault()\n}\n\nexport function SaveCsvButton({blobUrl}: SaveButtonProps) {\n  const {t} = useTranslation(visionLocaleNamespace)\n  const isDisabled = !blobUrl\n\n  const button = (\n    <Button\n      as=\"a\"\n      disabled={isDisabled}\n      download={isDisabled ? undefined : 'query-result.csv'}\n      href={blobUrl}\n      icon={DocumentSheetIcon}\n      mode=\"ghost\"\n      onClick={isDisabled ? preventSave : undefined}\n      // eslint-disable-next-line @sanity/i18n/no-attribute-string-literals\n      text=\"CSV\" // String is a File extension\n      tone=\"default\"\n    />\n  )\n\n  return isDisabled ? (\n    <Tooltip content={t('result.save-result-as-csv.not-csv-encodable')} placement=\"top\">\n      {button}\n    </Tooltip>\n  ) : (\n    button\n  )\n}\n\nexport function SaveJsonButton({blobUrl}: SaveButtonProps) {\n  return (\n    <Button\n      as=\"a\"\n      download={'query-result.json'}\n      href={blobUrl}\n      icon={DocumentSheetIcon}\n      mode=\"ghost\"\n      // eslint-disable-next-line @sanity/i18n/no-attribute-string-literals\n      text=\"JSON\" // String is a File extension\n      tone=\"default\"\n    />\n  )\n}\n","/* eslint-disable complexity */\nimport {type MutationEvent} from '@sanity/client'\nimport {Box, Text} from '@sanity/ui'\nimport {Translate, useTranslation} from 'sanity'\n\nimport {visionLocaleNamespace} from '../i18n'\nimport {getCsvBlobUrl, getJsonBlobUrl} from '../util/getBlobUrl'\nimport {DelayedSpinner} from './DelayedSpinner'\nimport {QueryErrorDialog} from './QueryErrorDialog'\nimport {ResultView} from './ResultView'\nimport {SaveCsvButton, SaveJsonButton} from './SaveResultButtons'\nimport {\n  DownloadsCard,\n  InputBackgroundContainer,\n  Result,\n  ResultContainer,\n  ResultFooter,\n  ResultInnerContainer,\n  ResultOuterContainer,\n  SaveResultLabel,\n  StyledLabel,\n  TimingsCard,\n  TimingsTextContainer,\n} from './VisionGui.styled'\n\ninterface VisionGuiResultProps {\n  error?: Error | undefined\n  queryInProgress: boolean\n  queryResult?: unknown | undefined\n  listenInProgress: boolean\n  listenMutations: MutationEvent[]\n  dataset: string\n  queryTime: number | undefined\n  e2eTime: number | undefined\n}\n\nexport function VisionGuiResult({\n  error,\n  queryInProgress,\n  queryResult,\n  listenInProgress,\n  listenMutations,\n  dataset,\n  queryTime,\n  e2eTime,\n}: VisionGuiResultProps) {\n  const {t} = useTranslation(visionLocaleNamespace)\n  const hasResult = !error && !queryInProgress && typeof queryResult !== 'undefined'\n\n  const jsonUrl = hasResult ? getJsonBlobUrl(queryResult) : ''\n  const csvUrl = hasResult ? getCsvBlobUrl(queryResult) : ''\n\n  return (\n    <ResultOuterContainer direction=\"column\" data-testid=\"vision-result\">\n      <ResultInnerContainer flex={1}>\n        <ResultContainer\n          flex={1}\n          overflow=\"hidden\"\n          tone={error ? 'critical' : 'default'}\n          $isInvalid={Boolean(error)}\n        >\n          <Result overflow=\"auto\">\n            <InputBackgroundContainer>\n              <Box marginLeft={3}>\n                <StyledLabel muted>{t('result.label')}</StyledLabel>\n              </Box>\n            </InputBackgroundContainer>\n            <Box padding={3} paddingTop={5}>\n              {(queryInProgress || (listenInProgress && listenMutations.length === 0)) && (\n                <Box marginTop={3}>\n                  <DelayedSpinner />\n                </Box>\n              )}\n              {error && <QueryErrorDialog error={error} />}\n              {hasResult && <ResultView data={queryResult} datasetName={dataset} />}\n              {listenInProgress && listenMutations.length > 0 && (\n                <ResultView data={listenMutations} datasetName={dataset} />\n              )}\n            </Box>\n          </Result>\n        </ResultContainer>\n      </ResultInnerContainer>\n      {/* Execution time */}\n      <ResultFooter justify=\"space-between\" direction={['column', 'column', 'row']}>\n        <TimingsCard paddingX={4} paddingY={3} sizing=\"border\">\n          <TimingsTextContainer align=\"center\">\n            <Box>\n              <Text muted>\n                {t('result.execution-time-label')}:{' '}\n                {typeof queryTime === 'number'\n                  ? `${queryTime}ms`\n                  : t('result.timing-not-applicable')}\n              </Text>\n            </Box>\n            <Box marginLeft={4}>\n              <Text muted>\n                {t('result.end-to-end-time-label')}:{' '}\n                {typeof e2eTime === 'number' ? `${e2eTime}ms` : t('result.timing-not-applicable')}\n              </Text>\n            </Box>\n          </TimingsTextContainer>\n        </TimingsCard>\n\n        {hasResult && (\n          <DownloadsCard paddingX={4} paddingY={3} sizing=\"border\">\n            <SaveResultLabel muted>\n              <Translate\n                components={{\n                  SaveResultButtons: () => (\n                    <>\n                      <SaveJsonButton blobUrl={jsonUrl} />\n                      <SaveCsvButton blobUrl={csvUrl} />\n                    </>\n                  ),\n                }}\n                i18nKey=\"result.save-result-as-format\"\n                t={t}\n              />\n            </SaveResultLabel>\n          </DownloadsCard>\n        )}\n      </ResultFooter>\n    </ResultOuterContainer>\n  )\n}\n","import {SplitPane} from '@rexxars/react-split-pane'\nimport {\n  type ClientPerspective,\n  type ListenEvent,\n  type MutationEvent,\n  type StackablePerspective,\n} from '@sanity/client'\nimport {Box, Flex, useToast} from '@sanity/ui'\nimport {isHotkey} from 'is-hotkey-esm'\nimport {type ChangeEvent, useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {useClient, usePerspective, useTranslation} from 'sanity'\nimport {useEffectEvent} from 'use-effect-event'\n\nimport {API_VERSIONS, DEFAULT_API_VERSION} from '../apiVersions'\nimport {VisionCodeMirror, type VisionCodeMirrorHandle} from '../codemirror/VisionCodeMirror'\nimport {visionLocaleNamespace} from '../i18n'\nimport {\n  getActivePerspective,\n  isSupportedPerspective,\n  isVirtualPerspective,\n  type SupportedPerspective,\n} from '../perspectives'\nimport {type VisionProps} from '../types'\nimport {encodeQueryString} from '../util/encodeQueryString'\nimport {getLocalStorage} from '../util/localStorage'\nimport {parseApiQueryString, type ParsedApiQueryString} from '../util/parseApiQueryString'\nimport {prefixApiVersion} from '../util/prefixApiVersion'\nimport {validateApiVersion} from '../util/validateApiVersion'\nimport {ParamsEditor, parseParams} from './ParamsEditor'\nimport {usePaneSize} from './usePaneSize'\nimport {\n  InputBackgroundContainerLeft,\n  InputContainer,\n  Root,\n  SplitpaneContainer,\n  StyledLabel,\n} from './VisionGui.styled'\nimport {VisionGuiControls} from './VisionGuiControls'\nimport {VisionGuiHeader} from './VisionGuiHeader'\nimport {VisionGuiResult} from './VisionGuiResult'\n\nfunction nodeContains(node: Node, other: EventTarget | Node | null): boolean {\n  if (!node || !other) {\n    return false\n  }\n\n  // eslint-disable-next-line no-bitwise\n  return node === other || !!(node.compareDocumentPosition(other as Node) & 16)\n}\n\nconst sanityUrl =\n  /\\.(?:api|apicdn)\\.sanity\\.(?:io|work)\\/(vX|v1|v\\d{4}-\\d\\d-\\d\\d)\\/.*?(?:query|listen)\\/(.*?)\\?(.*)/\n\nconst isRunHotkey = (event: KeyboardEvent) =>\n  isHotkey('ctrl+enter', event) || isHotkey('mod+enter', event)\n\ninterface Subscription {\n  unsubscribe: () => void\n}\nexport interface Params {\n  raw: string\n  parsed: Record<string, unknown> | undefined\n  valid: boolean\n  error: string | undefined\n}\n\ninterface QueryExecutionOptions {\n  apiVersion?: string\n  dataset?: string\n  perspective?: SupportedPerspective\n  query?: string\n  params?: Record<string, unknown>\n}\n\ninterface VisionGuiProps extends VisionProps {\n  datasets: string[]\n  projectId: string | undefined\n  defaultDataset: string\n}\n\nexport function VisionGui(props: VisionGuiProps) {\n  const {datasets, config, projectId, defaultDataset} = props\n  const toast = useToast()\n  const {t} = useTranslation(visionLocaleNamespace)\n  const {perspectiveStack} = usePerspective()\n\n  const defaultApiVersion = prefixApiVersion(`${config.defaultApiVersion}`)\n  const editorQueryRef = useRef<VisionCodeMirrorHandle>(null)\n  const editorParamsRef = useRef<VisionCodeMirrorHandle>(null)\n  const visionRootRef = useRef<HTMLDivElement | null>(null)\n  const customApiVersionElementRef = useRef<HTMLInputElement | null>(null)\n  const querySubscriptionRef = useRef<Subscription | undefined>(undefined)\n  const listenSubscriptionRef = useRef<Subscription | undefined>(undefined)\n\n  const [localStorage] = useState(() => getLocalStorage(projectId || 'default'))\n\n  const {storedDataset, storedApiVersion, storedQuery, storedParams, storedPerspective} =\n    useMemo(() => {\n      return {\n        storedDataset: localStorage.get('dataset', defaultDataset),\n        storedApiVersion: localStorage.get('apiVersion', defaultApiVersion),\n        storedQuery: localStorage.get('query', ''),\n        storedParams: localStorage.get('params', '{\\n  \\n}'),\n        storedPerspective: localStorage.get<SupportedPerspective | undefined>(\n          'perspective',\n          undefined,\n        ),\n      }\n    }, [defaultDataset, defaultApiVersion, localStorage])\n\n  const [dataset, setDataset] = useState<string>(() => {\n    if (datasets.includes(storedDataset)) {\n      return storedDataset\n    }\n    if (datasets.includes(defaultDataset)) {\n      return defaultDataset\n    }\n    return datasets[0]\n  })\n  const [apiVersion, setApiVersion] = useState<string>(() =>\n    API_VERSIONS.includes(storedApiVersion) ? storedApiVersion : DEFAULT_API_VERSION,\n  )\n  const [customApiVersion, setCustomApiVersion] = useState<string | false>(() =>\n    API_VERSIONS.includes(storedApiVersion) ? false : storedApiVersion,\n  )\n  const [perspective, setPerspectiveState] = useState<SupportedPerspective>(\n    storedPerspective || 'raw',\n  )\n  const isValidApiVersion = customApiVersion ? validateApiVersion(customApiVersion) : true\n\n  const [url, setUrl] = useState<string | undefined>(undefined)\n  const [query, setQuery] = useState<string>(() =>\n    typeof storedQuery === 'string' ? storedQuery : '',\n  )\n  const [params, setParams] = useState<Params>(() => parseParams(storedParams, t))\n  const [queryResult, setQueryResult] = useState<unknown | undefined>(undefined)\n  const [listenMutations, setListenMutations] = useState<MutationEvent[]>([])\n  const [error, setError] = useState<Error | undefined>(undefined)\n  const [queryTime, setQueryTime] = useState<number | undefined>(undefined)\n  const [e2eTime, setE2eTime] = useState<number | undefined>(undefined)\n  const [queryInProgress, setQueryInProgress] = useState<boolean>(false)\n  const [listenInProgress, setListenInProgress] = useState<boolean>(false)\n\n  const {paneSizeOptions, isNarrowBreakpoint} = usePaneSize({visionRootRef})\n\n  // Client  with memoized initial value\n  const _client = useClient({\n    apiVersion: isValidApiVersion && customApiVersion ? customApiVersion : apiVersion,\n  })\n  const client = useMemo(() => {\n    return _client.withConfig({\n      apiVersion: isValidApiVersion && customApiVersion ? customApiVersion : apiVersion,\n      perspective: getActivePerspective({visionPerspective: perspective, perspectiveStack}),\n      dataset,\n      allowReconfigure: true,\n    })\n  }, [\n    perspectiveStack,\n    perspective,\n    customApiVersion,\n    apiVersion,\n    dataset,\n    _client,\n    isValidApiVersion,\n  ])\n\n  const cancelQuerySubscription = useCallback(() => {\n    if (!querySubscriptionRef.current) {\n      return\n    }\n    querySubscriptionRef.current.unsubscribe()\n    querySubscriptionRef.current = undefined\n  }, [])\n\n  const cancelListenerSubscription = useCallback(() => {\n    if (!listenSubscriptionRef.current) {\n      return\n    }\n    listenSubscriptionRef.current.unsubscribe()\n    listenSubscriptionRef.current = undefined\n  }, [])\n\n  const handleQueryExecution = useCallback(\n    (options?: QueryExecutionOptions) => {\n      if (queryInProgress) {\n        cancelQuerySubscription()\n        cancelListenerSubscription()\n        setQueryInProgress(false)\n        return\n      }\n\n      const context: Required<Omit<QueryExecutionOptions, 'params' | 'perspective'>> & {\n        params: Params\n        perspective: ClientPerspective | undefined\n      } = {\n        query: options?.query || query,\n        dataset: options?.dataset || dataset,\n        params: parseParams(JSON.stringify(options?.params || params.parsed, null, 2), t),\n        perspective: getActivePerspective({\n          visionPerspective: options?.perspective || perspective,\n          perspectiveStack,\n        }),\n        apiVersion:\n          options?.apiVersion ||\n          (customApiVersion && isValidApiVersion ? customApiVersion : apiVersion),\n      }\n\n      localStorage.set('query', context.query)\n      localStorage.set('params', context.params.raw)\n\n      cancelListenerSubscription()\n\n      setQueryInProgress(!context.params.error && Boolean(context.query))\n      setListenInProgress(false)\n      setListenMutations([])\n      setError(context.params.error ? new Error(context.params.error) : undefined)\n      setQueryResult(undefined)\n      setQueryTime(undefined)\n      setE2eTime(undefined)\n\n      if (context.params.error) {\n        return\n      }\n\n      const urlQueryOpts: Record<string, string | string[]> = {\n        perspective: context.perspective ?? [],\n      }\n\n      const ctxClient = client.withConfig({\n        apiVersion: context.apiVersion,\n        dataset: context.dataset,\n        perspective: context.perspective,\n      })\n\n      const newUrl = ctxClient.getUrl(\n        ctxClient.getDataUrl(\n          'query',\n          encodeQueryString(context.query, context.params.parsed, urlQueryOpts),\n        ),\n      )\n      setUrl(newUrl)\n\n      const queryStart = Date.now()\n\n      querySubscriptionRef.current = ctxClient.observable\n        .fetch(context.query, context.params.parsed, {filterResponse: false, tag: 'vision'})\n        .subscribe({\n          next: (res) => {\n            setQueryTime(res.ms)\n            setE2eTime(Date.now() - queryStart)\n            setQueryResult(res.result)\n            setQueryInProgress(false)\n            setError(undefined)\n          },\n          error: (err) => {\n            setError(err)\n            setQueryInProgress(false)\n          },\n        })\n    },\n    [\n      queryInProgress,\n      query,\n      dataset,\n      params.parsed,\n      t,\n      perspective,\n      perspectiveStack,\n      customApiVersion,\n      isValidApiVersion,\n      apiVersion,\n      localStorage,\n      cancelListenerSubscription,\n      client,\n      cancelQuerySubscription,\n    ],\n  )\n\n  const setPerspective = useCallback(\n    (newPerspective: string | undefined): void => {\n      if (newPerspective !== undefined && !isSupportedPerspective(newPerspective)) {\n        return\n      }\n\n      setPerspectiveState(newPerspective as SupportedPerspective)\n      localStorage.set('perspective', newPerspective)\n\n      handleQueryExecution({perspective: newPerspective})\n    },\n    [localStorage, handleQueryExecution],\n  )\n\n  const handleChangeDataset = useCallback(\n    (evt: ChangeEvent<HTMLSelectElement>) => {\n      const newDataset = evt.target.value\n      localStorage.set('dataset', newDataset)\n      setDataset(newDataset)\n      handleQueryExecution({dataset: newDataset})\n    },\n    [localStorage, handleQueryExecution],\n  )\n\n  const handleChangeApiVersion = useCallback(\n    (evt: ChangeEvent<HTMLSelectElement>) => {\n      const newApiVersion = evt.target.value\n      if (newApiVersion?.toLowerCase() === 'other') {\n        setCustomApiVersion('v')\n        customApiVersionElementRef.current?.focus()\n        return\n      }\n\n      setApiVersion(newApiVersion)\n      setCustomApiVersion(false)\n      localStorage.set('apiVersion', newApiVersion)\n      handleQueryExecution({apiVersion: newApiVersion})\n    },\n    [localStorage, handleQueryExecution],\n  )\n\n  // Handle custom API version change\n  const handleCustomApiVersionChange = useCallback(\n    (evt: ChangeEvent<HTMLInputElement>) => {\n      const newCustomApiVersion = evt.target.value || ''\n      setCustomApiVersion(newCustomApiVersion || 'v')\n\n      if (validateApiVersion(newCustomApiVersion)) {\n        setApiVersion(newCustomApiVersion)\n        localStorage.set('apiVersion', newCustomApiVersion)\n        handleQueryExecution({apiVersion: newCustomApiVersion})\n      }\n    },\n    [localStorage, handleQueryExecution],\n  )\n\n  // Handle perspective change\n  const handleChangePerspective = useCallback(\n    (evt: ChangeEvent<HTMLSelectElement>) => {\n      const newPerspective = evt.target.value\n      setPerspective(newPerspective === 'default' ? undefined : newPerspective)\n    },\n    [setPerspective],\n  )\n\n  const handleListenerEvent = useCallback((evt: ListenEvent<any>) => {\n    if (evt.type !== 'mutation') {\n      return\n    }\n\n    setListenMutations((prevMutations) =>\n      prevMutations.length === 50 ? [evt, ...prevMutations.slice(0, 49)] : [evt, ...prevMutations],\n    )\n  }, [])\n  const handleListenExecution = useCallback(() => {\n    if (listenInProgress) {\n      cancelListenerSubscription()\n      setListenInProgress(false)\n      return\n    }\n\n    const newUrl = client.getDataUrl('listen', encodeQueryString(query, params.parsed, {}))\n\n    const shouldExecute = !params.error && query.trim().length > 0\n\n    localStorage.set('query', query)\n    localStorage.set('params', params.raw)\n\n    cancelQuerySubscription()\n\n    setUrl(newUrl)\n    setListenMutations([])\n    setQueryInProgress(false)\n    setQueryResult(undefined)\n    setListenInProgress(shouldExecute)\n    setError(params.error ? new Error(params.error) : undefined)\n    setQueryTime(undefined)\n    setE2eTime(undefined)\n\n    if (!shouldExecute) {\n      return\n    }\n\n    listenSubscriptionRef.current = client\n      .listen(query, params.parsed, {events: ['mutation', 'welcome'], includeAllVersions: true})\n      .subscribe({\n        next: handleListenerEvent,\n        error: (err) => {\n          setError(err)\n          setListenInProgress(false)\n        },\n      })\n  }, [\n    listenInProgress,\n    params,\n    query,\n    localStorage,\n    cancelQuerySubscription,\n    handleListenerEvent,\n    cancelListenerSubscription,\n    client,\n  ])\n\n  const handleParamsChange = useCallback(\n    (value: Params) => {\n      setParams(value)\n      localStorage.set('params', value.raw)\n    },\n    [localStorage],\n  )\n\n  const handleKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      const isWithinRoot =\n        visionRootRef.current && nodeContains(visionRootRef.current, event.target)\n      if (isRunHotkey(event) && isWithinRoot && params.valid) {\n        handleQueryExecution()\n        event.preventDefault()\n        event.stopPropagation()\n      }\n    },\n    [params.valid, handleQueryExecution],\n  )\n\n  const handlePaste = useCallback(\n    (evt: ClipboardEvent) => {\n      if (!evt.clipboardData) {\n        return\n      }\n\n      const data = evt.clipboardData.getData('text/plain')\n      const match = data.match(sanityUrl)\n      if (!match) {\n        return\n      }\n\n      const [, usedApiVersion, usedDataset, urlQuery] = match\n      let parts: ParsedApiQueryString\n\n      try {\n        const qs = new URLSearchParams(urlQuery)\n        parts = parseApiQueryString(qs)\n      } catch (err) {\n        console.warn('Error while trying to parse API URL: ', err.message) // eslint-disable-line no-console\n        return // Give up on error\n      }\n\n      let newApiVersion: string | undefined\n      let newCustomApiVersion: string | false | undefined\n\n      if (validateApiVersion(usedApiVersion)) {\n        if (API_VERSIONS.includes(usedApiVersion)) {\n          newApiVersion = usedApiVersion\n          newCustomApiVersion = false\n        } else {\n          newCustomApiVersion = usedApiVersion\n        }\n      }\n\n      const newPerspective =\n        isSupportedPerspective(parts.options.perspective) &&\n        !isVirtualPerspective(parts.options.perspective)\n          ? parts.options.perspective\n          : undefined\n\n      if (\n        newPerspective &&\n        (!isSupportedPerspective(parts.options.perspective) ||\n          isVirtualPerspective(parts.options.perspective))\n      ) {\n        toast.push({\n          closable: true,\n          id: 'vision-paste-unsupported-perspective',\n          status: 'warning',\n          title: 'Perspective in pasted url is currently not supported. Falling back to \"raw\"',\n        })\n      }\n\n      const finalState = {\n        query: parts.query,\n        params: parts.params,\n        rawParams: JSON.stringify(parts.params, null, 2),\n        dataset: datasets.includes(usedDataset) ? usedDataset : dataset,\n        apiVersion: newApiVersion || apiVersion,\n        customApiVersion: newCustomApiVersion,\n        perspective: newPerspective || perspective,\n      }\n\n      evt.preventDefault()\n\n      // Update state with pasted values\n\n      setDataset(finalState.dataset)\n      setQuery(finalState.query)\n      setParams({\n        parsed: finalState.params,\n        raw: finalState.rawParams,\n        valid: true,\n        error: undefined,\n      })\n      setApiVersion(finalState.apiVersion)\n      if (finalState.customApiVersion) {\n        setCustomApiVersion(finalState.customApiVersion)\n      }\n      setPerspectiveState(finalState.perspective)\n\n      // Update the codemirror editor content\n      editorQueryRef.current?.resetEditorContent(finalState.query)\n      editorParamsRef.current?.resetEditorContent(finalState.rawParams)\n\n      // Update localStorage and client config\n      localStorage.merge({\n        query: finalState.query,\n        params: finalState.rawParams,\n        dataset: finalState.dataset,\n        apiVersion: finalState.customApiVersion || finalState.apiVersion,\n        perspective: finalState.perspective,\n      })\n\n      // Execute query with new values\n      handleQueryExecution(finalState)\n\n      toast.push({\n        closable: true,\n        id: 'vision-paste',\n        status: 'info',\n        title: 'Parsed URL to query',\n      })\n    },\n    [datasets, dataset, apiVersion, perspective, localStorage, toast, handleQueryExecution],\n  )\n\n  useEffect(() => {\n    window.document.addEventListener('paste', handlePaste)\n    window.document.addEventListener('keydown', handleKeyDown)\n\n    return () => {\n      window.document.removeEventListener('paste', handlePaste)\n      window.document.removeEventListener('keydown', handleKeyDown)\n    }\n  }, [handleKeyDown, handlePaste])\n\n  useEffect(() => {\n    return () => {\n      cancelQuerySubscription()\n      cancelListenerSubscription()\n    }\n  }, [cancelQuerySubscription, cancelListenerSubscription])\n\n  const handleStudioPerspectiveChange = useEffectEvent((stack: StackablePerspective[]) => {\n    if (stack.length > 0) {\n      setPerspective('pinnedRelease')\n    }\n  })\n  // // Handle pinned perspective changes\n  useEffect(() => {\n    handleStudioPerspectiveChange(perspectiveStack)\n  }, [perspectiveStack])\n\n  return (\n    <Root\n      direction=\"column\"\n      height=\"fill\"\n      ref={visionRootRef}\n      sizing=\"border\"\n      overflow=\"hidden\"\n      data-testid=\"vision-root\"\n    >\n      <VisionGuiHeader\n        apiVersion={apiVersion}\n        customApiVersion={customApiVersion}\n        dataset={dataset}\n        datasets={datasets}\n        onChangeDataset={handleChangeDataset}\n        onChangeApiVersion={handleChangeApiVersion}\n        customApiVersionElementRef={customApiVersionElementRef}\n        onCustomApiVersionChange={handleCustomApiVersionChange}\n        isValidApiVersion={isValidApiVersion}\n        onChangePerspective={handleChangePerspective}\n        url={url}\n        perspective={perspective}\n      />\n      <SplitpaneContainer flex=\"auto\">\n        <SplitPane\n          // eslint-disable-next-line @sanity/i18n/no-attribute-string-literals\n          split={isNarrowBreakpoint ? 'vertical' : 'horizontal'}\n          minSize={280}\n          defaultSize={400}\n          maxSize={-400}\n        >\n          <Box height=\"stretch\" flex={1}>\n            {/*\n                    The way react-split-pane handles the sizes is kind of finicky and not clear. What the props above does is:\n                    - It sets the initial size of the panes to 1/2 of the total available height of the container\n                    - Sets the minimum size of a pane whatever is bigger of 1/2 of the total available height of the container, or 170px\n                    - The max size is set to either 60% or 70% of the available space, depending on if the container height is above 650px\n                    - Disables resizing when total height is below 500, since it becomes really cumbersome to work with the panes then\n                    - The \"primary\" prop (https://github.com/tomkp/react-split-pane#primary) tells the second pane to shrink or grow by the available space\n                    - Disables resize if the container height is less then 500px\n                    This should ensure that we mostly avoid a pane to take up all the room, and for the controls to not be eaten up by the pane\n                  */}\n            <SplitPane\n              className=\"sidebarPanes\"\n              split=\"horizontal\"\n              defaultSize={\n                isNarrowBreakpoint ? paneSizeOptions.defaultSize : paneSizeOptions.minSize\n              }\n              size={paneSizeOptions.size}\n              allowResize={paneSizeOptions.allowResize}\n              minSize={isNarrowBreakpoint ? paneSizeOptions.minSize : 100}\n              maxSize={paneSizeOptions.maxSize}\n              primary=\"first\"\n            >\n              <InputContainer display=\"flex\" data-testid=\"vision-query-editor\">\n                <Box flex={1}>\n                  <InputBackgroundContainerLeft>\n                    <Flex>\n                      <StyledLabel muted>{t('query.label')}</StyledLabel>\n                    </Flex>\n                  </InputBackgroundContainerLeft>\n                  <VisionCodeMirror initialValue={query} onChange={setQuery} ref={editorQueryRef} />\n                </Box>\n              </InputContainer>\n              <InputContainer display=\"flex\">\n                <ParamsEditor\n                  value={params.raw}\n                  onChange={handleParamsChange}\n                  paramsError={params.error}\n                  hasValidParams={params.valid}\n                  editorRef={editorParamsRef}\n                />\n\n                <VisionGuiControls\n                  hasValidParams={params.valid}\n                  queryInProgress={queryInProgress}\n                  listenInProgress={listenInProgress}\n                  onQueryExecution={handleQueryExecution}\n                  onListenExecution={handleListenExecution}\n                />\n              </InputContainer>\n            </SplitPane>\n          </Box>\n          <VisionGuiResult\n            error={error}\n            queryInProgress={queryInProgress}\n            queryResult={queryResult}\n            listenInProgress={listenInProgress}\n            listenMutations={listenMutations}\n            dataset={dataset}\n            queryTime={queryTime}\n            e2eTime={e2eTime}\n          />\n        </SplitPane>\n      </SplitpaneContainer>\n    </Root>\n  )\n}\n","import {type SanityClient} from '@sanity/client'\nimport {useEffect, useState} from 'react'\n\nexport function useDatasets(client: SanityClient): string[] | Error | undefined {\n  const projectId = client.config().projectId\n  const [datasets, setDatasets] = useState<string[] | Error | undefined>()\n\n  useEffect(() => {\n    const datasets$ = client.observable.datasets.list().subscribe({\n      next: (result) => setDatasets(result.map((ds) => ds.name)),\n      error: (err) => setDatasets(err),\n    })\n\n    return () => datasets$.unsubscribe()\n  }, [client, projectId])\n\n  return datasets || undefined\n}\n","import {Flex} from '@sanity/ui'\n\nimport {DelayedSpinner} from '../components/DelayedSpinner'\nimport {VisionGui} from '../components/VisionGui'\nimport {useDatasets} from '../hooks/useDatasets'\nimport {type VisionProps} from '../types'\n\nexport function VisionContainer(props: VisionProps) {\n  const loadedDatasets = useDatasets(props.client)\n\n  if (!loadedDatasets) {\n    return (\n      <Flex align=\"center\" height=\"fill\" justify=\"center\">\n        <DelayedSpinner />\n      </Flex>\n    )\n  }\n\n  const datasets =\n    loadedDatasets instanceof Error\n      ? // On error, use the clients configured dataset\n        [props.client.config().dataset || 'production']\n      : // Otherwise use the loaded list, obviously\n        loadedDatasets\n\n  const projectId = props.client.config().projectId\n  const defaultDataset = props.config.defaultDataset || props.client.config().dataset || datasets[0]\n\n  return (\n    <VisionGui\n      {...props}\n      key={projectId}\n      datasets={datasets}\n      projectId={projectId}\n      defaultDataset={defaultDataset}\n    />\n  )\n}\n","/* eslint-disable @sanity/i18n/no-attribute-string-literals */\n/* eslint-disable i18next/no-literal-string */\nimport {Button, Card, Code, Container, Heading, Stack} from '@sanity/ui'\nimport {Component, type PropsWithChildren} from 'react'\n\nimport {clearLocalStorage} from '../util/localStorage'\n\n/**\n * @internal\n */\nexport type VisionErrorBoundaryProps = PropsWithChildren\n\n/**\n * @internal\n */\ninterface VisionErrorBoundaryState {\n  error: string | null\n  numRetries: number\n}\n\n/**\n * @internal\n */\nexport class VisionErrorBoundary extends Component<\n  VisionErrorBoundaryProps,\n  VisionErrorBoundaryState\n> {\n  constructor(props: VisionErrorBoundaryProps) {\n    super(props)\n    this.state = {error: null, numRetries: 0}\n  }\n\n  static getDerivedStateFromError(error: unknown) {\n    return {error: error instanceof Error ? error.message : `${error}`}\n  }\n\n  handleRetryRender = () =>\n    this.setState((prev) => ({error: null, numRetries: prev.numRetries + 1}))\n\n  handleRetryWithCacheClear = () => {\n    clearLocalStorage()\n    this.handleRetryRender()\n  }\n\n  render() {\n    if (!this.state.error) {\n      return this.props.children\n    }\n\n    const message = this.state.error\n    const withCacheClear = this.state.numRetries > 0\n\n    return (\n      <Card\n        height=\"fill\"\n        overflow=\"auto\"\n        paddingY={[4, 5, 6, 7]}\n        paddingX={4}\n        sizing=\"border\"\n        tone=\"critical\"\n      >\n        <Container width={3}>\n          <Stack space={4}>\n            <div>\n              <Button\n                onClick={withCacheClear ? this.handleRetryWithCacheClear : this.handleRetryRender}\n                text={withCacheClear ? 'Clear cache and retry' : 'Retry'}\n                tone=\"default\"\n              />\n            </div>\n\n            <Heading>An error occurred</Heading>\n\n            <Card border radius={2} overflow=\"auto\" padding={4} tone=\"inherit\">\n              <Stack space={4}>\n                {message && (\n                  <Code size={1}>\n                    <strong>Error: {message}</strong>\n                  </Code>\n                )}\n              </Stack>\n            </Card>\n          </Stack>\n        </Container>\n      </Card>\n    )\n  }\n}\n","import {type Tool, useClient} from 'sanity'\n\nimport {DEFAULT_API_VERSION} from './apiVersions'\nimport {VisionContainer} from './containers/VisionContainer'\nimport {VisionErrorBoundary} from './containers/VisionErrorBoundary'\nimport {type VisionConfig} from './types'\n\ninterface SanityVisionProps {\n  tool: Tool<VisionConfig>\n}\n\nfunction SanityVision(props: SanityVisionProps) {\n  const client = useClient({apiVersion: '1'})\n  const config: VisionConfig = {\n    defaultApiVersion: DEFAULT_API_VERSION,\n    ...props.tool.options,\n  }\n\n  return (\n    <VisionErrorBoundary>\n      <VisionContainer client={client} config={config} />\n    </VisionErrorBoundary>\n  )\n}\n\nexport default SanityVision\n"],"names":["API_VERSIONS","Date","toISOString","split","DEFAULT_API_VERSION","slice","DelayedSpinner","props","$","_c","show","setShow","useState","t0","t1","delay","timer","setTimeout","clearTimeout","useEffect","t2","jsx","Spinner","codemirrorExtensions","javascriptLanguage","lineNumbers","highlightActiveLine","highlightActiveLineGutter","highlightSelectionMatches","highlightSpecialChars","indentOnInput","bracketMatching","closeBrackets","history","drawSelection","syntaxHighlighting","defaultHighlightStyle","fallback","keymap","of","key","run","defaultKeymap","historyKeymap","flat","filter","Boolean","useCodemirrorTheme","theme","createTheme","cmTheme","t3","createHighlight","cmHighlight","t4","color","fonts","sanity","card","enabled","cursor","hues","blue","dark","hex","selection","gray","EditorView","fg","backgroundColor","bg","caretColor","fontFamily","code","family","fontSize","rem","sizes","lineHeight","borderLeftColor","borderBottom","border","borderTop","c","base","s","syntax","HighlightStyle","define","tag","t","keyword","propertyName","name","deleted","character","macroName","property","function","variableName","labelName","constant","standard","variable","definition","separator","typeName","className","number","changed","annotation","modifier","self","namespace","operator","operatorKeyword","url","escape","regexp","link","special","string","meta","comment","strong","fontWeight","emphasis","fontStyle","strikethrough","textDecoration","heading","atom","bool","boolean","processingInstruction","inserted","invalid","EditorRoot","styled","div","space","VisionCodeMirror","forwardRef","ref","initialValue","sanityTheme","useTheme","codeMirrorRef","useRef","Symbol","for","newContent","editorView","current","view","currentDoc","state","doc","toString","dispatch","changes","from","to","length","insert","EditorSelection","resetEditorContent","useImperativeHandle","onChange","CodeMirror","displayName","SUPPORTED_PERSPECTIVES","VIRTUAL_PERSPECTIVES","isSupportedPerspective","p","includes","isVirtualPerspective","maybeVirtualPerspective","hasPinnedPerspective","selectedPerspectiveName","getActivePerspective","visionPerspective","perspectiveStack","encodeQueryString","query","params","options","searchParams","URLSearchParams","set","value","Object","entries","JSON","stringify","isPlainObject","obj","prototype","call","hasLocalStorage","supportsLocalStorage","keyPrefix","clearLocalStorage","i","localStorage","startsWith","removeItem","getLocalStorage","storageKey","loadedState","get","merge","defaultVal","ensureState","setItem","loadState","stored","parse","getItem","mod","parseApiQueryString","qs","prefixApiVersion","version","validateApiVersion","apiVersion","parseableApiVersion","replace","trim","toUpperCase","test","isNaN","tryParseParams","val","parsed","JSON5","Array","isArray","err","message","Root","Flex","Header","Card","StyledLabel","Label","SplitpaneContainer","Box","QueryCopyLink","a","InputBackgroundContainer","InputBackgroundContainerLeft","InputContainer","ResultOuterContainer","ResultInnerContainer","ResultContainer","$isInvalid","css","Result","ResultFooter","TimingsCard","TimingsTextContainer","text","ascenderHeight","descenderHeight","DownloadsCard","SaveResultLabel","Text","ControlsContainer","defaultValue","ParamsEditor","paramsError","hasValidParams","editorRef","useTranslation","visionLocaleNamespace","parseParams","raw","error","valid","isValid","setValid","init","setInit","newValue","event","handleChangeRaw","t5","debounce","handleChange","t6","t7","t8","t9","Tooltip","ErrorOutlineIcon","t10","jsxs","t11","t12","t13","parsedParams","Error","validationError","undefined","narrowBreakpoint","window","innerWidth","calculatePaneSizeOptions","height","rootHeight","document","body","getBoundingClientRect","defaultSize","size","allowResize","minSize","Math","min","max","maxSize","usePaneSize","visionRootRef","isNarrowBreakpoint","setIsNarrowBreakpoint","_temp","paneSizeOptions","setPaneSizeOptions","_temp2","handleResize","entry","contentRect","resizeObserver","ResizeObserver","observe","disconnect","VisionGuiControls","listenInProgress","queryInProgress","onQueryExecution","onListenExecution","Hotkeys","StopIcon","PlayIcon","Button","t14","t15","PerspectivePopoverContent","PerspectivePopoverLink","Dot","tone","PerspectivePopover","open","setOpen","buttonRef","popoverRef","handleClick","useClickOutsideEvent","Inline","Badge","Translate","Stack","t16","HelpCircleIcon","t17","Popover","o","PinnedReleasePerspectiveOption","pinnedPerspective","selectedPerspective","metadata","title","label","join","VisionGuiHeader","onChangeDataset","dataset","customApiVersion","onChangeApiVersion","datasets","customApiVersionElementRef","onCustomApiVersionChange","isValidApiVersion","onChangePerspective","perspective","usePerspective","operationUrlElement","el","select","execCommand","console","handleCopyUrl","map","Select","_temp3","TextInput","t18","t19","t20","t21","t22","perspectiveName","Fragment","t23","t24","t25","CopyIcon","t26","Grid","ds","getBlobUrl","content","mimeType","URL","createObjectURL","Blob","type","getMemoizedBlobUrlResolver","stringEncoder","prevResult","prevContent","input","revokeObjectURL","getJsonBlobUrl","getCsvBlobUrl","json2csv","ErrorCode","Code","muted","critical","QueryErrorDetails","details","mapToLegacyDetails","line","dashLine","column","columnEnd","lineNumber","start","end","lineStart","lastIndexOf","match","indexOf","repeat","hats","QueryErrorDialog","ResultViewWrapper","lru","LRU","ResultView","data","datasetName","workspaceDataset","useDataset","isRecord","DocumentEditLabel","JsonInspector","isExpanded","toggleExpanded","isKey","keypath","endsWith","id","LinkIcon","IntentLink","keyPath","cached","segments","depthLimit","some","isArrayKeyOverLimit","path","numeric","segment","limit","parseInt","preventSave","evt","preventDefault","SaveCsvButton","blobUrl","isDisabled","DocumentSheetIcon","button","SaveJsonButton","VisionGuiResult","queryResult","listenMutations","queryTime","e2eTime","hasResult","jsonUrl","csvUrl","SaveResultButtons","nodeContains","node","other","compareDocumentPosition","sanityUrl","isRunHotkey","isHotkey","VisionGui","config","projectId","defaultDataset","toast","useToast","defaultApiVersion","editorQueryRef","editorParamsRef","querySubscriptionRef","listenSubscriptionRef","storedDataset","storedApiVersion","storedQuery","storedParams","storedPerspective","useMemo","setDataset","setApiVersion","setCustomApiVersion","setPerspectiveState","setUrl","setQuery","setParams","setQueryResult","setListenMutations","setError","setQueryTime","setE2eTime","setQueryInProgress","setListenInProgress","_client","useClient","client","withConfig","allowReconfigure","cancelQuerySubscription","useCallback","unsubscribe","cancelListenerSubscription","handleQueryExecution","context","urlQueryOpts","ctxClient","newUrl","getUrl","getDataUrl","queryStart","now","observable","fetch","filterResponse","subscribe","next","res","ms","result","setPerspective","newPerspective","handleChangeDataset","newDataset","target","handleChangeApiVersion","newApiVersion","toLowerCase","focus","handleCustomApiVersionChange","newCustomApiVersion","handleChangePerspective","handleListenerEvent","prevMutations","handleListenExecution","shouldExecute","listen","events","includeAllVersions","handleParamsChange","handleKeyDown","isWithinRoot","stopPropagation","handlePaste","clipboardData","getData","usedApiVersion","usedDataset","urlQuery","parts","warn","push","closable","status","finalState","rawParams","addEventListener","removeEventListener","handleStudioPerspectiveChange","useEffectEvent","stack","SplitPane","useDatasets","setDatasets","datasets$","list","VisionContainer","loadedDatasets","createElement","VisionErrorBoundary","Component","constructor","numRetries","getDerivedStateFromError","handleRetryRender","setState","prev","handleRetryWithCacheClear","render","children","withCacheClear","Container","Heading","SanityVision","tool"],"mappings":"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"}