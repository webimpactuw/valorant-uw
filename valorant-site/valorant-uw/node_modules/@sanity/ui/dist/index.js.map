{"version":3,"file":"index.js","sources":["../src/core/helpers/animation.ts","../src/core/helpers/focus.ts","../src/core/hooks/useClickOutside.ts","../src/core/hooks/useElementRect/useElementRect.ts","../src/core/hooks/useForwardedRef.ts","../src/core/utils/errorBoundary.tsx","../src/core/components/autocomplete/autocomplete.styles.tsx","../src/core/components/autocomplete/autocompleteOption.tsx","../src/core/components/autocomplete/autocompleteReducer.ts","../src/core/components/autocomplete/constants.ts","../src/core/components/autocomplete/autocomplete.tsx","../src/core/components/breadcrumbs/breadcrumbs.styles.ts","../src/core/components/breadcrumbs/breadcrumbs.tsx","../src/core/components/dialog/styles.ts","../src/core/components/dialog/dialogContext.ts","../src/core/components/dialog/useDialog.ts","../src/core/components/dialog/dialog.tsx","../src/core/components/dialog/dialogProvider.tsx","../src/core/components/menu/menuButton.tsx","../src/core/components/skeleton/styles.ts","../src/core/components/skeleton/skeleton.tsx","../src/core/components/skeleton/textSkeleton.tsx","../src/core/components/tab/tabPanel.tsx","../src/core/components/toast/styles.ts","../src/core/components/toast/toast.tsx","../src/core/hooks/useMounted.ts","../src/core/components/toast/toastContext.ts","../src/core/components/toast/toastLayer.tsx","../src/core/components/toast/toastState.ts","../src/core/components/toast/toastProvider.tsx","../src/core/components/toast/useToast.ts","../src/core/components/tree/helpers.ts","../src/core/components/tree/treeContext.ts","../src/core/components/tree/tree.tsx","../src/core/components/tree/style.ts","../src/core/components/tree/useTree.ts","../src/core/components/tree/treeGroup.tsx","../src/core/components/tree/treeItem.tsx"],"sourcesContent":["/**\n * @internal\n */\nexport function _raf(fn: () => void): () => void {\n  const frameId = requestAnimationFrame(fn)\n\n  return () => {\n    cancelAnimationFrame(frameId)\n  }\n}\n\n/**\n * @internal\n */\nexport function _raf2(fn: () => void): () => void {\n  let innerDispose: (() => void) | null = null\n\n  const outerDispose = _raf(() => {\n    innerDispose = _raf(fn)\n  })\n\n  return () => {\n    if (innerDispose) innerDispose()\n\n    outerDispose()\n  }\n}\n","import {\n  isHTMLAnchorElement,\n  isHTMLButtonElement,\n  isHTMLElement,\n  isHTMLInputElement,\n  isHTMLSelectElement,\n  isHTMLTextAreaElement,\n} from './element'\n\n// export const globalFocusState = {\n//   IgnoreUtilFocusChanges: false,\n// }\n\n/**\n * @internal\n */\nexport function _hasFocus(element: HTMLElement): boolean {\n  return Boolean(document.activeElement) && element.contains(document.activeElement)\n}\n\n/**\n * @internal\n */\nexport function isFocusable(element: HTMLElement): boolean {\n  if (\n    element.tabIndex > 0 ||\n    (element.tabIndex === 0 && element.getAttribute('tabIndex') !== null)\n  ) {\n    return true\n  }\n\n  if (isHTMLAnchorElement(element)) {\n    return Boolean(element.href) && element.rel !== 'ignore'\n  }\n\n  if (isHTMLInputElement(element)) {\n    return element.type !== 'hidden' && element.type !== 'file' && !element.disabled\n  }\n\n  if (\n    isHTMLButtonElement(element) ||\n    isHTMLSelectElement(element) ||\n    isHTMLTextAreaElement(element)\n  ) {\n    return !element.disabled\n  }\n\n  return false\n}\n\n/**\n * @internal\n */\nexport function attemptFocus(element: HTMLElement): boolean {\n  if (!isFocusable(element)) {\n    return false\n  }\n\n  // globalFocusState.IgnoreUtilFocusChanges = true\n\n  try {\n    element.focus()\n  } catch {\n    // ignore\n  }\n\n  // globalFocusState.IgnoreUtilFocusChanges = false\n\n  return document.activeElement === element\n}\n\n/**\n * @internal\n */\nexport function focusFirstDescendant(element: HTMLElement): boolean {\n  for (let i = 0; i < element.childNodes.length; i++) {\n    const child = element.childNodes[i]\n\n    if (isHTMLElement(child) && (attemptFocus(child) || focusFirstDescendant(child))) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * @internal\n */\nexport function focusLastDescendant(element: HTMLElement): boolean {\n  for (let i = element.childNodes.length - 1; i >= 0; i--) {\n    const child = element.childNodes[i]\n\n    if (isHTMLElement(child) && (attemptFocus(child) || focusLastDescendant(child))) {\n      return true\n    }\n  }\n\n  return false\n}\n","import {useEffect, useRef, useState} from 'react'\n\nimport {EMPTY_ARRAY} from '../constants'\n\n/**\n * @public\n */\nexport type ClickOutsideListener = (event: MouseEvent) => void\n\n/**\n * @public\n */\nexport type ClickOutsideElements = (HTMLElement | null | (HTMLElement | null)[])[]\n\nfunction _getElements(\n  element: HTMLElement | null,\n  elementsArg: ClickOutsideElements,\n): HTMLElement[] {\n  const ret = [element]\n\n  for (const el of elementsArg) {\n    if (Array.isArray(el)) {\n      ret.push(...el)\n    } else {\n      ret.push(el)\n    }\n  }\n\n  return ret.filter(Boolean) as HTMLElement[]\n}\n\n/**\n * @public\n * @deprecated replaced by the new `useClickOutsideEvent` hook, instead of:\n * ```tsx\n * const [button, setButtonElement] = useState(null)\n * useClickOutside((event) => {}, [button])\n * return <button ref={setButtonElement} />\n * ```\n * do:\n * ```tsx\n * const buttonRef = useRef()\n * useClickOutsideEvent((event) => {}, () => [buttonRef.current])\n * return <button ref={buttonRef} />\n * ```\n */\nexport function useClickOutside(\n  listener: ClickOutsideListener,\n  elementsArg: ClickOutsideElements = EMPTY_ARRAY,\n  boundaryElement?: HTMLElement | null,\n): (el: HTMLElement | null) => void {\n  const [element, setElement] = useState<HTMLElement | null>(null)\n  const [elements, setElements] = useState(() => _getElements(element, elementsArg))\n  const elementsRef = useRef(elements)\n\n  useEffect(() => {\n    const prevElements = elementsRef.current\n    const nextElements = _getElements(element, elementsArg)\n\n    if (prevElements.length !== nextElements.length) {\n      setElements(nextElements)\n      elementsRef.current = nextElements\n\n      return\n    }\n\n    for (const el of prevElements) {\n      if (!nextElements.includes(el)) {\n        setElements(nextElements)\n        elementsRef.current = nextElements\n\n        return\n      }\n    }\n\n    for (const el of nextElements) {\n      if (!prevElements.includes(el)) {\n        setElements(nextElements)\n        elementsRef.current = nextElements\n\n        return\n      }\n    }\n  }, [element, elementsArg])\n\n  useEffect(() => {\n    if (!listener) return undefined\n\n    const handleWindowMouseDown = (evt: MouseEvent) => {\n      const target = evt.target\n\n      if (!(target instanceof Node)) {\n        return\n      }\n\n      if (boundaryElement && !boundaryElement.contains(target)) {\n        return\n      }\n\n      for (const el of elements) {\n        if (target === el || el.contains(target)) {\n          return\n        }\n      }\n\n      listener(evt)\n    }\n\n    window.addEventListener('mousedown', handleWindowMouseDown)\n\n    return () => {\n      window.removeEventListener('mousedown', handleWindowMouseDown)\n    }\n  }, [boundaryElement, listener, elements])\n\n  return setElement\n}\n","import {useElementSize} from '../useElementSize'\n\n/**\n * Subscribe to the rect of a DOM element.\n * @beta\n *\n * @deprecated Use `useElementSize` instead\n */\nexport function useElementRect(element: HTMLElement | null): DOMRectReadOnly | null {\n  const elementSize = useElementSize(element)\n\n  return elementSize?._contentRect || null\n}\n","import {useImperativeHandle, useRef} from 'react'\n\n/**\n * @beta\n * @deprecated use `useImperativeHandle` instead\n * @example\n * ```diff\n * -const ref = useForwardedRef(forwardedRef)\n * +const ref = useRef(null)\n * +useImperativeHandle(forwardedRef, () => ref.current)\n * ```\n */\nexport function useForwardedRef<T>(ref: React.ForwardedRef<T>): React.MutableRefObject<T | null> {\n  const innerRef = useRef<T | null>(null)\n\n  useImperativeHandle(ref, () => innerRef.current!)\n\n  return innerRef\n}\n","import {Component, PropsWithChildren} from 'react'\n\nimport {Code} from '../primitives/code'\n\n/**\n * DO NOT USE IN PRODUCTION\n * @beta\n */\nexport type ErrorBoundaryProps = PropsWithChildren<{\n  onCatch: (params: {error: Error; info: React.ErrorInfo}) => void\n}>\n\n/**\n * DO NOT USE IN PRODUCTION\n * @beta\n */\nexport interface ErrorBoundaryState {\n  error: Error | null\n}\n\n/**\n * DO NOT USE IN PRODUCTION\n * @beta\n */\nexport class ErrorBoundary extends Component<ErrorBoundaryProps, ErrorBoundaryState> {\n  state: ErrorBoundaryState = {error: null}\n\n  static getDerivedStateFromError(error: Error): ErrorBoundaryState {\n    // Update state so the next render will show the fallback UI.\n    return {error}\n  }\n\n  componentDidCatch(error: Error, info: React.ErrorInfo): void {\n    this.props.onCatch({error, info})\n  }\n\n  render(): React.ReactNode {\n    const {error} = this.state\n\n    if (error) {\n      const message = typeof error?.message === 'string' ? error.message : 'Error'\n\n      return <Code>{message}</Code>\n    }\n\n    return this.props.children\n  }\n}\n","import {SpinnerIcon} from '@sanity/icons'\nimport {keyframes, styled} from 'styled-components'\n\nimport {Box} from '../../primitives'\n\n/**\n * @internal\n */\nexport const StyledAutocomplete = styled.div`\n  line-height: 0;\n`\n\n/**\n * @internal\n */\nexport const ListBox = styled(Box)`\n  & > ul {\n    list-style: none;\n    padding: 0;\n    margin: 0;\n  }\n`\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n`\n\n/**\n * @internal\n */\nexport const AnimatedSpinnerIcon = styled(SpinnerIcon)`\n  animation: ${rotate} 500ms linear infinite;\n`\n","import {useCallback} from 'react'\n\nimport {_isEnterToClickElement} from '../../helpers'\n\nexport interface AutocompleteOptionProps {\n  children: React.ReactNode\n  id: string\n  onSelect: (v: string) => void\n  selected: boolean\n  value: string\n}\n\nexport function AutocompleteOption(props: AutocompleteOptionProps): React.JSX.Element {\n  const {children, id, onSelect, selected, value} = props\n\n  const handleClick = useCallback(() => {\n    // Calling the `onSelect` in a timeout is a fix to\n    // allow the `click` event to propagate in some cases\n    setTimeout(() => {\n      onSelect(value)\n    }, 0)\n  }, [onSelect, value])\n\n  const handleKeyDown = useCallback(\n    (event: React.KeyboardEvent<HTMLLIElement>) => {\n      if (event.key === 'Enter' && !_isEnterToClickElement(event.currentTarget)) {\n        handleClick()\n      }\n    },\n    [handleClick],\n  )\n\n  return (\n    <li\n      aria-selected={selected}\n      data-ui=\"AutocompleteOption\"\n      id={id}\n      role=\"option\"\n      onClick={handleClick}\n      onKeyDown={handleKeyDown}\n    >\n      {children}\n    </li>\n  )\n}\n","import {AutocompleteMsg, AutocompleteState} from './types'\n\n/**\n * @internal\n */\nexport function autocompleteReducer(\n  state: AutocompleteState,\n  msg: AutocompleteMsg,\n): AutocompleteState {\n  if (msg.type === 'input/change') {\n    return {...state, activeValue: null, focused: true, query: msg.query}\n  }\n\n  if (msg.type === 'input/focus') {\n    return {...state, focused: true}\n  }\n\n  if (msg.type === 'root/blur') {\n    return {...state, focused: false, query: null}\n  }\n\n  if (msg.type === 'root/clear') {\n    return {...state, activeValue: null, query: null, value: null}\n  }\n\n  if (msg.type === 'root/escape') {\n    return {...state, focused: false, query: null}\n  }\n\n  if (msg.type === 'root/open') {\n    return {...state, query: state.query || msg.query}\n  }\n\n  if (msg.type === 'root/setActiveValue') {\n    return {...state, activeValue: msg.value, listFocused: msg.listFocused || state.listFocused}\n  }\n\n  if (msg.type === 'root/setListFocused') {\n    return {...state, listFocused: msg.listFocused}\n  }\n\n  if (msg.type === 'value/change') {\n    return {...state, activeValue: msg.value, query: null, value: msg.value}\n  }\n\n  return state\n}\n","import {Placement} from '../../types'\n\n/**\n * @internal\n */\nexport const AUTOCOMPLETE_LISTBOX_IGNORE_KEYS = [\n  'Control',\n  'Shift',\n  'Alt',\n  'Enter',\n  'Home',\n  'End',\n  'PageUp',\n  'PageDown',\n  'Meta',\n  'Tab',\n  'CapsLock',\n]\n\n/**\n * @internal\n */\nexport const AUTOCOMPLETE_POPOVER_PLACEMENT: Placement = 'bottom-start'\n\n/**\n * @internal\n */\nexport const AUTOCOMPLETE_POPOVER_FALLBACK_PLACEMENTS: Placement[] = ['bottom-start', 'top-start']\n","import {ChevronDownIcon} from '@sanity/icons'\nimport {\n  ChangeEvent,\n  cloneElement,\n  ElementType,\n  FocusEvent,\n  forwardRef,\n  HTMLProps,\n  KeyboardEvent,\n  MouseEvent,\n  ReactNode,\n  Ref,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useReducer,\n  useRef,\n} from 'react'\n\nimport {EMPTY_ARRAY, EMPTY_RECORD} from '../../constants'\nimport {_hasFocus, _raf, focusFirstDescendant} from '../../helpers'\nimport {useArrayProp} from '../../hooks'\nimport {\n  Box,\n  BoxProps,\n  Button,\n  Card,\n  Popover,\n  PopoverProps,\n  Stack,\n  Text,\n  TextInput,\n} from '../../primitives'\nimport {Radius} from '../../types'\nimport {AnimatedSpinnerIcon, ListBox, StyledAutocomplete} from './autocomplete.styles'\nimport {AutocompleteOption} from './autocompleteOption'\nimport {autocompleteReducer} from './autocompleteReducer'\nimport {\n  AUTOCOMPLETE_LISTBOX_IGNORE_KEYS,\n  AUTOCOMPLETE_POPOVER_FALLBACK_PLACEMENTS,\n  AUTOCOMPLETE_POPOVER_PLACEMENT,\n} from './constants'\nimport {AutocompleteOpenButtonProps, BaseAutocompleteOption} from './types'\n\n/**\n * @public\n */\nexport interface AutocompleteProps<Option extends BaseAutocompleteOption = BaseAutocompleteOption> {\n  border?: boolean\n  customValidity?: string\n  filterOption?: (query: string, option: Option) => boolean\n  fontSize?: number | number[]\n  icon?: ElementType | ReactNode\n  id: string\n  /** @beta */\n  listBox?: BoxProps\n  loading?: boolean\n  onChange?: (value: string) => void\n  onQueryChange?: (query: string | null) => void\n  onSelect?: (value: string) => void\n  /** @beta */\n  openButton?: boolean | AutocompleteOpenButtonProps\n  /** @beta */\n  openOnFocus?: boolean\n  /** The options to render. */\n  options?: Option[]\n  padding?: number | number[]\n  popover?: Omit<PopoverProps, 'content' | 'onMouseEnter' | 'onMouseLeave' | 'open'> &\n    Omit<HTMLProps<HTMLDivElement>, 'as' | 'children' | 'content' | 'ref' | 'width'>\n  prefix?: ReactNode\n  radius?: Radius | Radius[]\n  /** @beta */\n  relatedElements?: HTMLElement[]\n  /** The callback function for rendering each option. */\n  renderOption?: (option: Option) => React.JSX.Element\n  /** @beta */\n  renderPopover?: (\n    props: {\n      content: React.JSX.Element | null\n      hidden: boolean\n      inputElement: HTMLInputElement | null\n      onMouseEnter: () => void\n      onMouseLeave: () => void\n    },\n    ref: Ref<HTMLDivElement>,\n  ) => ReactNode\n  renderValue?: (value: string, option?: Option) => string\n  suffix?: ReactNode\n  /** The current value. */\n  value?: string\n}\n\nconst DEFAULT_RENDER_VALUE = (value: string, option?: BaseAutocompleteOption) =>\n  option ? option.value : value\n\nconst DEFAULT_FILTER_OPTION = (query: string, option: BaseAutocompleteOption) =>\n  option.value.toLowerCase().indexOf(query.toLowerCase()) > -1\n\nconst InnerAutocomplete = forwardRef(function InnerAutocomplete<\n  Option extends BaseAutocompleteOption,\n>(\n  props: AutocompleteProps<Option> &\n    Omit<\n      HTMLProps<HTMLInputElement>,\n      | 'aria-activedescendant'\n      | 'aria-autocomplete'\n      | 'aria-expanded'\n      | 'aria-owns'\n      | 'as'\n      | 'autoCapitalize'\n      | 'autoComplete'\n      | 'autoCorrect'\n      | 'id'\n      | 'inputMode'\n      | 'onChange'\n      | 'onSelect'\n      | 'popover'\n      | 'prefix'\n      | 'ref'\n      | 'role'\n      | 'spellCheck'\n      | 'type'\n      | 'value'\n    >,\n  forwardedRef: React.ForwardedRef<HTMLInputElement>,\n) {\n  const {\n    border = true,\n    customValidity,\n    disabled,\n    filterOption: filterOptionProp,\n    fontSize = 2,\n    icon,\n    id,\n    listBox = EMPTY_RECORD,\n    loading,\n    onBlur,\n    onChange,\n    onFocus,\n    onQueryChange,\n    onSelect,\n    openButton,\n    openOnFocus,\n    options: optionsProp,\n    padding: paddingProp = 3,\n    popover = EMPTY_RECORD,\n    prefix,\n    radius = 2,\n    readOnly,\n    relatedElements,\n    renderOption: renderOptionProp,\n    renderPopover,\n    renderValue = DEFAULT_RENDER_VALUE,\n    suffix,\n    value: valueProp,\n    ...restProps\n  } = props\n\n  const [state, dispatch] = useReducer(autocompleteReducer, {\n    activeValue: valueProp || null,\n    focused: false,\n    listFocused: false,\n    query: null,\n    value: valueProp || null,\n  })\n\n  const {activeValue, focused, listFocused, query, value} = state\n\n  const defaultRenderOption = useCallback(\n    ({value}: BaseAutocompleteOption) => (\n      <Card data-as=\"button\" padding={paddingProp} radius={2} tone=\"inherit\">\n        <Text size={fontSize} textOverflow=\"ellipsis\">\n          {value}\n        </Text>\n      </Card>\n    ),\n    [fontSize, paddingProp],\n  )\n\n  const renderOption =\n    typeof renderOptionProp === 'function' ? renderOptionProp : defaultRenderOption\n\n  const filterOption =\n    typeof filterOptionProp === 'function' ? filterOptionProp : DEFAULT_FILTER_OPTION\n\n  // Element refs\n  const rootElementRef = useRef<HTMLDivElement | null>(null)\n  const resultsPopoverElementRef = useRef<HTMLDivElement | null>(null)\n  const inputElementRef = useRef<HTMLInputElement | null>(null)\n  const listBoxElementRef = useRef<HTMLDivElement | null>(null)\n\n  // Value refs\n  const listFocusedRef = useRef(false)\n  const valueRef = useRef(value)\n  const valuePropRef = useRef(valueProp)\n  const popoverMouseWithinRef = useRef(false)\n\n  // Forward ref to parent\n  useImperativeHandle<HTMLInputElement | null, HTMLInputElement | null>(\n    forwardedRef,\n    () => inputElementRef.current,\n  )\n\n  const listBoxId = `${id}-listbox`\n  const options = Array.isArray(optionsProp) ? optionsProp : EMPTY_ARRAY\n  const padding = useArrayProp(paddingProp)\n  const currentOption = useMemo(\n    () => (value !== null ? options.find((o) => o.value === value) : undefined),\n    [options, value],\n  )\n  const filteredOptions = useMemo(\n    () => options.filter((option) => (query ? filterOption(query, option) : true)),\n    [filterOption, options, query],\n  )\n  const filteredOptionsLen = filteredOptions.length\n  const activeItemId = activeValue ? `${id}-option-${activeValue}` : undefined\n  const expanded = (query !== null && loading) || (focused && query !== null)\n\n  const handleRootBlur = useCallback(\n    (event: FocusEvent<HTMLInputElement>) => {\n      setTimeout(() => {\n        // NOTE: This is a workaround for a bug that may happen in Chrome (clicking the scrollbar\n        // closes the results in certain situations):\n        // - Do not handle blur if the mouse is within the popover\n        if (popoverMouseWithinRef.current) {\n          return\n        }\n\n        const elements: HTMLElement[] = (relatedElements || []).concat(\n          rootElementRef.current ? [rootElementRef.current] : [],\n          resultsPopoverElementRef.current ? [resultsPopoverElementRef.current] : [],\n        )\n\n        let focusInside = false\n\n        if (document.activeElement) {\n          for (const e of elements) {\n            if (e === document.activeElement || e.contains(document.activeElement)) {\n              focusInside = true\n              break\n            }\n          }\n        }\n\n        if (focusInside === false) {\n          dispatch({type: 'root/blur'})\n          popoverMouseWithinRef.current = false\n          if (onQueryChange) onQueryChange(null)\n          if (onBlur) onBlur(event)\n        }\n      }, 0)\n    },\n    [onBlur, onQueryChange, relatedElements],\n  )\n\n  const handleRootFocus = useCallback((event: FocusEvent<HTMLDivElement>) => {\n    const listBoxElement = listBoxElementRef.current\n    const focusedElement = event.target instanceof HTMLElement ? event.target : null\n    const listFocused = listBoxElement?.contains(focusedElement) || false\n\n    if (listFocused !== listFocusedRef.current) {\n      listFocusedRef.current = listFocused\n\n      dispatch({type: 'root/setListFocused', listFocused})\n    }\n  }, [])\n\n  const handleOptionSelect = useCallback(\n    (v: string) => {\n      dispatch({type: 'value/change', value: v})\n\n      popoverMouseWithinRef.current = false\n\n      if (onSelect) onSelect(v)\n\n      valueRef.current = v\n\n      if (onChange) onChange(v)\n      if (onQueryChange) onQueryChange(null)\n\n      inputElementRef.current?.focus()\n    },\n    [onChange, onSelect, onQueryChange],\n  )\n\n  const handleRootKeyDown = useCallback(\n    (event: KeyboardEvent<HTMLElement>) => {\n      if (event.key === 'ArrowDown') {\n        event.preventDefault()\n\n        if (!filteredOptionsLen) return\n\n        const activeOption = filteredOptions.find((o) => o.value === activeValue)\n        const activeIndex = activeOption ? filteredOptions.indexOf(activeOption) : -1\n        const nextActiveOption = filteredOptions[(activeIndex + 1) % filteredOptionsLen]\n\n        if (nextActiveOption) {\n          dispatch({type: 'root/setActiveValue', value: nextActiveOption.value, listFocused: true})\n        }\n\n        return\n      }\n\n      if (event.key === 'ArrowUp') {\n        event.preventDefault()\n\n        if (!filteredOptionsLen) return\n\n        const activeOption = filteredOptions.find((o) => o.value === activeValue)\n        const activeIndex = activeOption ? filteredOptions.indexOf(activeOption) : -1\n        const nextActiveOption =\n          filteredOptions[\n            activeIndex === -1\n              ? filteredOptionsLen - 1\n              : (filteredOptionsLen + activeIndex - 1) % filteredOptionsLen\n          ]\n\n        if (nextActiveOption) {\n          dispatch({type: 'root/setActiveValue', value: nextActiveOption.value, listFocused: true})\n        }\n\n        return\n      }\n\n      if (event.key === 'Escape') {\n        dispatch({type: 'root/escape'})\n        popoverMouseWithinRef.current = false\n        if (onQueryChange) onQueryChange(null)\n        inputElementRef.current?.focus()\n\n        return\n      }\n\n      const target = event.target as Node\n      const listEl = listBoxElementRef.current\n\n      if (\n        (listEl === target || listEl?.contains(target)) &&\n        !AUTOCOMPLETE_LISTBOX_IGNORE_KEYS.includes(event.key)\n      ) {\n        inputElementRef.current?.focus()\n\n        return\n      }\n    },\n    [activeValue, filteredOptions, filteredOptionsLen, onQueryChange],\n  )\n\n  const handleInputChange = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => {\n      const nextQuery = event.currentTarget.value\n\n      dispatch({type: 'input/change', query: nextQuery})\n\n      if (onQueryChange) onQueryChange(nextQuery)\n    },\n    [onQueryChange],\n  )\n\n  const dispatchOpen = useCallback(() => {\n    dispatch({\n      type: 'root/open',\n      query: value ? renderValue(value, currentOption) : '',\n    })\n  }, [currentOption, renderValue, value])\n\n  const handleInputFocus = useCallback(\n    (event: FocusEvent<HTMLInputElement>) => {\n      if (!focused) {\n        dispatch({type: 'input/focus'})\n\n        if (onFocus) onFocus(event)\n        if (openOnFocus) dispatchOpen()\n      }\n    },\n    [focused, onFocus, openOnFocus, dispatchOpen],\n  )\n\n  const handlePopoverMouseEnter = useCallback(() => {\n    popoverMouseWithinRef.current = true\n  }, [])\n\n  const handlePopoverMouseLeave = useCallback(() => {\n    popoverMouseWithinRef.current = false\n  }, [])\n\n  const handleClearButtonClick = useCallback(() => {\n    dispatch({type: 'root/clear'})\n    valueRef.current = ''\n    if (onChange) onChange('')\n    if (onQueryChange) onQueryChange(null)\n    inputElementRef.current?.focus()\n  }, [onChange, onQueryChange])\n\n  const handleClearButtonFocus = useCallback(() => {\n    dispatch({type: 'input/focus'})\n  }, [])\n\n  // Change the value when `value` prop changes\n  useEffect(() => {\n    // If `valueProp` changed\n    if (valueProp !== valuePropRef.current) {\n      valuePropRef.current = valueProp\n\n      if (valueProp !== undefined) {\n        dispatch({type: 'value/change', value: valueProp})\n        valueRef.current = valueProp\n      }\n\n      return\n    }\n\n    // If `valueProp` is not equal to `value`\n    if (valueProp !== valueRef.current) {\n      valueRef.current = valueProp || null\n\n      dispatch({type: 'value/change', value: valueProp || null})\n    }\n  }, [valueProp])\n\n  // Reset active item when closing\n  useEffect(() => {\n    if (!focused && valueRef.current) {\n      dispatch({type: 'root/setActiveValue', value: valueRef.current})\n    }\n  }, [focused])\n\n  // Focus the selected item\n  useEffect(() => {\n    const listElement = listBoxElementRef.current\n\n    if (!listElement) return\n\n    const activeOption = filteredOptions.find((o) => o.value === activeValue)\n\n    if (activeOption) {\n      const activeIndex = filteredOptions.indexOf(activeOption)\n      const activeItemElement = listElement.childNodes[activeIndex] as HTMLLIElement | undefined\n\n      if (activeItemElement) {\n        if (_hasFocus(activeItemElement)) {\n          // already focused\n          return\n        }\n\n        focusFirstDescendant(activeItemElement)\n      }\n    }\n  }, [activeValue, filteredOptions])\n\n  const clearButton = useMemo(() => {\n    if (!loading && !disabled && value) {\n      return {\n        'aria-label': 'Clear',\n        'onFocus': handleClearButtonFocus,\n      }\n    }\n\n    return undefined\n  }, [disabled, handleClearButtonFocus, loading, value])\n\n  const openButtonBoxPadding = useMemo(\n    () =>\n      padding.map((v) => {\n        if (v === 0) return 0\n        if (v === 1) return 1\n        if (v === 2) return 1\n\n        return v - 2\n      }),\n    [padding],\n  )\n  const openButtonPadding = useMemo(() => padding.map((v) => Math.max(v - 1, 0)), [padding])\n  const openButtonProps: AutocompleteOpenButtonProps = useMemo(\n    () => (typeof openButton === 'object' ? openButton : EMPTY_RECORD),\n    [openButton],\n  )\n\n  const handleOpenClick = useCallback(\n    (event: MouseEvent<HTMLButtonElement>) => {\n      dispatchOpen()\n\n      if (openButtonProps.onClick) openButtonProps.onClick(event)\n\n      _raf(() => inputElementRef.current?.focus())\n    },\n    [openButtonProps, dispatchOpen],\n  )\n\n  const openButtonNode = useMemo(\n    () =>\n      !disabled && !readOnly && openButton ? (\n        <Box aria-hidden={expanded} padding={openButtonBoxPadding}>\n          <Button\n            aria-label=\"Open\"\n            disabled={expanded}\n            fontSize={fontSize}\n            icon={ChevronDownIcon}\n            mode=\"bleed\"\n            padding={openButtonPadding}\n            {...openButtonProps}\n            onClick={handleOpenClick}\n          />\n        </Box>\n      ) : undefined,\n    [\n      disabled,\n      expanded,\n      fontSize,\n      handleOpenClick,\n      openButton,\n      openButtonBoxPadding,\n      openButtonPadding,\n      openButtonProps,\n      readOnly,\n    ],\n  )\n\n  const inputValue = useMemo(() => {\n    if (query === null) {\n      if (value !== null) {\n        return renderValue(value, currentOption)\n      }\n\n      return ''\n    }\n\n    return query\n  }, [currentOption, query, renderValue, value])\n\n  const input = (\n    <TextInput\n      {...restProps}\n      aria-activedescendant={activeItemId}\n      aria-autocomplete=\"list\"\n      aria-expanded={expanded}\n      aria-owns={listBoxId}\n      autoCapitalize=\"off\"\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      border={border}\n      clearButton={clearButton}\n      customValidity={customValidity}\n      disabled={disabled}\n      fontSize={fontSize}\n      icon={icon}\n      iconRight={loading && AnimatedSpinnerIcon}\n      id={id}\n      inputMode=\"search\"\n      onChange={handleInputChange}\n      onClear={handleClearButtonClick}\n      onFocus={handleInputFocus}\n      padding={padding}\n      prefix={prefix}\n      radius={radius}\n      readOnly={readOnly}\n      ref={inputElementRef}\n      role=\"combobox\"\n      spellCheck={false}\n      suffix={suffix || openButtonNode}\n      value={inputValue}\n    />\n  )\n\n  const handleListBoxKeyDown = useCallback(\n    (event: KeyboardEvent<HTMLDivElement>) => {\n      // If the focus is currently in the list, move focus to the input element\n      if (event.key === 'Tab') {\n        if (listFocused) inputElementRef.current?.focus()\n      }\n    },\n    [listFocused],\n  )\n\n  const content = useMemo(() => {\n    if (filteredOptions.length === 0) return null\n\n    return (\n      <ListBox\n        data-ui=\"AutoComplete__results\"\n        onKeyDown={handleListBoxKeyDown}\n        padding={1}\n        {...listBox}\n        tabIndex={-1}\n      >\n        <Stack\n          as=\"ul\"\n          aria-multiselectable={false}\n          data-ui=\"AutoComplete__resultsList\"\n          id={listBoxId}\n          ref={listBoxElementRef}\n          role=\"listbox\"\n          space={1}\n        >\n          {filteredOptions.map((option) => {\n            const active =\n              activeValue !== null ? option.value === activeValue : currentOption === option\n\n            return (\n              <AutocompleteOption\n                id={`${id}-option-${option.value}`}\n                key={option.value}\n                onSelect={handleOptionSelect}\n                selected={active}\n                value={option.value}\n              >\n                {cloneElement(renderOption(option), {\n                  disabled: loading,\n                  selected: active,\n                  tabIndex: listFocused && active ? 0 : -1,\n                })}\n              </AutocompleteOption>\n            )\n          })}\n        </Stack>\n      </ListBox>\n    )\n  }, [\n    activeValue,\n    currentOption,\n    filteredOptions,\n    handleOptionSelect,\n    handleListBoxKeyDown,\n    id,\n    listBox,\n    listBoxId,\n    listFocused,\n    loading,\n    renderOption,\n  ])\n\n  const results = useMemo(() => {\n    if (renderPopover) {\n      return renderPopover(\n        {\n          content,\n          hidden: !expanded,\n          inputElement: inputElementRef.current,\n          onMouseEnter: handlePopoverMouseEnter,\n          onMouseLeave: handlePopoverMouseLeave,\n        },\n        resultsPopoverElementRef,\n      )\n    }\n\n    if (filteredOptionsLen === 0) {\n      return null\n    }\n\n    return (\n      <Popover\n        arrow={false}\n        constrainSize\n        content={content}\n        fallbackPlacements={AUTOCOMPLETE_POPOVER_FALLBACK_PLACEMENTS}\n        matchReferenceWidth\n        onMouseEnter={handlePopoverMouseEnter}\n        onMouseLeave={handlePopoverMouseLeave}\n        open={expanded}\n        overflow=\"auto\"\n        placement={AUTOCOMPLETE_POPOVER_PLACEMENT}\n        portal\n        radius={radius}\n        ref={resultsPopoverElementRef}\n        referenceElement={inputElementRef.current}\n        {...popover}\n      />\n    )\n  }, [\n    content,\n    expanded,\n    filteredOptionsLen,\n    handlePopoverMouseEnter,\n    handlePopoverMouseLeave,\n    popover,\n    radius,\n    renderPopover,\n  ])\n\n  return (\n    <StyledAutocomplete\n      data-ui=\"Autocomplete\"\n      onBlur={handleRootBlur}\n      onFocus={handleRootFocus}\n      onKeyDown={handleRootKeyDown}\n      ref={rootElementRef}\n    >\n      {input}\n      {results}\n    </StyledAutocomplete>\n  )\n})\n\nInnerAutocomplete.displayName = 'ForwardRef(Autocomplete)'\n\n/**\n * The Autocomplete component is typically used for search components.\n * It consists of a text input for writing a query, and properties for rendering suggestions.\n *\n * @public\n */\nexport const Autocomplete = InnerAutocomplete as <Option extends BaseAutocompleteOption>(\n  props: AutocompleteProps<Option> &\n    Omit<\n      HTMLProps<HTMLInputElement>,\n      | 'aria-activedescendant'\n      | 'aria-autocomplete'\n      | 'aria-expanded'\n      | 'aria-owns'\n      | 'as'\n      | 'autoCapitalize'\n      | 'autoComplete'\n      | 'autoCorrect'\n      | 'id'\n      | 'inputMode'\n      | 'onChange'\n      | 'onSelect'\n      | 'popover'\n      | 'prefix'\n      | 'ref'\n      | 'role'\n      | 'spellCheck'\n      | 'type'\n      | 'value'\n    > & {\n      ref?: Ref<HTMLInputElement>\n    },\n) => React.JSX.Element\n","import {styled} from 'styled-components'\n\nimport {Button} from '../../primitives'\n\nexport const StyledBreadcrumbs = styled.ol`\n  margin: 0;\n  padding: 0;\n  display: flex;\n  list-style: none;\n  align-items: center;\n  white-space: nowrap;\n  line-height: 0;\n`\n\nexport const ExpandButton = styled(Button)`\n  appearance: none;\n  margin: -4px;\n`\n","import {\n  Children,\n  forwardRef,\n  Fragment,\n  isValidElement,\n  useCallback,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\n\nimport {useArrayProp, useClickOutsideEvent} from '../../hooks'\nimport {Box, Popover, Stack, Text} from '../../primitives'\nimport {ExpandButton, StyledBreadcrumbs} from './breadcrumbs.styles'\n\n/**\n * @beta\n */\nexport interface BreadcrumbsProps {\n  maxLength?: number\n  separator?: React.ReactNode\n  space?: number | number[]\n}\n\n/**\n * @beta\n */\nexport const Breadcrumbs = forwardRef(function Breadcrumbs(\n  props: BreadcrumbsProps & Omit<React.HTMLProps<HTMLOListElement>, 'as' | 'ref' | 'type'>,\n  ref: React.ForwardedRef<HTMLOListElement>,\n) {\n  const {children, maxLength, separator, space: spaceRaw = 2, ...restProps} = props\n  const space = useArrayProp(spaceRaw)\n  const [open, setOpen] = useState(false)\n  const expandElementRef = useRef<HTMLButtonElement | null>(null)\n  const popoverElementRef = useRef<HTMLDivElement | null>(null)\n\n  const collapse = useCallback(() => setOpen(false), [])\n  const expand = useCallback(() => setOpen(true), [])\n\n  useClickOutsideEvent(collapse, () => [expandElementRef.current, popoverElementRef.current])\n\n  const rawItems = useMemo(() => Children.toArray(children).filter(isValidElement), [children])\n\n  const items = useMemo(() => {\n    const len = rawItems.length\n\n    if (maxLength && len > maxLength) {\n      const beforeLength = Math.ceil(maxLength / 2)\n      const afterLength = Math.floor(maxLength / 2)\n\n      return [\n        ...rawItems.slice(0, beforeLength - 1),\n        <Popover\n          constrainSize\n          content={\n            <Stack as=\"ol\" overflow=\"auto\" padding={space} space={space}>\n              {rawItems.slice(beforeLength - 1, len - afterLength)}\n            </Stack>\n          }\n          key=\"button\"\n          open={open}\n          placement=\"top\"\n          portal\n          ref={popoverElementRef}\n        >\n          <ExpandButton\n            fontSize={1}\n            mode=\"bleed\"\n            onClick={open ? collapse : expand}\n            padding={1}\n            ref={expandElementRef}\n            selected={open}\n            text=\"…\"\n          />\n        </Popover>,\n        ...rawItems.slice(len - afterLength),\n      ]\n    }\n\n    return rawItems\n  }, [collapse, expand, maxLength, open, rawItems, space])\n\n  return (\n    <StyledBreadcrumbs data-ui=\"Breadcrumbs\" {...restProps} ref={ref}>\n      {items.map((item, itemIndex) => (\n        <Fragment key={itemIndex}>\n          {itemIndex > 0 && (\n            <Box aria-hidden as=\"li\" paddingX={space}>\n              {separator || <Text muted>/</Text>}\n            </Box>\n          )}\n          <Box as=\"li\">{item}</Box>\n        </Fragment>\n      ))}\n    </StyledBreadcrumbs>\n  )\n})\nBreadcrumbs.displayName = 'ForwardRef(Breadcrumbs)'\n","import {CSSObject, getTheme_v2} from '@sanity/ui/theme'\nimport {css} from 'styled-components'\n\nimport {_responsive, ThemeProps} from '../../styles'\nimport {DialogPosition} from '../../types'\n\n/**\n * @internal\n */\nexport interface ResponsiveDialogPositionStyleProps {\n  $position: DialogPosition[]\n}\n\nexport function dialogStyle({theme}: ThemeProps): CSSObject {\n  const {color} = getTheme_v2(theme)\n\n  return {\n    '&:not([hidden])': {\n      display: 'flex',\n    },\n\n    'top': 0,\n    'left': 0,\n    'right': 0,\n    'bottom': 0,\n    'alignItems': 'center',\n    'justifyContent': 'center',\n    'outline': 'none',\n    'background': color.backdrop,\n  }\n}\n\nexport function responsiveDialogPositionStyle(\n  props: ResponsiveDialogPositionStyleProps & ThemeProps,\n): CSSObject[] {\n  const {media} = getTheme_v2(props.theme)\n\n  return _responsive(media, props.$position, (position) => ({'&&': {position}}))\n}\n\n/**\n * @internal\n */\nexport interface AnimationDialogStyleProps {\n  $animate: boolean\n}\n\nexport function animationDialogStyle(props: AnimationDialogStyleProps): ReturnType<typeof css> {\n  if (!props.$animate) return css``\n\n  return css`\n    @keyframes zoomIn {\n      from {\n        opacity: 0;\n        transform: scale(0.95);\n      }\n      to {\n        opacity: 1;\n        transform: scale(1);\n      }\n    }\n    @keyframes fadeIn {\n      from {\n        opacity: 0;\n      }\n      to {\n        opacity: 1;\n      }\n    }\n\n    animation: fadeIn 200ms ease-out;\n    // Animates the dialog card.\n    & > [data-ui='DialogCard'] {\n      animation: zoomIn 200ms ease-out;\n    }\n  `\n}\n","import {createGlobalScopedContext} from '../../lib/createGlobalScopedContext'\nimport {DialogPosition} from '../../types'\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport interface DialogContextValue {\n  version: 0.0\n  position?: DialogPosition | DialogPosition[]\n  zOffset?: number | number[]\n}\n\n/**\n * @internal\n */\nexport const DialogContext = createGlobalScopedContext<DialogContextValue>(\n  '@sanity/ui/context/dialog',\n  {version: 0.0},\n)\n","import {useContext} from 'react'\n\nimport {DialogContext, DialogContextValue} from './dialogContext'\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport function useDialog(): DialogContextValue {\n  return useContext(DialogContext)\n}\n","import {CloseIcon} from '@sanity/icons'\nimport {ThemeColorSchemeKey} from '@sanity/ui/theme'\nimport {forwardRef, useCallback, useEffect, useImperativeHandle, useRef} from 'react'\nimport {styled} from 'styled-components'\n\nimport {\n  containsOrEqualsElement,\n  focusFirstDescendant,\n  focusLastDescendant,\n  isHTMLElement,\n} from '../../helpers'\nimport {\n  useArrayProp,\n  useClickOutsideEvent,\n  useGlobalKeyDown,\n  usePrefersReducedMotion,\n} from '../../hooks'\nimport {Box, Button, Card, Container, Flex, Text} from '../../primitives'\nimport {ResponsivePaddingProps, ResponsiveWidthProps} from '../../primitives/types'\nimport {responsivePaddingStyle, ResponsivePaddingStyleProps} from '../../styles/internal'\nimport {useTheme_v2} from '../../theme'\nimport {DialogPosition, Radius} from '../../types'\nimport {Layer, LayerProps, Portal, useBoundaryElement, useLayer, usePortal} from '../../utils'\nimport {\n  animationDialogStyle,\n  AnimationDialogStyleProps,\n  dialogStyle,\n  responsiveDialogPositionStyle,\n  ResponsiveDialogPositionStyleProps,\n} from './styles'\nimport {useDialog} from './useDialog'\n\n/**\n * @public\n */\nexport interface DialogProps extends ResponsivePaddingProps, ResponsiveWidthProps {\n  /**\n   * @beta\n   */\n  __unstable_autoFocus?: boolean\n  /**\n   * @beta\n   */\n  __unstable_hideCloseButton?: boolean\n  cardRadius?: Radius | Radius[]\n  cardShadow?: number | number[]\n  contentRef?: React.ForwardedRef<HTMLDivElement>\n  footer?: React.ReactNode\n  header?: React.ReactNode\n  id: string\n  /** A callback that fires when the dialog becomes the top layer when it was not the top layer before. */\n  onActivate?: LayerProps['onActivate']\n  onClickOutside?: () => void\n  onClose?: () => void\n  portal?: string\n  position?: DialogPosition | DialogPosition[]\n  scheme?: ThemeColorSchemeKey\n  zOffset?: number | number[]\n  /**\n   * Whether the dialog should animate in on mount.\n   *\n   * @beta\n   * @defaultValue false\n   */\n  animate?: boolean\n}\n\ninterface DialogCardProps extends ResponsiveWidthProps {\n  /**\n   * @beta\n   */\n  __unstable_autoFocus: boolean\n  /**\n   * @beta\n   */\n  __unstable_hideCloseButton: boolean\n  children: React.ReactNode\n  contentRef?: React.ForwardedRef<HTMLDivElement>\n  footer: React.ReactNode\n  header: React.ReactNode\n  id: string\n  onClickOutside?: () => void\n  onClose?: () => void\n  portal?: string\n  radius: Radius | Radius[]\n  scheme?: ThemeColorSchemeKey\n  shadow: number | number[]\n}\n\nfunction isTargetWithinScope(\n  boundaryElement: HTMLElement | null,\n  portalElement: HTMLElement | null,\n  target: Node,\n): boolean {\n  if (!boundaryElement || !portalElement) return true\n\n  return (\n    containsOrEqualsElement(boundaryElement, target) ||\n    containsOrEqualsElement(portalElement, target)\n  )\n}\n\nconst StyledDialog = styled(Layer)<\n  ResponsiveDialogPositionStyleProps & ResponsivePaddingStyleProps & AnimationDialogStyleProps\n>(responsivePaddingStyle, dialogStyle, responsiveDialogPositionStyle, animationDialogStyle)\n\nconst DialogContainer = styled(Container)`\n  &:not([hidden]) {\n    display: flex;\n  }\n  width: 100%;\n  height: 100%;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`\n\nconst DialogCardRoot = styled(Card)`\n  &:not([hidden]) {\n    display: flex;\n  }\n  width: 100%;\n  min-height: 0;\n  max-height: 100%;\n  overflow: hidden;\n  overflow: clip;\n`\n\nconst DialogLayout = styled(Flex)`\n  flex: 1;\n  min-height: 0;\n  width: 100%;\n`\n\nconst DialogHeader = styled(Box)`\n  position: relative;\n  z-index: 2;\n`\n\nconst DialogContent = styled(Box)`\n  position: relative;\n  z-index: 1;\n  overflow: auto;\n  outline: none;\n`\n\nconst DialogFooter = styled(Box)`\n  position: relative;\n  z-index: 3;\n`\n\nconst DialogCard = forwardRef(function DialogCard(\n  props: DialogCardProps,\n  forwardedRef: React.ForwardedRef<HTMLDivElement>,\n) {\n  const {\n    __unstable_autoFocus: autoFocus,\n    __unstable_hideCloseButton: hideCloseButton,\n    children,\n    contentRef: forwardedContentRef,\n    footer,\n    header,\n    id,\n    onClickOutside,\n    onClose,\n    portal: portalProp,\n    radius: radiusProp,\n    scheme,\n    shadow: shadowProp,\n    width: widthProp,\n  } = props\n  const portal = usePortal()\n  const portalElement = portalProp ? portal.elements?.[portalProp] || null : portal.element\n  const boundaryElement = useBoundaryElement().element\n  const radius = useArrayProp(radiusProp)\n  const shadow = useArrayProp(shadowProp)\n  const width = useArrayProp(widthProp)\n  const ref = useRef<HTMLDivElement | null>(null)\n  const contentRef = useRef<HTMLDivElement | null>(null)\n  const layer = useLayer()\n  const {isTopLayer} = layer\n  const labelId = `${id}_label`\n  const showCloseButton = Boolean(onClose) && hideCloseButton === false\n  const showHeader = Boolean(header) || showCloseButton\n\n  useImperativeHandle<HTMLDivElement | null, HTMLDivElement | null>(forwardedRef, () => ref.current)\n  useImperativeHandle<HTMLDivElement | null, HTMLDivElement | null>(\n    forwardedContentRef,\n    () => contentRef.current,\n  )\n\n  useEffect(() => {\n    if (!autoFocus) return\n\n    // On mount: focus the first focusable element\n    if (ref.current) {\n      focusFirstDescendant(ref.current)\n    }\n  }, [autoFocus, ref])\n\n  useGlobalKeyDown(\n    useCallback(\n      (event: KeyboardEvent) => {\n        if (!isTopLayer || !onClose) return\n\n        const target = document.activeElement\n\n        if (target && !isTargetWithinScope(boundaryElement, portalElement, target)) {\n          // Ignore key presses when the focused element is outside of scope\n          return\n        }\n\n        if (event.key === 'Escape') {\n          event.preventDefault()\n          event.stopPropagation()\n          onClose()\n        }\n      },\n      [boundaryElement, isTopLayer, onClose, portalElement],\n    ),\n  )\n\n  useClickOutsideEvent(\n    isTopLayer &&\n      onClickOutside &&\n      ((event) => {\n        const target = event.target as Node | null\n\n        if (target && !isTargetWithinScope(boundaryElement, portalElement, target)) {\n          // Ignore clicks outside of the scope\n          return\n        }\n\n        onClickOutside()\n      }),\n    () => [ref.current],\n  )\n\n  return (\n    <DialogContainer data-ui=\"DialogCard\" width={width}>\n      <DialogCardRoot radius={radius} ref={ref} scheme={scheme} shadow={shadow}>\n        <DialogLayout direction=\"column\">\n          {showHeader && (\n            <DialogHeader>\n              <Flex align=\"flex-start\" padding={3}>\n                <Box flex={1} padding={2}>\n                  {header && (\n                    <Text id={labelId} size={1} weight=\"semibold\">\n                      {header}\n                    </Text>\n                  )}\n                </Box>\n                {showCloseButton && (\n                  <Box flex=\"none\">\n                    <Button\n                      aria-label=\"Close dialog\"\n                      disabled={!onClose}\n                      icon={CloseIcon}\n                      mode=\"bleed\"\n                      onClick={onClose}\n                      padding={2}\n                    />\n                  </Box>\n                )}\n              </Flex>\n            </DialogHeader>\n          )}\n\n          <DialogContent flex={1} ref={contentRef} tabIndex={-1}>\n            {children}\n          </DialogContent>\n\n          {footer && <DialogFooter>{footer}</DialogFooter>}\n        </DialogLayout>\n      </DialogCardRoot>\n    </DialogContainer>\n  )\n})\n\nDialogCard.displayName = 'ForwardRef(DialogCard)'\n\n/**\n * The Dialog component.\n *\n * @public\n */\nexport const Dialog = forwardRef(function Dialog(\n  props: DialogProps & Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'id' | 'width'>,\n  ref: React.Ref<HTMLDivElement>,\n) {\n  const dialog = useDialog()\n  const {layer} = useTheme_v2()\n  const {\n    __unstable_autoFocus: autoFocus = true,\n    __unstable_hideCloseButton: hideCloseButton = false,\n    cardRadius: cardRadiusProp = 4,\n    cardShadow = 3,\n    children,\n    contentRef,\n    footer,\n    header,\n    id,\n    onActivate,\n    onClickOutside,\n    onClose,\n    onFocus,\n    padding: paddingProp = 3,\n    portal: portalProp,\n    position: _positionProp,\n    scheme,\n    width: widthProp = 0,\n    zOffset: _zOffsetProp,\n    animate: _animate = false,\n    ...restProps\n  } = props\n  const positionProp = _positionProp ?? (dialog.position || 'fixed')\n  const zOffsetProp = _zOffsetProp ?? (dialog.zOffset || layer.dialog.zOffset)\n  const prefersReducedMotion = usePrefersReducedMotion()\n  const animate = prefersReducedMotion ? false : _animate\n  const portal = usePortal()\n  const portalElement = portalProp ? portal.elements?.[portalProp] || null : portal.element\n  const boundaryElement = useBoundaryElement().element\n  const cardRadius = useArrayProp(cardRadiusProp)\n  const padding = useArrayProp(paddingProp)\n  const position = useArrayProp(positionProp)\n  const width = useArrayProp(widthProp)\n  const zOffset = useArrayProp(zOffsetProp)\n  const preDivRef = useRef<HTMLDivElement | null>(null)\n  const postDivRef = useRef<HTMLDivElement | null>(null)\n  const cardRef = useRef<HTMLDivElement | null>(null)\n  const focusedElementRef = useRef<HTMLElement | null>(null)\n\n  const handleFocus = useCallback(\n    (event: React.FocusEvent<HTMLDivElement>) => {\n      onFocus?.(event)\n\n      const target = event.target\n      const cardElement = cardRef.current\n\n      if (cardElement && target === preDivRef.current) {\n        focusLastDescendant(cardElement)\n\n        return\n      }\n\n      if (cardElement && target === postDivRef.current) {\n        focusFirstDescendant(cardElement)\n\n        return\n      }\n\n      if (isHTMLElement(event.target)) {\n        focusedElementRef.current = event.target\n      }\n    },\n    [onFocus],\n  )\n\n  const labelId = `${id}_label`\n\n  const rootClickTimeoutRef = useRef<NodeJS.Timeout>(undefined)\n\n  // If the resulting active element (a.k.a. focused element) is not withing scope when clicking\n  // within the dialog, then we want to focus the previously interactive element in the dialog instead.\n  // This is to allow the user to tab or close the dialog by pressing escape.\n  const handleRootClick = useCallback(() => {\n    if (rootClickTimeoutRef.current) {\n      clearTimeout(rootClickTimeoutRef.current)\n    }\n\n    rootClickTimeoutRef.current = setTimeout(() => {\n      const activeElement = document.activeElement\n\n      if (activeElement && !isTargetWithinScope(boundaryElement, portalElement, activeElement)) {\n        const target = focusedElementRef.current\n\n        if (!target || !document.body.contains(target)) {\n          // No previously focused element, or it's not in the document anymore\n          const cardElement = cardRef.current\n          if (cardElement) focusFirstDescendant(cardElement)\n\n          return\n        }\n\n        target.focus()\n      }\n    }, 0)\n  }, [boundaryElement, portalElement])\n\n  return (\n    <Portal __unstable_name={portalProp}>\n      <StyledDialog\n        {...restProps}\n        $animate={animate}\n        $padding={padding}\n        $position={position}\n        aria-labelledby={labelId}\n        aria-modal\n        data-ui=\"Dialog\"\n        id={id}\n        onActivate={onActivate}\n        onClick={handleRootClick}\n        onFocus={handleFocus}\n        ref={ref}\n        role=\"dialog\"\n        zOffset={zOffset}\n      >\n        {/* eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex */}\n        <div ref={preDivRef} tabIndex={0} />\n        <DialogCard\n          __unstable_autoFocus={autoFocus}\n          __unstable_hideCloseButton={hideCloseButton}\n          contentRef={contentRef}\n          footer={footer}\n          header={header}\n          id={id}\n          onClickOutside={onClickOutside}\n          onClose={onClose}\n          portal={portalProp}\n          radius={cardRadius}\n          ref={cardRef}\n          scheme={scheme}\n          shadow={cardShadow}\n          width={width}\n        >\n          {children}\n        </DialogCard>\n        {/* eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex */}\n        <div ref={postDivRef} tabIndex={0} />\n      </StyledDialog>\n    </Portal>\n  )\n})\nDialog.displayName = 'ForwardRef(Dialog)'\n","import {useMemo} from 'react'\n\nimport {DialogPosition} from '../../types'\nimport {DialogContext, DialogContextValue} from './dialogContext'\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport interface DialogProviderProps {\n  children?: React.ReactNode\n  position?: DialogPosition | DialogPosition[]\n  zOffset?: number | number[]\n}\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport function DialogProvider(props: DialogProviderProps): React.JSX.Element {\n  const {children, position, zOffset} = props\n\n  const contextValue: DialogContextValue = useMemo(\n    () => ({\n      version: 0.0,\n      position,\n      zOffset,\n    }),\n    [position, zOffset],\n  )\n\n  return <DialogContext.Provider value={contextValue}>{children}</DialogContext.Provider>\n}\n\nDialogProvider.displayName = 'DialogProvider'\n","import {ThemeColorSchemeKey} from '@sanity/ui/theme'\nimport {\n  cloneElement,\n  forwardRef,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\n\nimport {Popover, PopoverProps} from '../../primitives'\nimport {Placement, Radius} from '../../types'\nimport {MenuProps} from './menu'\n\n/**\n * @public\n */\nexport interface MenuButtonProps {\n  /**\n   * @beta Do not use in production.\n   */\n  __unstable_disableRestoreFocusOnClose?: boolean\n  /**\n   * @deprecated Use `popover={{boundaryElement: element}}` instead.\n   */\n  boundaryElement?: HTMLElement\n  button: React.JSX.Element\n  id: string\n  menu?: React.JSX.Element\n  onClose?: () => void\n  onOpen?: () => void\n  /**\n   * @deprecated Use `popover={{placement: 'top'}}` instead.\n   */\n  placement?: Placement\n  popover?: Omit<PopoverProps, 'content' | 'open'>\n  /**\n   * @deprecated Use `popover={{scheme: 'dark'}}` instead.\n   */\n  popoverScheme?: ThemeColorSchemeKey\n  /**\n   * @deprecated Use `popover={{radius: 2}}` instead.\n   */\n  popoverRadius?: Radius | Radius[]\n  /**\n   * @beta Do not use in production.\n   * @deprecated Use `popover={{portal: true}}` instead.\n   */\n  portal?: boolean\n  /**\n   * @deprecated Use `popover={{preventOverflow: true}}` instead.\n   */\n  preventOverflow?: boolean\n}\n\n/**\n * The `MenuButton` component follows the WAI-ARIA specification for menu buttons.\n *\n * @public\n */\nexport const MenuButton = forwardRef(function MenuButton(\n  props: MenuButtonProps,\n  forwardedRef: React.ForwardedRef<HTMLButtonElement | null>,\n) {\n  const {\n    __unstable_disableRestoreFocusOnClose: disableRestoreFocusOnClose = false,\n    boundaryElement: deprecated_boundaryElement,\n    button: buttonProp,\n    id,\n    menu: menuProp,\n    onClose,\n    onOpen,\n    placement: deprecated_placement,\n    popoverScheme: deprecated_popoverScheme,\n    portal: deprecated_portal = true,\n    popover,\n    popoverRadius: deprecated_popoverRadius,\n    preventOverflow: deprecated_preventOverflow,\n  } = props\n  const [open, setOpen] = useState(false)\n  const [shouldFocus, setShouldFocus] = useState<'first' | 'last' | null>(null)\n  const [buttonElement, setButtonElement] = useState<HTMLButtonElement | null>(null)\n  const [menuElements, setChildMenuElements] = useState<HTMLElement[]>([])\n  const openRef = useRef<boolean>(open)\n\n  // Notify consumers when the menu opens\n  useEffect(() => {\n    if (onOpen && open && !openRef.current) {\n      onOpen()\n    }\n  }, [onOpen, open])\n\n  // Notify consumers when the menu closes\n  useEffect(() => {\n    if (onClose && !open && openRef.current) {\n      onClose()\n    }\n  }, [onClose, open])\n\n  useEffect(() => {\n    openRef.current = open\n  }, [open])\n\n  const handleButtonClick = useCallback(() => {\n    setOpen((v) => !v)\n    setShouldFocus(null)\n  }, [])\n\n  // Prevent mouse event propagation when the menu is open.\n  // This is to ensure that `handleBlur` isn't triggered when clicking the menu button whilst open,\n  // which can lead to `setOpen` being triggered multiple times (once by `handleBlur`, and again by `handleButtonClick`).\n  const handleMouseDown = useCallback(\n    (event: PointerEvent) => {\n      if (open) event.preventDefault()\n    },\n    [open],\n  )\n\n  const handleButtonKeyDown = useCallback((event: React.KeyboardEvent<HTMLButtonElement>) => {\n    // On `ArrowDown`, `Enter` and `Space`\n    // - Opens menu and moves focus to first menuitem\n    if (event.key === 'ArrowDown' || event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault()\n      setOpen(true)\n      setShouldFocus('first')\n\n      return\n    }\n\n    // On `ArrowUp`\n    // - \tOpens menu and moves focus to last menuitem\n    if (event.key === 'ArrowUp') {\n      event.preventDefault()\n      setOpen(true)\n      setShouldFocus('last')\n\n      return\n    }\n  }, [])\n\n  const handleMenuClickOutside = useCallback(\n    (event: MouseEvent) => {\n      const target = event.target\n\n      if (!(target instanceof Node)) {\n        return\n      }\n\n      if (buttonElement && (target === buttonElement || buttonElement.contains(target))) {\n        return\n      }\n\n      for (const el of menuElements) {\n        if (target === el || el.contains(target)) {\n          return\n        }\n      }\n\n      setOpen(false)\n    },\n    [buttonElement, menuElements],\n  )\n\n  const handleMenuEscape = useCallback(() => {\n    setOpen(false)\n    if (disableRestoreFocusOnClose) return\n    if (buttonElement) buttonElement.focus()\n  }, [buttonElement, disableRestoreFocusOnClose])\n\n  const handleBlur = useCallback(\n    (event: FocusEvent) => {\n      const target = event.relatedTarget\n\n      if (!(target instanceof Node)) {\n        return\n      }\n\n      for (const el of menuElements) {\n        if (el === target || el.contains(target)) {\n          return\n        }\n      }\n\n      setOpen(false)\n    },\n    [menuElements],\n  )\n\n  const handleItemClick = useCallback(() => {\n    setOpen(false)\n    if (disableRestoreFocusOnClose) return\n    if (buttonElement) buttonElement.focus()\n  }, [buttonElement, disableRestoreFocusOnClose])\n\n  const registerElement = useCallback((el: HTMLElement) => {\n    setChildMenuElements((els) => els.concat([el]))\n\n    return () => setChildMenuElements((els) => els.filter((_el) => _el !== el))\n  }, [])\n\n  const menuProps: MenuProps = {\n    'aria-labelledby': id,\n    'onBlurCapture': handleBlur,\n    'onClickOutside': handleMenuClickOutside,\n    'onEscape': handleMenuEscape,\n    'onItemClick': handleItemClick,\n    'originElement': buttonElement,\n    registerElement,\n    shouldFocus,\n  }\n\n  const menu = menuProp && cloneElement(menuProp, menuProps)\n\n  const button = useMemo(\n    () =>\n      buttonProp &&\n      cloneElement(buttonProp, {\n        'data-ui': 'MenuButton',\n        id,\n        'onClick': handleButtonClick,\n        'onKeyDown': handleButtonKeyDown,\n        'onMouseDown': handleMouseDown,\n        'aria-haspopup': true,\n        'aria-expanded': open,\n        'ref': setButtonElement,\n        'selected': buttonProp.props.selected ?? open,\n      }),\n    [buttonProp, handleButtonClick, handleButtonKeyDown, handleMouseDown, id, open],\n  )\n\n  // Forward button ref to parent\n  useImperativeHandle<HTMLButtonElement | null, HTMLButtonElement | null>(\n    forwardedRef,\n    () => buttonElement,\n    [buttonElement],\n  )\n\n  const popoverProps: MenuButtonProps['popover'] = useMemo(\n    () => ({\n      boundaryElement: deprecated_boundaryElement,\n      overflow: 'auto',\n      placement: deprecated_placement,\n      portal: deprecated_portal,\n      preventOverflow: deprecated_preventOverflow,\n      radius: deprecated_popoverRadius,\n      scheme: deprecated_popoverScheme,\n      ...(popover || {}),\n    }),\n    [\n      deprecated_boundaryElement,\n      deprecated_placement,\n      deprecated_popoverRadius,\n      deprecated_popoverScheme,\n      deprecated_portal,\n      deprecated_preventOverflow,\n      popover,\n    ],\n  )\n\n  return (\n    <Popover data-ui=\"MenuButton__popover\" {...popoverProps} content={menu} open={open}>\n      {button || <></>}\n    </Popover>\n  )\n})\nMenuButton.displayName = 'ForwardRef(MenuButton)'\n","import {css, keyframes} from 'styled-components'\n\nconst keyframe = keyframes`\n  0% {\n    background-position: 100%;\n  }\n  100% {\n    background-position: -100%;\n  }\n`\n\nconst animation = css`\n  background-image: linear-gradient(\n    to right,\n    var(--card-skeleton-color-from),\n    var(--card-skeleton-color-to),\n    var(--card-skeleton-color-from),\n    var(--card-skeleton-color-from),\n    var(--card-skeleton-color-from)\n  );\n  background-position: 100%;\n  background-size: 200% 100%;\n  background-attachment: fixed;\n  animation-name: ${keyframe};\n  animation-timing-function: ease-in-out;\n  animation-iteration-count: infinite;\n  animation-duration: 2000ms;\n`\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport const skeletonStyle = css<{$animated: boolean; $visible: boolean}>`\n  opacity: ${({$visible}) => ($visible ? 1 : 0)};\n  transition: opacity 200ms ease-in;\n\n  @media screen and (prefers-reduced-motion: no-preference) {\n    ${({$animated}) =>\n      $animated\n        ? animation\n        : css`\n            background-color: var(--card-skeleton-color-from);\n          `}\n  }\n\n  @media screen and (prefers-reduced-motion: reduce) {\n    background-color: var(--card-skeleton-color-from);\n  }\n`\n","import {forwardRef, useEffect, useState} from 'react'\nimport {styled} from 'styled-components'\n\nimport {useArrayProp} from '../../hooks'\nimport {Box, BoxProps, ResponsiveRadiusProps} from '../../primitives'\nimport {responsiveRadiusStyle, ResponsiveRadiusStyleProps} from '../../styles/internal'\nimport {skeletonStyle} from './styles'\n\nconst StyledSkeleton = styled(Box)<\n  {$animated: boolean; $visible: boolean} & ResponsiveRadiusStyleProps\n>(responsiveRadiusStyle, skeletonStyle)\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport interface SkeletonProps extends ResponsiveRadiusProps, Omit<BoxProps, 'children'> {\n  animated?: boolean\n  delay?: number\n}\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport const Skeleton = forwardRef(function Skeleton(\n  props: SkeletonProps & React.HTMLProps<HTMLDivElement>,\n  ref: React.Ref<HTMLDivElement>,\n) {\n  const {animated = false, delay, radius, ...restProps} = props\n  const [visible, setVisible] = useState<boolean>(delay ? false : true)\n\n  useEffect(() => {\n    if (!delay) {\n      return setVisible(true)\n    }\n\n    const timeout = setTimeout(() => {\n      setVisible(true)\n    }, delay)\n\n    return () => {\n      clearTimeout(timeout)\n    }\n  }, [delay])\n\n  return (\n    <StyledSkeleton\n      {...restProps}\n      $animated={animated}\n      $radius={useArrayProp(radius)}\n      $visible={visible}\n      ref={ref}\n    />\n  )\n})\nSkeleton.displayName = 'ForwardRef(Skeleton)'\n","import {getTheme_v2, ThemeFontKey} from '@sanity/ui/theme'\nimport {forwardRef} from 'react'\nimport {styled} from 'styled-components'\n\nimport {useArrayProp} from '../../hooks'\nimport {_responsive, ThemeProps} from '../../styles'\nimport {Skeleton, SkeletonProps} from './skeleton'\n\nconst StyledSkeleton = styled(Skeleton)<{$size: number[]; $style: ThemeFontKey}>((\n  props: {\n    $size: number[]\n    $style: ThemeFontKey\n  } & ThemeProps,\n) => {\n  const {$size, $style} = props\n  const {font, media} = getTheme_v2(props.theme)\n  const fontStyle = font[$style]\n\n  const styles = _responsive(media, $size, (sizeIndex) => {\n    const fontSize = fontStyle.sizes[sizeIndex]\n    const capHeight = fontSize.lineHeight - fontSize.ascenderHeight - fontSize.descenderHeight\n\n    return {height: capHeight}\n  })\n\n  return styles\n})\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport interface TextSkeletonProps extends SkeletonProps {\n  size?: number | number[]\n}\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport interface LabelSkeletonProps extends SkeletonProps {\n  size?: number | number[]\n}\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport interface HeadingSkeletonProps extends SkeletonProps {\n  size?: number | number[]\n}\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport interface CodeSkeletonProps extends SkeletonProps {\n  size?: number | number[]\n}\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport const TextSkeleton = forwardRef(function TextSkeleton(\n  props: TextSkeletonProps &\n    Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'children' | 'height' | 'size'>,\n  ref: React.Ref<HTMLDivElement>,\n) {\n  const {size = 2, ...restProps} = props\n  const $size = useArrayProp(size)\n\n  return <StyledSkeleton {...restProps} $size={$size} ref={ref} $style=\"text\" />\n})\nTextSkeleton.displayName = 'ForwardRef(TextSkeleton)'\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport const LabelSkeleton = forwardRef(function TextSkeleton(\n  props: LabelSkeletonProps &\n    Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'children' | 'height' | 'size'>,\n  ref: React.Ref<HTMLDivElement>,\n) {\n  const {size = 2, ...restProps} = props\n  const $size = useArrayProp(size)\n\n  return <StyledSkeleton {...restProps} $size={$size} ref={ref} $style=\"label\" />\n})\nLabelSkeleton.displayName = 'ForwardRef(LabelSkeleton)'\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport const HeadingSkeleton = forwardRef(function TextSkeleton(\n  props: HeadingSkeletonProps &\n    Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'children' | 'height' | 'size'>,\n  ref: React.Ref<HTMLDivElement>,\n) {\n  const {size = 2, ...restProps} = props\n  const $size = useArrayProp(size)\n\n  return <StyledSkeleton {...restProps} $size={$size} ref={ref} $style=\"heading\" />\n})\nHeadingSkeleton.displayName = 'ForwardRef(HeadingSkeleton)'\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport const CodeSkeleton = forwardRef(function TextSkeleton(\n  props: CodeSkeletonProps &\n    Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'children' | 'height' | 'size'>,\n  ref: React.Ref<HTMLDivElement>,\n) {\n  const {size = 2, ...restProps} = props\n  const $size = useArrayProp(size)\n\n  return <StyledSkeleton {...restProps} $size={$size} ref={ref} $style=\"code\" />\n})\nCodeSkeleton.displayName = 'ForwardRef(CodeSkeleton)'\n","import {forwardRef} from 'react'\n\nimport {Box, BoxProps} from '../../primitives'\n\n/**\n * @public\n */\nexport interface TabPanelProps extends BoxProps {\n  /**\n   * The `id` of the correlating `Tab` component.\n   */\n  'aria-labelledby': string\n  'id': string\n}\n\n/**\n * @public\n */\nexport const TabPanel = forwardRef(function TabPanel(\n  props: TabPanelProps &\n    Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'aria-labelledby' | 'id' | 'role'>,\n  ref: React.ForwardedRef<HTMLDivElement>,\n) {\n  const {flex, ...restProps} = props\n\n  return (\n    <Box\n      data-ui=\"TabPanel\"\n      {...restProps}\n      flex={flex}\n      ref={ref}\n      role=\"tabpanel\"\n      tabIndex={props.tabIndex === undefined ? 0 : props.tabIndex}\n    >\n      {props.children}\n    </Box>\n  )\n})\nTabPanel.displayName = 'ForwardRef(TabPanel)'\n","import {getTheme_v2, ThemeColorStateToneKey} from '@sanity/ui/theme'\nimport {styled} from 'styled-components'\n\nimport {Card, Flex} from '../../primitives'\nimport type {ButtonTone} from '../../types'\n\nconst LOADING_BAR_HEIGHT = 2\n\nexport const STATUS_CARD_TONE = {\n  error: 'critical',\n  warning: 'caution',\n  success: 'positive',\n  info: 'neutral',\n} satisfies {[key: string]: ThemeColorStateToneKey}\n\nexport const BUTTON_TONE = {\n  error: 'critical',\n  warning: 'caution',\n  success: 'positive',\n  info: 'neutral',\n} satisfies {[key: string]: ButtonTone}\n\nexport const TextBox = styled(Flex)`\n  overflow-x: auto;\n`\n\nexport const StyledToast = styled(Card)`\n  pointer-events: all;\n  width: 100%;\n  position: relative;\n  overflow: hidden;\n  overflow: clip;\n\n  &[data-has-duration] {\n    padding-bottom: calc(${LOADING_BAR_HEIGHT}px / 2);\n  }\n`\n\nexport const LoadingBar = styled.div`\n  display: flex;\n  position: absolute;\n  bottom: 0px;\n  top: 0px;\n  left: 0px;\n  right: 0px;\n  pointer-events: none;\n  z-index: -1;\n  overflow: hidden;\n  overflow: clip;\n  background: transparent;\n  align-items: flex-end;\n  will-change: opacity;\n`\n\nexport const LoadingBarMask = styled(Card)`\n  position: absolute;\n  top: 0;\n  left: -${LOADING_BAR_HEIGHT}px;\n  right: -${LOADING_BAR_HEIGHT}px;\n  bottom: ${LOADING_BAR_HEIGHT}px;\n  z-index: 1;\n`\n\ntype LoadingBarProgressProps = Omit<React.ComponentProps<typeof Card>, 'tone'> & {\n  tone: ThemeColorStateToneKey\n}\nexport const LoadingBarProgress = styled<React.ComponentType<LoadingBarProgressProps>>(Card)`\n  display: block;\n  height: 100%;\n  width: 100%;\n  transform-origin: 0% 50%;\n  background-color: ${(props) => {\n    const {color} = getTheme_v2(props.theme)\n\n    return color.button.default[props.tone].enabled.bg\n  }};\n`\n","import {CloseIcon} from '@sanity/icons'\nimport {motion, type Variant, type Variants} from 'framer-motion'\n\nimport {usePrefersReducedMotion} from '../../hooks/usePrefersReducedMotion'\nimport {Box, Button, Flex, Stack, Text} from '../../primitives'\nimport {\n  BUTTON_TONE,\n  LoadingBar,\n  LoadingBarMask,\n  LoadingBarProgress,\n  STATUS_CARD_TONE,\n  StyledToast,\n  TextBox,\n} from './styles'\n\n/**\n * @public\n */\nexport interface ToastProps {\n  closable?: boolean\n  description?: React.ReactNode\n  onClose: () => void\n  radius?: number | number[]\n  title?: React.ReactNode\n  status?: 'error' | 'warning' | 'success' | 'info'\n  duration?: number\n  updatedAt?: number\n}\n\nconst ROLES = {\n  error: 'alert',\n  warning: 'alert',\n  success: 'alert',\n  info: 'alert',\n} as const\n\n// Support pattern used by Sanity Studio, that works around the lack of `duration: Infinity` support in older @sanity/ui versions\n// https://developer.mozilla.org/en-US/docs/Web/API/setTimeout#maximum_delay_value\nconst LONG_ENOUGH_BUT_NOT_TOO_LONG = 1000 * 60 * 60 * 24 * 24\n\n/**\n * The `Toast` component gives feedback to users when an action has taken place.\n *\n * Toasts can be closed with a close button, or auto-dismiss after a certain timeout.\n *\n * @public\n */\nexport function Toast(\n  props: ToastProps &\n    Omit<\n      React.HTMLProps<HTMLDivElement>,\n      | 'as'\n      | 'height'\n      | 'ref'\n      | 'title'\n      | 'onAnimationStart'\n      | 'onDragStart'\n      | 'onDragEnd'\n      | 'onDrag'\n    >,\n): React.JSX.Element {\n  const {\n    closable,\n    description,\n    duration,\n    onClose,\n    radius = 3,\n    title,\n    status,\n    updatedAt,\n    ...restProps\n  } = props\n  const cardTone = status ? STATUS_CARD_TONE[status] : 'default'\n  const buttonTone = status ? BUTTON_TONE[status] : 'default'\n  const role = status ? ROLES[status] : 'status'\n\n  const prefersReducedMotion = usePrefersReducedMotion()\n\n  const visualDuration: number = prefersReducedMotion ? 0 : 0.26\n  const transition = visualDuration ? {type: 'spring', visualDuration, bounce: 0.25} : {duration: 0}\n\n  const hasDuration = duration && isFinite(duration) && duration < LONG_ENOUGH_BUT_NOT_TOO_LONG\n  const initial: ContainerVariants[] = ['hidden', 'initial']\n  const animate: ContainerVariants[] = ['visible', 'slideIn']\n  const exit: ContainerVariants[] = ['hidden', 'slideOut']\n\n  return (\n    <MotionToast\n      data-ui=\"Toast\"\n      role={role}\n      {...restProps}\n      data-has-duration={hasDuration ? '' : undefined}\n      custom={visualDuration}\n      radius={radius}\n      shadow={2}\n      tone={cardTone}\n      forwardedAs=\"li\"\n      layout=\"position\"\n      variants={container}\n      initial={initial}\n      animate={animate}\n      exit={exit}\n      transition={transition}\n    >\n      <MotionFlex align=\"flex-start\" variants={content} transition={transition}>\n        <TextBox flex={1} padding={3}>\n          <Stack space={3}>\n            {title && (\n              <Text size={1} weight=\"medium\">\n                {title}\n              </Text>\n            )}\n            {description && (\n              <MotionText muted size={1} variants={content} transition={transition}>\n                {description}\n              </MotionText>\n            )}\n          </Stack>\n        </TextBox>\n\n        {closable && (\n          <Box padding={1}>\n            <Button\n              as=\"button\"\n              icon={CloseIcon}\n              mode=\"bleed\"\n              padding={2}\n              tone={buttonTone}\n              onClick={onClose}\n              style={{verticalAlign: 'top'}}\n            />\n          </Box>\n        )}\n      </MotionFlex>\n      {hasDuration && (\n        <MotionLoadingBar variants={content} transition={transition}>\n          <LoadingBarMask tone={cardTone} radius={radius} />\n          <MotionLoadingBarProgress\n            key={`progress-${updatedAt}`}\n            tone={cardTone}\n            initial={{scaleX: 0}}\n            animate={{scaleX: 1}}\n            transition={{delay: visualDuration, duration: duration / 1_000, ease: 'linear'}}\n            onAnimationComplete={onClose}\n          />\n        </MotionLoadingBar>\n      )}\n    </MotionToast>\n  )\n}\n\nToast.displayName = 'Toast'\n\nconst container = {\n  initial: {y: 32, scale: 0.5, zIndex: 1},\n  hidden: {opacity: 0},\n  visible: (visualDuration: number) => {\n    if (!visualDuration) return {opacity: 1}\n\n    return {\n      opacity: 1,\n      transition: {\n        when: 'beforeChildren',\n        staggerChildren: visualDuration / 3,\n        duration: visualDuration / 3,\n      },\n    }\n  },\n  slideIn: {\n    y: 0,\n    scale: 1,\n  },\n  slideOut: {\n    zIndex: 0,\n    scale: 0.75,\n  },\n} satisfies Variants\ntype ContainerVariants = keyof typeof container\n\nconst content = {\n  initial: {\n    willChange: 'transform',\n  },\n  hidden: {\n    opacity: 0,\n  },\n  visible: {\n    opacity: 1,\n  },\n} satisfies Partial<Record<ContainerVariants, Variant>>\n\nconst MotionToast = motion.create(StyledToast)\nconst MotionFlex = motion.create(Flex)\nconst MotionText = motion.create(Text)\nconst MotionLoadingBar = motion.create(LoadingBar)\nconst MotionLoadingBarProgress = motion.create(LoadingBarProgress)\n","import {useSyncExternalStore} from 'react'\n\n/**\n * Some components should only render after mounting to the DOM, and not be rendered at all during SSR renderToString or equivalent.\n * @public\n */\nexport function useMounted(): boolean {\n  return useSyncExternalStore(\n    subscribe,\n    () => true,\n    () => false,\n  )\n}\n\nconst subscribe = () => () => {}\n","import {createGlobalScopedContext} from '../../lib/createGlobalScopedContext'\nimport {ToastContextValue} from './types'\n\nexport const ToastContext = createGlobalScopedContext<ToastContextValue | null>(\n  '@sanity/ui/context/toast',\n  null,\n)\n","import {styled} from 'styled-components'\n\nimport {Grid} from '../../primitives/grid'\nimport {useLayer} from '../../utils'\n\n/**\n * @public\n */\nexport interface ToastLayerProps {\n  children: React.ReactNode\n  padding?: number | number[]\n  paddingX?: number | number[]\n  paddingY?: number | number[]\n  gap?: number | number[]\n}\n\n/**\n * @internal\n */\nexport function ToastLayer(props: ToastLayerProps): React.JSX.Element {\n  const {children, padding = 4, paddingX, paddingY, gap = 3} = props\n  const {zIndex} = useLayer()\n\n  return (\n    <StyledLayer\n      forwardedAs=\"ul\"\n      data-ui=\"ToastProvider\"\n      padding={padding}\n      paddingX={paddingX}\n      paddingY={paddingY}\n      gap={gap}\n      columns={1}\n      style={{zIndex}}\n    >\n      {children}\n    </StyledLayer>\n  )\n}\n\nToastLayer.displayName = 'ToastLayer'\n\nconst StyledLayer = styled(Grid)`\n  box-sizing: border-box;\n  position: fixed;\n  right: 0;\n  bottom: 0;\n  list-style: none;\n  pointer-events: none;\n  max-width: 420px;\n  width: 100%;\n`\n","let toastId = 0\n\n/** @internal */\nexport function generateToastId(): string {\n  return String(toastId++)\n}\n","import {AnimatePresence} from 'framer-motion'\nimport {startTransition, useMemo, useState} from 'react'\n\nimport {useMounted} from '../../hooks/useMounted'\nimport {LayerProvider} from '../../utils'\nimport {Toast} from './toast'\nimport {ToastContext} from './toastContext'\nimport {ToastLayer, type ToastLayerProps} from './toastLayer'\nimport {generateToastId} from './toastState'\nimport {ToastContextValue, ToastParams} from './types'\n\ntype ToastState = {\n  dismiss: () => void\n  id: string\n  updatedAt: number\n  params: ToastParams\n}[]\n\n/**\n * @public\n */\nexport interface ToastProviderProps extends Omit<ToastLayerProps, 'children'> {\n  children?: React.ReactNode\n  zOffset?: number | number[]\n}\n\n/**\n * @public\n */\nexport function ToastProvider(props: ToastProviderProps): React.JSX.Element {\n  const {children, padding, paddingX, paddingY, gap, zOffset = 1} = props\n  const [state, setState] = useState<ToastState>([])\n  const mounted = useMounted()\n\n  const value: ToastContextValue = useMemo(() => {\n    const push = (params: ToastParams) => {\n      const id = params.id || generateToastId()\n      const duration = params.duration || 5000\n\n      startTransition(() => {\n        setState((prevState): ToastState => {\n          /**\n           * Backwards compatibility for `sanity` patterns workaround a lack of programatically dismissible toasts.\n           * It uses a super short duration that closes the toast immediately in previous versions of `@sanity/ui`.\n           * We interpret this as a request to dismiss the toast immediately, and remove it from the state right away.\n           * Even once we support programatic dismissal we'll need to keep this for backwards compatibility with v2 and v1.\n           */\n          if (duration === 0.01) {\n            return prevState.filter((toast) => toast.id !== id)\n          }\n\n          /**\n           * Creates a function to dismiss this specific toast.\n           * This function will be passed to the Toast component\n           * and called either on close button click or after duration.\n           */\n          const dismiss = () =>\n            startTransition(() =>\n              setState((currentState) => currentState.filter((toast) => toast.id !== id)),\n            )\n\n          /**\n           * Create updated state by:\n           * 1. Removing any existing toast with the same ID (prevents duplicates)\n           * 2. Adding the new toast with its dismiss handler\n           * 3. Updates the `updatedAt` timestamp, which resets progress bar count downs.\n           */\n          return [\n            ...prevState.filter((toast) => toast.id !== id),\n            {\n              dismiss,\n              id,\n              updatedAt: Date.now(),\n              params: {...params, duration},\n            },\n          ]\n        })\n      })\n\n      return id\n    }\n\n    return {version: 0.0, push}\n  }, [])\n\n  return (\n    <ToastContext.Provider value={value}>\n      {children}\n      {mounted && (\n        <LayerProvider zOffset={zOffset}>\n          <ToastLayer padding={padding} paddingX={paddingX} paddingY={paddingY} gap={gap}>\n            <AnimatePresence initial={false} mode=\"popLayout\">\n              {state.map(({dismiss, id, params, updatedAt}) => (\n                <Toast\n                  key={id}\n                  closable={params.closable}\n                  description={params.description}\n                  onClose={dismiss}\n                  status={params.status}\n                  title={params.title}\n                  duration={params.duration}\n                  updatedAt={updatedAt}\n                />\n              ))}\n            </AnimatePresence>\n          </ToastLayer>\n        </LayerProvider>\n      )}\n    </ToastContext.Provider>\n  )\n}\n\nToastProvider.displayName = 'ToastProvider'\n","import {useContext} from 'react'\n\nimport {isRecord} from '../../lib/isRecord'\nimport {ToastContext} from './toastContext'\nimport {ToastContextValue} from './types'\n\n/**\n * @public\n */\nexport function useToast(): ToastContextValue {\n  const value = useContext(ToastContext)\n\n  if (!value) {\n    throw new Error('useToast(): missing context value')\n  }\n\n  // NOTE: This check is for future-compatiblity\n  // - If the value is not an object, it’s not compatible with the current version\n  // - If the value is an object, but doesn’t have `version: 0.0`, it’s not compatible with the current version\n  if (!isRecord(value) || value.version !== 0.0) {\n    throw new Error('useToast(): the context value is not compatible')\n  }\n\n  return value\n}\n","import {TreeState} from './types'\n\nexport function _findPrevItemElement(\n  state: TreeState,\n  itemElements: HTMLElement[],\n  focusedElement: HTMLElement,\n): HTMLElement | null {\n  const idx = itemElements.indexOf(focusedElement)\n  const els = itemElements.slice(0, idx)\n  const len = els.length\n\n  for (let i = len - 1; i >= 0; i -= 1) {\n    const itemKey = els[i].getAttribute('data-tree-key')\n\n    if (!itemKey) {\n      continue\n    }\n\n    const segments = itemKey.split('/')\n\n    segments.pop()\n\n    const p: string[] = []\n\n    let expanded = true\n\n    for (let j = 0; j < segments.length; j += 1) {\n      p.push(segments[j])\n\n      const k = p.join('/')\n\n      if (!state[k]?.expanded) {\n        expanded = false\n        break\n      }\n    }\n\n    if (expanded) {\n      return els[i]\n    }\n  }\n\n  return null\n}\n\nexport function _findNextItemElement(\n  state: TreeState,\n  itemElements: HTMLElement[],\n  focusedElement: HTMLElement,\n): HTMLElement | null {\n  const idx = itemElements.indexOf(focusedElement)\n  const els = itemElements.slice(idx)\n  const len = itemElements.length\n\n  for (let i = 1; i < len; i += 1) {\n    if (!els[i]) {\n      continue\n    }\n\n    const itemKey = els[i].getAttribute('data-tree-key')\n\n    if (!itemKey) {\n      continue\n    }\n\n    const segments = itemKey.split('/')\n\n    segments.pop()\n\n    const p: string[] = []\n\n    let expanded = true\n\n    for (let j = 0; j < segments.length; j += 1) {\n      p.push(segments[j])\n\n      const k = p.join('/')\n\n      if (!state[k]?.expanded) {\n        expanded = false\n        break\n      }\n    }\n\n    if (expanded) {\n      return els[i]\n    }\n  }\n\n  return null\n}\n\nexport function _focusItemElement(el: HTMLElement): void {\n  if (el.getAttribute('role') === 'treeitem') {\n    el.focus()\n  }\n\n  if (el.getAttribute('role') === 'none') {\n    const firstChild = el.firstChild\n\n    if (firstChild && firstChild instanceof HTMLElement) {\n      firstChild.focus()\n    }\n  }\n}\n","import {createGlobalScopedContext} from '../../lib/createGlobalScopedContext'\nimport {TreeContextValue} from './types'\n\n/**\n * @internal\n */\nexport const TreeContext = createGlobalScopedContext<TreeContextValue | null>(\n  '@sanity/ui/context/tree',\n  null,\n)\n","import {\n  forwardRef,\n  memo,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\n\nimport {Stack} from '../../primitives'\nimport {_findNextItemElement, _findPrevItemElement, _focusItemElement} from './helpers'\nimport {TreeContext} from './treeContext'\nimport {TreeContextValue, TreeState} from './types'\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport interface TreeProps {\n  space?: number | number[]\n}\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport const Tree = memo(\n  forwardRef(function Tree(\n    props: TreeProps &\n      Omit<React.HTMLProps<HTMLDivElement>, 'align' | 'as' | 'height' | 'ref' | 'role' | 'wrap'>,\n    forwardedRef: React.ForwardedRef<HTMLDivElement>,\n  ): React.JSX.Element {\n    const {children, space = 1, onFocus, ...restProps} = props\n    const ref = useRef<HTMLDivElement | null>(null)\n    const [focusedElement, setFocusedElement] = useState<HTMLElement | null>(null)\n    const focusedElementRef = useRef(focusedElement)\n    const path: string[] = useMemo(() => [], [])\n    const [itemElements, setItemElements] = useState<HTMLElement[]>([])\n    const [state, setState] = useState<TreeState>({})\n    const stateRef = useRef(state)\n\n    useImperativeHandle<HTMLDivElement | null, HTMLDivElement | null>(\n      forwardedRef,\n      () => ref.current,\n    )\n\n    useEffect(() => {\n      focusedElementRef.current = focusedElement\n    }, [focusedElement])\n\n    useEffect(() => {\n      stateRef.current = state\n    }, [state])\n\n    const registerItem = useCallback(\n      (element: HTMLElement, path: string, expanded: boolean, selected: boolean) => {\n        setState((s) => ({...s, [path]: {element, expanded}}))\n\n        if (selected) {\n          setFocusedElement(element)\n        }\n\n        return () => {\n          setState((s) => {\n            const newState = {...s}\n\n            delete newState[path]\n\n            return newState\n          })\n        }\n      },\n      [],\n    )\n\n    const setExpanded = useCallback((path: string, expanded: boolean) => {\n      setState((s) => {\n        const itemState = s[path]\n\n        if (!itemState) return s\n\n        return {...s, [path]: {...itemState, expanded}}\n      })\n    }, [])\n\n    const contextValue: TreeContextValue = useMemo(\n      () => ({\n        version: 0.0,\n        focusedElement: focusedElement || itemElements[0] || null,\n        level: 0,\n        path,\n        registerItem,\n        setExpanded,\n        setFocusedElement,\n        space,\n        state,\n      }),\n      [focusedElement, itemElements, path, registerItem, setExpanded, space, state],\n    )\n\n    const handleKeyDown = useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (!focusedElementRef.current) return\n\n        if (event.key === 'ArrowDown') {\n          event.preventDefault()\n\n          const nextEl = _findNextItemElement(\n            stateRef.current,\n            itemElements,\n            focusedElementRef.current,\n          )\n\n          if (nextEl) {\n            _focusItemElement(nextEl)\n            setFocusedElement(nextEl)\n          }\n\n          return\n        }\n\n        if (event.key === 'ArrowUp') {\n          event.preventDefault()\n\n          const prevEl = _findPrevItemElement(\n            stateRef.current,\n            itemElements,\n            focusedElementRef.current,\n          )\n\n          if (prevEl) {\n            _focusItemElement(prevEl)\n            setFocusedElement(prevEl)\n          }\n\n          return\n        }\n\n        if (event.key === 'ArrowLeft') {\n          event.preventDefault()\n\n          const itemKey = focusedElementRef.current.getAttribute('data-tree-key')\n\n          if (!itemKey) return\n\n          const itemState = stateRef.current[itemKey]\n\n          if (!itemState) return\n\n          if (itemState.expanded) {\n            setState((s) => {\n              const itemState = s[itemKey]\n\n              if (!itemState) return s\n\n              return {...s, [itemKey]: {...itemState, expanded: false}}\n            })\n          } else {\n            const itemPath = itemKey.split('/')\n\n            itemPath.pop()\n\n            const parentKey = itemPath.join('/')\n            const parentState = parentKey && stateRef.current[parentKey]\n\n            if (parentState) {\n              parentState.element.focus()\n              setFocusedElement(parentState.element)\n            }\n          }\n\n          return\n        }\n\n        if (event.key === 'ArrowRight') {\n          event.preventDefault()\n\n          const focusedKey = focusedElementRef.current.getAttribute('data-tree-key')\n\n          if (!focusedKey) return\n\n          if (!stateRef.current[focusedKey]?.expanded) {\n            setState((s) => {\n              const itemState = s[focusedKey]\n\n              if (!itemState) return s\n\n              return {...s, [focusedKey]: {...itemState, expanded: true}}\n            })\n          }\n\n          return\n        }\n      },\n      [itemElements],\n    )\n\n    const handleFocus = useCallback(\n      (event: React.FocusEvent<HTMLDivElement>) => {\n        setFocusedElement(event.target)\n\n        // Call the element's `focus` handler\n        onFocus?.(event)\n      },\n      [onFocus],\n    )\n\n    useEffect(() => {\n      if (!ref.current) return\n      const _itemElements = Array.from(\n        ref.current.querySelectorAll('[data-ui=\"TreeItem\"]'),\n      ) as HTMLElement[]\n\n      setItemElements(_itemElements)\n    }, [children])\n\n    return (\n      <TreeContext.Provider value={contextValue}>\n        <Stack\n          as=\"ul\"\n          data-ui=\"Tree\"\n          {...restProps}\n          onFocus={handleFocus}\n          onKeyDown={handleKeyDown}\n          ref={ref}\n          role=\"tree\"\n          space={space}\n        >\n          {children}\n        </Stack>\n      </TreeContext.Provider>\n    )\n  }),\n)\nTree.displayName = 'Memo(ForwardRef(Tree))'\n","import {getTheme_v2} from '@sanity/ui/theme'\nimport {css} from 'styled-components'\n\nimport {rem, ThemeProps} from '../../styles'\nimport {_cardColorStyle} from '../../styles/card'\n\nexport function treeItemRootStyle(): ReturnType<typeof css> {\n  return css`\n    &[role='none'] > [role='treeitem'] {\n      outline: none;\n      cursor: default;\n      border-radius: 3px;\n\n      background-color: var(--card-bg-color);\n      color: var(--treeitem-fg-color);\n\n      &:focus {\n        position: relative;\n      }\n    }\n\n    &[role='treeitem'] {\n      outline: none;\n\n      & > div {\n        cursor: default;\n        border-radius: 3px;\n\n        background-color: var(--card-bg-color);\n        color: var(--treeitem-fg-color);\n      }\n\n      &:focus > div {\n        position: relative;\n      }\n    }\n  `\n}\n\nexport function treeItemRootColorStyle(props: ThemeProps): ReturnType<typeof css> {\n  const $tone = 'default'\n  const {color} = getTheme_v2(props.theme)\n  const tone = color.selectable[$tone]\n\n  return css`\n    &[role='none'] {\n      & > [role='treeitem'] {\n        ${_cardColorStyle(color, tone.enabled)}\n      }\n\n      &[data-selected] > [role='treeitem'] {\n        ${_cardColorStyle(color, tone.pressed)}\n      }\n\n      @media (hover: hover) {\n        &:not([data-selected]) > [role='treeitem']:not(:focus):hover {\n          ${_cardColorStyle(color, tone.hovered)}\n        }\n\n        & > [role='treeitem']:focus {\n          ${_cardColorStyle(color, tone.selected)}\n        }\n      }\n    }\n\n    &[role='treeitem'] {\n      & > [data-ui='TreeItem__box'] {\n        ${_cardColorStyle(color, tone.enabled)}\n      }\n\n      &[data-selected] > [data-ui='TreeItem__box'] {\n        ${_cardColorStyle(color, tone.pressed)}\n      }\n\n      @media (hover: hover) {\n        &:not([data-selected]):not(:focus) > [data-ui='TreeItem__box']:hover {\n          ${_cardColorStyle(color, tone.hovered)}\n        }\n\n        &:focus > [data-ui='TreeItem__box'] {\n          ${_cardColorStyle(color, tone.selected)}\n        }\n      }\n    }\n  `\n}\n\nexport interface TreeItemBoxStyleProps {\n  $level: number\n}\n\nexport function treeItemBoxStyle(\n  props: TreeItemBoxStyleProps & ThemeProps,\n): ReturnType<typeof css> {\n  const {$level} = props\n  const {space} = getTheme_v2(props.theme)\n\n  return css`\n    padding-left: ${rem(space[2] * $level)};\n\n    &[data-as='a'] {\n      text-decoration: none;\n    }\n  `\n}\n","import {useContext} from 'react'\n\nimport {TreeContext} from './treeContext'\nimport {TreeContextValue} from './types'\n\n/**\n * @beta\n */\nexport function useTree(): TreeContextValue {\n  const tree = useContext(TreeContext)\n\n  if (!tree) {\n    throw new Error('Tree: missing context value')\n  }\n\n  return tree\n}\n","import {memo} from 'react'\n\nimport {Stack} from '../../primitives'\nimport {useTree} from './useTree'\n\nexport interface TreeGroupProps {\n  expanded?: boolean\n}\n\nexport const TreeGroup = memo(function TreeGroup(\n  props: TreeGroupProps &\n    Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref' | 'role' | 'wrap'>,\n): React.JSX.Element {\n  const {children, expanded = false, ...restProps} = props\n  const tree = useTree()\n\n  return (\n    <Stack\n      as=\"ul\"\n      data-ui=\"TreeGroup\"\n      {...restProps}\n      hidden={!expanded}\n      marginTop={tree.space}\n      role=\"group\"\n      space={tree.space}\n    >\n      {children}\n    </Stack>\n  )\n})\n","import {ToggleArrowRightIcon} from '@sanity/icons'\nimport {ThemeFontWeightKey} from '@sanity/ui/theme'\nimport {memo, useCallback, useEffect, useId, useMemo, useRef} from 'react'\nimport {styled} from 'styled-components'\n\nimport {Box, BoxProps, Flex, Text} from '../../primitives'\nimport {\n  treeItemBoxStyle,\n  TreeItemBoxStyleProps,\n  treeItemRootColorStyle,\n  treeItemRootStyle,\n} from './style'\nimport {TreeContext} from './treeContext'\nimport {TreeGroup} from './treeGroup'\nimport {useTree} from './useTree'\n\n/**\n * @beta\n */\nexport interface TreeItemProps {\n  expanded?: boolean\n  fontSize?: number | number[]\n  icon?: React.ElementType\n  /**\n   * Allows passing a custom element type to the link component\n   */\n  linkAs?: BoxProps['as']\n  padding?: number | number[]\n  space?: number | number[]\n  text?: React.ReactNode\n  weight?: ThemeFontWeightKey\n}\n\nconst StyledTreeItem = memo(styled.li(treeItemRootStyle, treeItemRootColorStyle))\n\nconst TreeItemBox = styled(Box).attrs({forwardedAs: 'a'})<TreeItemBoxStyleProps>(treeItemBoxStyle)\n\nconst ToggleArrowText = styled(Text)`\n  & > svg {\n    transition: transform 100ms;\n  }\n`\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport const TreeItem = memo(function TreeItem(\n  props: TreeItemProps & Omit<React.HTMLProps<HTMLLIElement>, 'as' | 'ref' | 'role'>,\n): React.JSX.Element {\n  const {\n    children,\n    expanded: expandedProp = false,\n    fontSize = 1,\n    href,\n    icon: IconComponent,\n    id: idProp,\n    linkAs,\n    muted,\n    onClick,\n    padding = 2,\n    selected = false,\n    space = 2,\n    text,\n    weight,\n    ...restProps\n  } = props\n  const rootRef = useRef<HTMLLIElement | null>(null)\n  const treeitemRef = useRef<HTMLDivElement | null>(null)\n  const tree = useTree()\n  const {path, registerItem, setExpanded, setFocusedElement} = tree\n  const _id = useId()\n  const id = idProp || _id\n  const itemPath = useMemo(() => path.concat([id || '']), [id, path])\n  const itemKey = itemPath.join('/')\n  const itemState = tree.state[itemKey]\n  const focused = tree.focusedElement === rootRef.current\n  const expanded = itemState?.expanded === undefined ? expandedProp : itemState?.expanded || false\n  const tabIndex = tree.focusedElement && tree.focusedElement === rootRef.current ? 0 : -1\n  const contextValue = useMemo(\n    () => ({...tree, level: tree.level + 1, path: itemPath}),\n    [itemPath, tree],\n  )\n\n  const handleClick = useCallback(\n    (event: React.MouseEvent<HTMLLIElement>) => {\n      if (onClick) onClick(event)\n\n      const target = event.target\n\n      if (\n        target instanceof HTMLElement &&\n        (target.getAttribute('data-ui') === 'TreeItem' ||\n          target.closest('[data-ui=\"TreeItem__box\"]'))\n      ) {\n        event.stopPropagation()\n        setExpanded(itemKey, !expanded)\n        setFocusedElement(rootRef.current)\n      }\n    },\n    [expanded, itemKey, onClick, setExpanded, setFocusedElement],\n  )\n\n  const handleKeyDown = useCallback(\n    (event: React.KeyboardEvent<HTMLElement>) => {\n      if (focused && event.key === 'Enter') {\n        const el = treeitemRef.current || rootRef.current\n\n        el?.click()\n      }\n    },\n    [focused],\n  )\n\n  useEffect(() => {\n    if (!rootRef.current) return\n\n    return registerItem(rootRef.current, itemPath.join('/'), expanded, selected)\n  }, [expanded, itemPath, registerItem, selected])\n\n  const content = (\n    <Flex padding={padding}>\n      <Box\n        marginRight={space}\n        style={{\n          visibility: IconComponent || children ? 'visible' : 'hidden',\n          pointerEvents: 'none',\n        }}\n      >\n        {IconComponent && (\n          <Text muted={muted} size={fontSize} weight={weight}>\n            <IconComponent />\n          </Text>\n        )}\n        {!IconComponent && (\n          <ToggleArrowText muted={muted} size={fontSize} weight={weight}>\n            <ToggleArrowRightIcon style={{transform: expanded ? 'rotate(90deg)' : undefined}} />\n          </ToggleArrowText>\n        )}\n      </Box>\n      <Box flex={1}>\n        <Text muted={muted} size={fontSize} textOverflow=\"ellipsis\" weight={weight}>\n          {text}\n        </Text>\n      </Box>\n    </Flex>\n  )\n\n  if (href) {\n    return (\n      <StyledTreeItem\n        data-selected={selected ? '' : undefined}\n        data-tree-id={id}\n        data-tree-key={itemKey}\n        data-ui=\"TreeItem\"\n        {...restProps}\n        onClick={handleClick}\n        ref={rootRef}\n        role=\"none\"\n      >\n        <TreeItemBox\n          $level={tree.level}\n          aria-expanded={expanded}\n          as={linkAs}\n          data-ui=\"TreeItem__box\"\n          href={href}\n          ref={treeitemRef}\n          role=\"treeitem\"\n          tabIndex={tabIndex}\n        >\n          {content}\n        </TreeItemBox>\n\n        <TreeContext.Provider value={contextValue}>\n          {children && <TreeGroup hidden={!expanded}>{children}</TreeGroup>}\n        </TreeContext.Provider>\n      </StyledTreeItem>\n    )\n  }\n\n  return (\n    <StyledTreeItem\n      data-selected={selected ? '' : undefined}\n      data-ui=\"TreeItem\"\n      data-tree-id={id}\n      data-tree-key={itemKey}\n      {...restProps}\n      aria-expanded={expanded}\n      onClick={handleClick}\n      onKeyDown={handleKeyDown}\n      ref={rootRef}\n      role=\"treeitem\"\n      tabIndex={tabIndex}\n    >\n      <TreeItemBox $level={tree.level} as=\"div\" data-ui=\"TreeItem__box\">\n        {content}\n      </TreeItemBox>\n\n      <TreeContext.Provider value={contextValue}>\n        {children && <TreeGroup expanded={expanded}>{children}</TreeGroup>}\n      </TreeContext.Provider>\n    </StyledTreeItem>\n  )\n})\nTreeItem.displayName = 'Memo(TreeItem)'\n"],"names":["_raf","fn","frameId","requestAnimationFrame","cancelAnimationFrame","_raf2","innerDispose","outerDispose","_hasFocus","element","Boolean","document","activeElement","contains","isFocusable","tabIndex","getAttribute","isHTMLAnchorElement","href","rel","isHTMLInputElement","type","disabled","isHTMLButtonElement","isHTMLSelectElement","isHTMLTextAreaElement","attemptFocus","focus","focusFirstDescendant","i","childNodes","length","child","isHTMLElement","focusLastDescendant","_getElements","elementsArg","ret","el","Array","isArray","push","filter","useClickOutside","listener","t0","boundaryElement","$","_c","undefined","EMPTY_ARRAY","setElement","useState","t1","elements","setElements","elementsRef","useRef","t2","t3","prevElements","current","nextElements","includes","el_0","useEffect","t4","t5","handleWindowMouseDown","evt","target","Node","el_1","window","addEventListener","removeEventListener","useElementRect","useElementSize","_contentRect","useForwardedRef","ref","innerRef","Symbol","for","useImperativeHandle","ErrorBoundary","Component","state","error","getDerivedStateFromError","componentDidCatch","info","props","onCatch","render","message","jsx","Code","children","StyledAutocomplete","styled","div","withConfig","displayName","componentId","ListBox","Box","rotate","keyframes","AnimatedSpinnerIcon","SpinnerIcon","AutocompleteOption","id","onSelect","selected","value","setTimeout","handleClick","event","key","_isEnterToClickElement","currentTarget","handleKeyDown","autocompleteReducer","msg","activeValue","focused","query","listFocused","AUTOCOMPLETE_LISTBOX_IGNORE_KEYS","AUTOCOMPLETE_POPOVER_PLACEMENT","AUTOCOMPLETE_POPOVER_FALLBACK_PLACEMENTS","DEFAULT_RENDER_VALUE","option","DEFAULT_FILTER_OPTION","toLowerCase","indexOf","InnerAutocomplete","forwardRef","forwardedRef","border","customValidity","filterOption","filterOptionProp","fontSize","icon","listBox","EMPTY_RECORD","loading","onBlur","onChange","onFocus","onQueryChange","openButton","openOnFocus","options","optionsProp","padding","paddingProp","popover","prefix","radius","readOnly","relatedElements","renderOption","renderOptionProp","renderPopover","renderValue","suffix","valueProp","restProps","dispatch","useReducer","defaultRenderOption","useCallback","Card","Text","rootElementRef","resultsPopoverElementRef","inputElementRef","listBoxElementRef","listFocusedRef","valueRef","valuePropRef","popoverMouseWithinRef","listBoxId","useArrayProp","currentOption","useMemo","find","o","filteredOptions","filteredOptionsLen","activeItemId","expanded","handleRootBlur","concat","focusInside","e","handleRootFocus","listBoxElement","focusedElement","HTMLElement","handleOptionSelect","v","handleRootKeyDown","preventDefault","activeOption","activeIndex","nextActiveOption","listEl","handleInputChange","nextQuery","dispatchOpen","handleInputFocus","handlePopoverMouseEnter","handlePopoverMouseLeave","handleClearButtonClick","handleClearButtonFocus","listElement","activeItemElement","clearButton","openButtonBoxPadding","map","openButtonPadding","Math","max","openButtonProps","handleOpenClick","onClick","openButtonNode","Button","ChevronDownIcon","inputValue","input","TextInput","handleListBoxKeyDown","content","Stack","active","cloneElement","results","hidden","inputElement","onMouseEnter","onMouseLeave","Popover","jsxs","Autocomplete","StyledBreadcrumbs","ol","ExpandButton","Breadcrumbs","maxLength","separator","space","spaceRaw","open","setOpen","expandElementRef","popoverElementRef","collapse","expand","useClickOutsideEvent","rawItems","Children","toArray","isValidElement","items","len","beforeLength","ceil","afterLength","floor","slice","item","itemIndex","Fragment","dialogStyle","theme","color","getTheme_v2","display","backdrop","responsiveDialogPositionStyle","media","_responsive","$position","position","animationDialogStyle","$animate","css","DialogContext","createGlobalScopedContext","version","useDialog","useContext","isTargetWithinScope","portalElement","containsOrEqualsElement","StyledDialog","Layer","responsivePaddingStyle","DialogContainer","Container","DialogCardRoot","DialogLayout","Flex","DialogHeader","DialogContent","DialogFooter","DialogCard","__unstable_autoFocus","autoFocus","__unstable_hideCloseButton","hideCloseButton","contentRef","forwardedContentRef","footer","header","onClickOutside","onClose","portal","portalProp","radiusProp","scheme","shadow","shadowProp","width","widthProp","usePortal","useBoundaryElement","layer","useLayer","isTopLayer","labelId","showCloseButton","showHeader","stopPropagation","useGlobalKeyDown","event_0","target_0","t6","t7","CloseIcon","t8","t9","t10","t11","t12","Dialog","dialog","useTheme_v2","_positionProp","_zOffsetProp","onActivate","cardRadius","cardShadow","zOffset","animate","cardRadiusProp","_animate","positionProp","zOffsetProp","usePrefersReducedMotion","preDivRef","postDivRef","cardRef","focusedElementRef","cardElement","handleFocus","rootClickTimeoutRef","clearTimeout","body","cardElement_0","handleRootClick","t13","Portal","DialogProvider","contextValue","MenuButton","__unstable_disableRestoreFocusOnClose","deprecated_boundaryElement","button","buttonProp","menu","menuProp","onOpen","placement","deprecated_placement","popoverScheme","deprecated_popoverScheme","popoverRadius","deprecated_popoverRadius","preventOverflow","deprecated_preventOverflow","disableRestoreFocusOnClose","deprecated_portal","shouldFocus","setShouldFocus","buttonElement","setButtonElement","menuElements","setChildMenuElements","openRef","_temp","handleButtonClick","handleMouseDown","handleButtonKeyDown","event_1","handleMenuClickOutside","handleMenuEscape","t14","event_2","relatedTarget","handleBlur","t15","handleItemClick","t16","els","els_0","_el","registerElement","t17","t18","t19","t20","t21","t22","t23","t24","overflow","popoverProps","t25","t26","keyframe","animation","skeletonStyle","$visible","$animated","StyledSkeleton","responsiveRadiusStyle","Skeleton","delay","animated","visible","setVisible","timeout","$size","$style","font","fontStyle","sizeIndex","sizes","height","lineHeight","ascenderHeight","descenderHeight","TextSkeleton","size","LabelSkeleton","HeadingSkeleton","CodeSkeleton","TabPanel","flex","LOADING_BAR_HEIGHT","STATUS_CARD_TONE","warning","success","BUTTON_TONE","TextBox","StyledToast","LoadingBar","LoadingBarMask","LoadingBarProgress","default","tone","enabled","bg","ROLES","LONG_ENOUGH_BUT_NOT_TOO_LONG","Toast","closable","description","duration","status","title","updatedAt","cardTone","buttonTone","role","visualDuration","bounce","transition","hasDuration","isFinite","initial","exit","verticalAlign","scaleX","ease","container","y","scale","zIndex","opacity","when","staggerChildren","slideIn","slideOut","willChange","MotionToast","motion","create","MotionFlex","MotionText","MotionLoadingBar","MotionLoadingBarProgress","useMounted","useSyncExternalStore","subscribe","_temp2","ToastContext","ToastLayer","paddingX","paddingY","gap","StyledLayer","Grid","toastId","generateToastId","String","ToastProvider","setState","mounted","params","startTransition","prevState","toast","dismiss","currentState","toast_0","toast_1","Date","now","LayerProvider","AnimatePresence","dismiss_0","id_0","params_0","useToast","Error","isRecord","_findPrevItemElement","itemElements","idx","itemKey","segments","split","pop","p","j","k","join","_findNextItemElement","_focusItemElement","firstChild","TreeContext","Tree","memo","setFocusedElement","path","setItemElements","stateRef","path_0","s","s_0","newState","registerItem","path_1","expanded_0","s_1","itemState","setExpanded","level","nextEl","prevEl","itemState_0","s_2","itemState_1","itemPath","parentKey","parentState","focusedKey","s_3","itemState_2","_itemElements","from","querySelectorAll","treeItemRootStyle","treeItemRootColorStyle","$tone","selectable","_cardColorStyle","pressed","hovered","treeItemBoxStyle","$level","rem","useTree","tree","TreeGroup","StyledTreeItem","li","TreeItemBox","attrs","forwardedAs","ToggleArrowText","TreeItem","expandedProp","IconComponent","idProp","linkAs","muted","text","weight","rootRef","treeitemRef","_id","useId","closest","click","visibility","pointerEvents","ToggleArrowRightIcon","transform"],"mappings":"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"}