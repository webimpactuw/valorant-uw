/* eslint-disable unicorn/prefer-dom-node-text-content */
/* globals customElements document */
import {
  EditorState,
  EditorView,
  basicSetup,
  json,
  prettyBytes,
  prettyMilliseconds,
} from '../vendor/vendor.bundle.js'
import {ApiBaseElement} from './api-base.js'

const template = `<m-box>
    <m-tabs role="tablist">
        <button id="a" role="tab" aria-selected="true">Response</button>
        <button id="b" role="tab">Console</button>
    </m-tabs>
    <div role="tabpanel" data-tab-id="a" class="pad-t-sm">
        <div class="mar-b-sm">
            <span id="time"></span> <span id="size"></span>
        </div>
        <div id="response" name="response"></div>
    </div>
    <div role="tabpanel" data-tab-id="b" class="pad-t-sm" hidden><pre></pre></div>
</m-box>
`
class ResponsePanel extends ApiBaseElement {
  switchTab = (e) => {
    const selectedTabId = e.target.closest('[role=tab]').id

    // Select the tab and its panel
    for (const tab of e.currentTarget.querySelectorAll('[role=tab]')) {
      tab.ariaSelected = tab.id === selectedTabId
    }

    for (const panel of document.querySelectorAll('[role=tabpanel')) {
      panel.hidden = panel.dataset.tabId !== selectedTabId
    }
  }
  updateResponse = ({result}) => {
    const {error, json, logs, time} = result
    if (!error) {
      const transaction = this.api.store.response.state.update({
        changes: {
          from: 0,
          insert: JSON.stringify(json, null, 2),
          to: this.api.store.response.state.doc.length,
        },
      })
      this.api.store.response.dispatch(transaction)

      this.size.innerText = json ? prettyBytes(JSON.stringify(json).length) : ''
      this.time.innerText = prettyMilliseconds(time)
      this.consoleTab.innerText = logs
    } else {
      this.consoleTab.innerText = error?.details?.error
    }
  }

  connectedCallback() {
    this.innerHTML = template
    this.response = this.querySelector('#response')
    this.size = this.querySelector('#size')
    this.time = this.querySelector('#time')
    this.consoleTab = this.querySelector('pre')
    this.tabs = this.querySelector('m-tabs')
    this.tabs.addEventListener('click', this.switchTab)
    this.api.subscribe(this.updateResponse, ['result'])

    this.api.store.response = new EditorView({
      doc: '\n\n\n\n',
      extensions: [basicSetup, json(), EditorState.readOnly.of(true)],
      parent: this.response,
    })
  }

  disconnectedCallback() {
    this.tabs.removeEventListener('click', this.switchTab)
    this.api.unsubscribe(this.updateResponse)
  }
}

customElements.define('response-panel', ResponsePanel)
