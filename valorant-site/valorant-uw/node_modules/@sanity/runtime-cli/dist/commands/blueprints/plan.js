import { Command } from '@oclif/core';
import { readBlueprintOnDisk } from '../../actions/blueprints/blueprint.js';
import config from '../../config.js';
import { formatResourceTree, formatTitle } from '../../utils/display/blueprints-formatting.js';
const { token } = config;
export default class Plan extends Command {
    static description = 'Enumerate resources to be deployed - will not modify any resources';
    static examples = ['<%= config.bin %> <%= command.id %>'];
    async run() {
        const { errors, projectId, stackId, parsedBlueprint: { resources }, fileInfo, } = await readBlueprintOnDisk({ token });
        if (errors.length > 0) {
            // printErrors(errors)
            this.log('Blueprint parse errors:');
            console.dir(errors, { depth: null });
        }
        if (!projectId)
            this.log('Blueprint must contain a project resource');
        const name = stackId || 'Unknown'; // TODO: what is a name, really?
        this.log(`${formatTitle('Blueprint', name)} Plan\n`);
        this.log(`Blueprint document: (${fileInfo.fileName})`);
        this.log('');
        this.log(formatResourceTree(resources));
        this.log('\nRun `sanity blueprints deploy` to deploy these changes');
    }
}
