import { Command } from '@oclif/core';
import { readBlueprintOnDisk } from '../../actions/blueprints/blueprint.js';
import { listStacks } from '../../actions/blueprints/stacks.js';
import config from '../../config.js';
import { formatStacksListing } from '../../utils/display/blueprints-formatting.js';
import { bold, yellow } from '../../utils/display/colors.js';
const { token } = config;
export default class Stacks extends Command {
    static description = 'List all Blueprint stacks';
    static examples = ['<%= config.bin %> <%= command.id %>'];
    async run() {
        const { errors, projectId, stackId } = await readBlueprintOnDisk();
        if (errors.length > 0) {
            this.log('Blueprint parse errors:');
            console.dir(errors, { depth: null });
            return;
        }
        if (!projectId)
            this.error('Project resource not found in blueprint');
        const auth = { token, projectId };
        const { ok, stacks, error } = await listStacks(auth);
        if (!ok)
            this.error(error || 'Failed to list stacks');
        if (!stacks || stacks.length === 0) {
            this.warn('No stacks found');
            return;
        }
        this.log(`${bold('Project')} <${yellow(projectId)}> ${bold('Stacks')}:\n`);
        this.log(formatStacksListing(stacks, stackId));
    }
}
