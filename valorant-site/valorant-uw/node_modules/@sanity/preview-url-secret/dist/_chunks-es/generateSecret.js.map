{"version":3,"file":"generateSecret.js","sources":["../../src/generateSecret.ts"],"sourcesContent":["/** @internal */\nexport function generateUrlSecret(): string {\n  // Try using WebCrypto if available\n  if (typeof crypto !== 'undefined') {\n    // Generate a random array of 16 bytes\n    const array = new Uint8Array(16)\n    crypto.getRandomValues(array)\n\n    // Convert the array to a URL-safe string\n    let key = ''\n    for (let i = 0; i < array.length; i++) {\n      // Convert each byte to a 2-digit hexadecimal number\n      key += array[i].toString(16).padStart(2, '0')\n    }\n\n    // Replace '+' and '/' from base64url to '-' and '_'\n    key = btoa(key).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/[=]+$/, '')\n\n    return key\n  }\n  // If not fallback to Math.random\n  return Math.random().toString(36).slice(2)\n}\n"],"names":[],"mappings":"AACO,SAAS,oBAA4B;AAEtC,MAAA,OAAO,SAAW,KAAa;AAE3B,UAAA,QAAQ,IAAI,WAAW,EAAE;AAC/B,WAAO,gBAAgB,KAAK;AAG5B,QAAI,MAAM;AACV,aAAS,IAAI,GAAG,IAAI,MAAM,QAAQ;AAEzB,aAAA,MAAM,CAAC,EAAE,SAAS,EAAE,EAAE,SAAS,GAAG,GAAG;AAI9C,WAAA,MAAM,KAAK,GAAG,EAAE,QAAQ,OAAO,GAAG,EAAE,QAAQ,OAAO,GAAG,EAAE,QAAQ,SAAS,EAAE,GAEpE;AAAA,EAAA;AAGT,SAAO,KAAK,SAAS,SAAS,EAAE,EAAE,MAAM,CAAC;AAC3C;"}