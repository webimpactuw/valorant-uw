{"version":3,"file":"presentation.mjs","sources":["../../src/presentation/overlays/useSharedState.ts","../../src/presentation/constants.ts","../../src/presentation/util/props.ts","../../src/presentation/useDocumentLocations.ts","../../src/presentation/i18n/index.ts","../../src/presentation/usePresentationTool.ts","../../src/presentation/document/useCurrentPresentationToolName.ts","../../src/presentation/document/LocationsBanner.tsx","../../src/presentation/document/PresentationDocumentHeader.tsx","../../src/presentation/document/PresentationDocumentProvider.tsx","../../src/presentation/fieldActions/openInStructure.ts","../../src/presentation/getIntentState.ts","../../src/presentation/PresentationSpinner.tsx","../../src/presentation/router.ts","../../src/presentation/plugin.tsx","../../src/presentation/usePresentationNavigate.ts","../../src/presentation/usePresentationParams.ts"],"sourcesContent":["import {type Serializable} from '@sanity/presentation-comlink'\nimport {useContext, useEffect} from 'react'\nimport {PresentationSharedStateContext} from 'sanity/_singletons'\n\n/** @public */\nexport const useSharedState = (key: string, value: Serializable): undefined => {\n  const context = useContext(PresentationSharedStateContext)\n\n  if (!context) {\n    throw new Error('Preview Snapshots context is missing')\n  }\n\n  const {setValue} = context\n\n  useEffect(() => {\n    setValue(key, value)\n  }, [key, value, setValue])\n\n  return undefined\n}\n","import {ComposeIcon} from '@sanity/icons'\nimport {apiVersion} from '@sanity/preview-url-secret/constants'\n\nexport const DEFAULT_TOOL_ICON = ComposeIcon\nexport const DEFAULT_TOOL_NAME = 'presentation'\nexport const DEFAULT_TOOL_TITLE = 'Presentation'\n\nexport const EDIT_INTENT_MODE = 'presentation'\n\n// How long we wait until an iframe is loaded until we consider it to be slow and possibly failed\nexport const MAX_TIME_TO_OVERLAYS_CONNECTION = 3_000 // ms\n\n// The API version to use when using `@sanity/client`\nexport const API_VERSION = apiVersion\n\n// Heartbeats shouldn't fire on intervals that are so short it causes performance issues\nexport const MIN_LOADER_QUERY_LISTEN_HEARTBEAT_INTERVAL = 1000 // ms\n\n// How often the list over loader queries should be garbage collected\nexport const LOADER_QUERY_GC_INTERVAL = 30_000 // ms\n\n// The interval at which we check if existing popups have been closed\nexport const POPUP_CHECK_INTERVAL = 1000 // ms\n","import {\n  combineLatest,\n  from,\n  isObservable,\n  map,\n  mergeAll,\n  Observable,\n  of,\n  scan,\n  switchMap,\n} from 'rxjs'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype Props<K extends keyof any, T> = {\n  [P in K]: T | Observable<T>\n}\n\nfunction keysOf<T extends object>(value: T) {\n  return Object.keys(value) as (keyof T)[]\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction setKey(source: Record<string, unknown>, key: any, value: unknown) {\n  return {\n    ...source,\n    [key]: value,\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function props<K extends keyof any, T>(options: {wait?: boolean} = {}) {\n  return (source: Observable<Props<K, T>>): Observable<Record<string, unknown>> => {\n    return new Observable<Props<K, T>>((observer) => source.subscribe(observer)).pipe(\n      switchMap((object) => {\n        const keyObservables = keysOf(object).map((key) => {\n          const value = object[key]\n          return isObservable(value) ? from(value).pipe(map((val) => [key, val])) : of([key, value])\n        })\n\n        return options.wait\n          ? combineLatest(keyObservables).pipe(\n              map((pairs) => pairs.reduce((acc, [key, value]) => setKey(acc, key, value), {})),\n            )\n          : from(keyObservables).pipe(\n              mergeAll(),\n              scan((acc, [key, value]) => setKey(acc, key, value), {}),\n            )\n      }),\n    )\n  }\n}\n","/* eslint-disable @typescript-eslint/no-shadow */\nimport {type StackablePerspective} from '@sanity/client'\nimport {get} from 'lodash'\nimport {useEffect, useMemo, useState} from 'react'\nimport {isObservable, map, type Observable, of, switchMap} from 'rxjs'\nimport {\n  type DocumentStore,\n  getDraftId,\n  getPublishedId,\n  getVersionId,\n  isRecord,\n  isReference,\n  type Previewable,\n  type SanityDocument,\n  useDocumentStore,\n  usePerspective,\n} from 'sanity'\n\nimport {\n  type DocumentLocationResolver,\n  type DocumentLocationResolverObject,\n  type DocumentLocationResolvers,\n  type DocumentLocationsState,\n  type DocumentLocationsStatus,\n} from './types'\nimport {props} from './util/props'\n\nconst INITIAL_STATE: DocumentLocationsState = {locations: []}\n\nfunction getDocumentId(value: Previewable) {\n  if (isReference(value)) {\n    return value._ref\n  }\n  return '_id' in value ? value._id : undefined\n}\n\nfunction cleanPreviewable(id: string | undefined, previewable: Previewable) {\n  const clean: Record<string, unknown> = id ? {...previewable, _id: id} : {...previewable}\n\n  if (clean._type === 'reference') {\n    delete clean._type\n    delete clean._ref\n    delete clean._weak\n    delete clean._dataset\n    delete clean._projectId\n    delete clean._strengthenOnPublish\n  }\n\n  return clean\n}\n\nfunction listen(\n  id: string,\n  fields: string[],\n  store: DocumentStore,\n  perspectiveStack: StackablePerspective[],\n) {\n  const projection = fields.join(', ')\n  const query = {\n    fetch: `*[_id==$id][0]{${projection}}`,\n    // TODO: is it more performant to use `||` instead of `in`?\n    listen: `*[_id in $versions]`,\n  }\n  const params = {\n    id,\n    versions: perspectiveStack\n      .map((p) => {\n        if (p === 'published') return getPublishedId(id)\n        if (p === 'drafts') return getDraftId(id)\n        return getVersionId(getPublishedId(id), p)\n      })\n      .concat(getPublishedId(id)),\n  }\n  return store.listenQuery(query, params, {\n    perspective: perspectiveStack,\n    tag: 'use-document-locations',\n  }) as Observable<SanityDocument | null>\n}\nfunction observeDocument(\n  value: Previewable | null,\n  paths: string[][],\n  store: DocumentStore,\n  perspectiveStack: StackablePerspective[],\n): Observable<Record<string, unknown> | null> {\n  if (!value || typeof value !== 'object') {\n    return of(value)\n  }\n\n  const id = getDocumentId(value)\n  const currentValue = cleanPreviewable(id, value)\n\n  const headlessPaths = paths.filter((path) => !(path[0] in currentValue))\n\n  if (id && headlessPaths.length) {\n    const fields = [...new Set(headlessPaths.map((path: string[]) => path[0]))]\n    return listen(id, fields, store, perspectiveStack).pipe(\n      switchMap((snapshot) => {\n        if (snapshot) {\n          return observeDocument(snapshot, paths, store, perspectiveStack)\n        }\n        return of(null)\n      }),\n    )\n  }\n\n  const leads: Record<string, string[][]> = {}\n  paths.forEach((path) => {\n    const [head, ...tail] = path\n    if (!leads[head]) {\n      leads[head] = []\n    }\n    leads[head].push(tail)\n  })\n  const next = Object.keys(leads).reduce((res: Record<string, unknown>, head) => {\n    const tails = leads[head].filter((tail) => tail.length > 0)\n    if (tails.length === 0) {\n      res[head] = isRecord(value) ? (value as Record<string, unknown>)[head] : undefined\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      res[head] = observeDocument((value as any)[head], tails, store, perspectiveStack)\n    }\n    return res\n  }, currentValue)\n\n  return of(next).pipe(props({wait: true}))\n}\n\nfunction observeForLocations(\n  documentId: string,\n  resolver: DocumentLocationResolverObject<string>,\n  documentStore: DocumentStore,\n  perspectiveStack: StackablePerspective[],\n) {\n  const {select} = resolver\n  const paths = Object.values(select).map((value) => String(value).split('.')) || []\n  const doc = {_type: 'reference', _ref: documentId}\n  return observeDocument(doc, paths, documentStore, perspectiveStack).pipe(\n    map((doc) => {\n      return Object.keys(select).reduce<Record<string, unknown>>((acc, key) => {\n        acc[key] = get(doc, select[key])\n        return acc\n      }, {})\n    }),\n    map(resolver.resolve),\n  )\n}\n\nexport function useDocumentLocations(props: {\n  id: string\n  version: string | undefined\n  resolvers?: DocumentLocationResolver | DocumentLocationResolvers\n  type: string\n}): {\n  state: DocumentLocationsState\n  status: DocumentLocationsStatus\n} {\n  const {id, resolvers, type, version} = props\n  const documentStore = useDocumentStore()\n  const {perspectiveStack} = usePerspective()\n  const [locationsState, setLocationsState] = useState<DocumentLocationsState>(INITIAL_STATE)\n\n  const resolver = resolvers && (typeof resolvers === 'function' ? resolvers : resolvers[type])\n\n  const [locationsStatus, setLocationsStatus] = useState<DocumentLocationsStatus>(\n    resolver ? 'resolving' : 'empty',\n  )\n\n  const result = useMemo(() => {\n    if (!resolver) return undefined\n\n    // Original/advanced resolver which requires explicit use of Observables\n    if (typeof resolver === 'function') {\n      const params = {id, type, version, perspectiveStack}\n      const context = {documentStore}\n      const _result = resolver(params, context)\n      return isObservable(_result) ? _result : of(_result)\n    }\n\n    // Simplified resolver pattern which abstracts away Observable logic\n    if ('select' in resolver && 'resolve' in resolver) {\n      return observeForLocations(id, resolver, documentStore, perspectiveStack)\n    }\n\n    // Resolver is explicitly provided state\n    return of(resolver)\n  }, [documentStore, id, resolver, type, version, perspectiveStack])\n\n  useEffect(() => {\n    const sub = result?.subscribe((state) => {\n      setLocationsState(state || INITIAL_STATE)\n      setLocationsStatus(state ? 'resolved' : 'empty')\n    })\n\n    return () => sub?.unsubscribe()\n  }, [result])\n\n  return {\n    state: locationsState,\n    status: locationsStatus,\n  }\n}\n","import {defineLocaleResourceBundle} from 'sanity'\n\n/**\n * The locale namespace for the presentation tool\n *\n * @public\n */\nexport const presentationLocaleNamespace = 'presentation' as const\n\n/**\n * The default locale bundle for the presentation tool, which is US English.\n *\n * @internal\n */\nexport const presentationUsEnglishLocaleBundle = defineLocaleResourceBundle({\n  locale: 'en-US',\n  namespace: presentationLocaleNamespace,\n  resources: () => import('./resources'),\n})\n","import {useContext} from 'react'\nimport {PresentationContext} from 'sanity/_singletons'\n\nimport {type PresentationContextValue} from './types'\n\nexport function usePresentationTool(throwOnMissingContext?: true): PresentationContextValue\nexport function usePresentationTool(throwOnMissingContext: false): PresentationContextValue | null\nexport function usePresentationTool(throwOnMissingContext = true): PresentationContextValue | null {\n  const presentation = useContext(PresentationContext)\n\n  if (throwOnMissingContext && !presentation) {\n    throw new Error('Presentation context is missing')\n  }\n\n  return presentation\n}\n","import {usePresentationTool} from '../usePresentationTool'\n\nexport function useCurrentPresentationToolName(): string | undefined {\n  return usePresentationTool(false)?.name ?? undefined\n}\n","import {\n  ChevronRightIcon,\n  DesktopIcon,\n  ErrorOutlineIcon,\n  InfoOutlineIcon,\n  WarningOutlineIcon,\n} from '@sanity/icons'\nimport {Box, Card, Flex, Spinner, Stack, Text} from '@sanity/ui'\nimport {type ComponentType, type ReactNode, useCallback, useContext, useState} from 'react'\nimport {type ObjectSchemaType, useTranslation} from 'sanity'\nimport {PresentationContext} from 'sanity/_singletons'\nimport {useIntentLink} from 'sanity/router'\n\nimport {DEFAULT_TOOL_NAME, DEFAULT_TOOL_TITLE} from '../constants'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {\n  type DocumentLocation,\n  type DocumentLocationsState,\n  type PresentationPluginOptions,\n} from '../types'\nimport {useCurrentPresentationToolName} from './useCurrentPresentationToolName'\n\nconst TONE_ICONS: Record<'positive' | 'caution' | 'critical', ComponentType> = {\n  positive: InfoOutlineIcon,\n  caution: WarningOutlineIcon,\n  critical: ErrorOutlineIcon,\n}\n\nexport function LocationsBanner(props: {\n  documentId: string\n  isResolving: boolean\n  options: PresentationPluginOptions\n  schemaType: ObjectSchemaType\n  showPresentationTitle: boolean\n  state: DocumentLocationsState\n}): ReactNode {\n  const {documentId, isResolving, options, schemaType, showPresentationTitle} = props\n  const {locations, message, tone} = props.state\n  const len = locations?.length || 0\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const presentation = useContext(PresentationContext)\n  const presentationName = presentation?.name\n  const [expanded, setExpanded] = useState(false)\n  const toggle = useCallback(() => {\n    if (!len) return\n    setExpanded((v) => !v)\n  }, [len])\n\n  const title = isResolving\n    ? t('locations-banner.resolving.text')\n    : message || t('locations-banner.locations-count', {count: len})\n\n  const ToneIcon = tone ? TONE_ICONS[tone] : undefined\n\n  return (\n    <Card padding={1} radius={2} border tone={tone}>\n      <div style={{margin: -1}}>\n        {!locations && (\n          <Flex align=\"flex-start\" gap={3} padding={3}>\n            {tone && ToneIcon && (\n              <Box flex=\"none\">\n                <Text size={1}>\n                  <ToneIcon />\n                </Text>\n              </Box>\n            )}\n            <Box flex={1}>\n              <Text size={1} weight=\"medium\">\n                {showPresentationTitle && <>{options.title || DEFAULT_TOOL_TITLE} &middot; </>}\n                {title}\n              </Text>\n            </Box>\n          </Flex>\n        )}\n        {locations && (\n          <>\n            <Card\n              as={len ? 'button' : undefined}\n              onClick={toggle}\n              padding={3}\n              radius={1}\n              tone=\"inherit\"\n            >\n              <Flex gap={3}>\n                <Box flex=\"none\">\n                  {isResolving ? (\n                    <Spinner size={1} />\n                  ) : (\n                    <Text size={1}>\n                      {len === 0 ? (\n                        <InfoOutlineIcon />\n                      ) : (\n                        <ChevronRightIcon\n                          style={{\n                            transform: `rotate(${expanded ? '90deg' : 0})`,\n                            transition: 'transform 100ms ease-in-out',\n                          }}\n                        />\n                      )}\n                    </Text>\n                  )}\n                </Box>\n                <Box flex={1}>\n                  <Text size={1} weight=\"medium\">\n                    {showPresentationTitle && <>{options.title || DEFAULT_TOOL_TITLE} &middot; </>}\n                    {title}\n                  </Text>\n                </Box>\n              </Flex>\n            </Card>\n            <Stack hidden={!expanded} marginTop={1} space={1}>\n              {locations.map((l) => {\n                let active = false\n                if (\n                  (options.name || DEFAULT_TOOL_NAME) === presentationName &&\n                  presentation?.params.preview\n                ) {\n                  active = areUrlsMatching(presentation.params.preview, l.href)\n                }\n\n                return (\n                  <LocationItem\n                    active={active}\n                    documentId={documentId}\n                    documentType={schemaType.name}\n                    key={l.href}\n                    node={l}\n                    toolName={options.name || DEFAULT_TOOL_NAME}\n                  />\n                )\n              })}\n            </Stack>\n          </>\n        )}\n      </div>\n    </Card>\n  )\n}\n\nfunction LocationItem(props: {\n  active: boolean\n  documentId: string\n  documentType: string\n  node: DocumentLocation\n  toolName: string\n}) {\n  const {documentId, documentType, node, active, toolName} = props\n  const presentation = useContext(PresentationContext)\n  const currentPresentationToolName = useCurrentPresentationToolName()\n  const isCurrentTool = toolName === currentPresentationToolName\n  const navigate = presentation?.navigate\n\n  const presentationLinkProps = useIntentLink({\n    intent: 'edit',\n    params: {\n      id: documentId,\n      type: documentType,\n      mode: 'presentation',\n      presentation: toolName,\n      ...presentation?.structureParams,\n      preview: node.href,\n    },\n  })\n\n  const handleCurrentToolClick = useCallback(() => {\n    navigate?.({}, {preview: node.href})\n  }, [node.href, navigate])\n\n  return (\n    <Card\n      {...(isCurrentTool ? {} : presentationLinkProps)}\n      as=\"a\"\n      key={node.href}\n      onClick={isCurrentTool ? handleCurrentToolClick : presentationLinkProps.onClick}\n      padding={3}\n      radius={1}\n      pressed={active}\n      tone=\"inherit\"\n    >\n      <Flex gap={3}>\n        <Box flex=\"none\">\n          <Text size={1}>\n            <DesktopIcon />\n          </Text>\n        </Box>\n        <Stack flex={1} space={2}>\n          <Text size={1} weight=\"medium\">\n            {node.title}\n          </Text>\n          <Text muted size={1} textOverflow=\"ellipsis\">\n            {node.href}\n          </Text>\n        </Stack>\n      </Flex>\n    </Card>\n  )\n}\n\n/**\n * Compares two URLs to determine if they match based on origin, pathname, and search parameters\n * The previewUrl should have all the search parameters that are in the locationUrl\n */\nfunction areUrlsMatching(previewUrlString: string, locationUrlString: string): boolean {\n  try {\n    const previewUrl = new URL(previewUrlString, location.origin)\n    const locationUrl = new URL(locationUrlString, previewUrl.origin)\n\n    // First compare origin and pathname\n    if (previewUrl.origin !== locationUrl.origin || previewUrl.pathname !== locationUrl.pathname) {\n      return false\n    }\n\n    // Then check search params\n    // All search params in locationUrl must exist with the same values in previewUrl\n    const locationParams = new URLSearchParams(locationUrl.search)\n    const previewParams = new URLSearchParams(previewUrl.search)\n\n    for (const [key, value] of locationParams.entries()) {\n      if (previewParams.get(key) !== value) {\n        return false\n      }\n    }\n\n    return true\n  } catch {\n    // If URL parsing fails, URLs don't match\n    return false\n  }\n}\n","import {rem, Stack} from '@sanity/ui'\nimport {type ReactNode, useContext} from 'react'\nimport {type ObjectSchemaType, type PublishedId} from 'sanity'\nimport {PresentationDocumentContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {type PresentationPluginOptions} from '../types'\nimport {useDocumentLocations} from '../useDocumentLocations'\nimport {LocationsBanner} from './LocationsBanner'\n\nconst LocationStack = styled(Stack)`\n  min-height: ${rem(42)};\n\n  & + &:empty {\n    display: none;\n  }\n`\n\nexport function PresentationDocumentHeader(props: {\n  documentId: PublishedId\n  version: string | undefined\n  options: PresentationPluginOptions\n  schemaType: ObjectSchemaType\n}): ReactNode {\n  const {documentId, options, schemaType, version} = props\n  const context = useContext(PresentationDocumentContext)\n  const {state, status} = useDocumentLocations({\n    id: documentId,\n    version,\n    resolvers: options.resolve?.locations || options.locate,\n    type: schemaType.name,\n  })\n\n  if ((context && context.options[0] !== options) || status === 'empty') {\n    return null\n  }\n\n  const contextOptions = context?.options || []\n\n  return (\n    <LocationStack marginBottom={5} space={5}>\n      <Stack space={2}>\n        {contextOptions.map(\n          (\n            // eslint-disable-next-line @typescript-eslint/no-shadow\n            options,\n            idx,\n          ) => (\n            <LocationsBanner\n              documentId={documentId}\n              isResolving={status === 'resolving'}\n              key={idx}\n              options={options}\n              schemaType={schemaType}\n              showPresentationTitle={contextOptions.length > 1}\n              state={state}\n            />\n          ),\n        )}\n      </Stack>\n    </LocationStack>\n  )\n}\n","import {type ReactNode, useCallback, useContext, useLayoutEffect, useMemo, useState} from 'react'\nimport {PresentationDocumentContext} from 'sanity/_singletons'\nimport {useEffectEvent} from 'use-effect-event'\n\nimport {type PresentationPluginOptions} from '../types'\nimport {type PresentationDocumentContextValue} from './types'\n\n/** @internal */\nexport function PresentationDocumentProvider(props: {\n  children?: ReactNode\n  options: PresentationPluginOptions\n}): React.JSX.Element {\n  const {children, options} = props\n  const parent = useContext(PresentationDocumentContext)\n  const parentRegister = parent?.register\n\n  const [optionsArray, setOptionsArray] = useState<PresentationPluginOptions[]>(() => [])\n\n  const register = useCallback(\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    (options: PresentationPluginOptions) => {\n      if (parentRegister) {\n        return parentRegister(options)\n      }\n\n      setOptionsArray((prev) => [options].concat(prev))\n\n      return () => {\n        setOptionsArray((prev) => prev.filter((o) => o !== options))\n      }\n    },\n    [parentRegister],\n  )\n\n  const context: PresentationDocumentContextValue = useMemo(\n    () => ({\n      options: parent?.options || optionsArray,\n      register,\n    }),\n    [optionsArray, parent, register],\n  )\n\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  const registerEffectEvent = useEffectEvent((options: PresentationPluginOptions) =>\n    register(options),\n  )\n  useLayoutEffect(() => registerEffectEvent(options), [options])\n\n  return (\n    <PresentationDocumentContext.Provider value={context}>\n      {children}\n    </PresentationDocumentContext.Provider>\n  )\n}\n","import {MasterDetailIcon} from '@sanity/icons'\nimport {useContext, useMemo} from 'react'\nimport {\n  defineDocumentFieldAction,\n  type DocumentFieldActionGroup,\n  type DocumentFieldActionItem,\n  type DocumentFieldActionProps,\n  isRecord,\n  pathToString,\n  type Tool,\n  useWorkspace,\n} from 'sanity'\nimport {PresentationContext} from 'sanity/_singletons'\nimport {useRouter} from 'sanity/router'\n\nimport {DEFAULT_TOOL_NAME} from '../constants'\n\nfunction useOpenInStructureAction(\n  props: DocumentFieldActionProps,\n): DocumentFieldActionItem | DocumentFieldActionGroup {\n  const {documentId, documentType, path} = props\n  const workspace = useWorkspace()\n  const {navigateIntent} = useRouter()\n  const presentation = useContext(PresentationContext)\n\n  const defaultStructureTool = useMemo(\n    () =>\n      findStructureTool(\n        workspace.tools,\n        documentId,\n        documentType,\n        presentation?.name || DEFAULT_TOOL_NAME,\n      ),\n    [documentId, documentType, workspace.tools, presentation],\n  )\n\n  return {\n    type: 'action',\n    hidden: !presentation || path.length > 0 || !defaultStructureTool,\n    icon: defaultStructureTool?.icon || MasterDetailIcon,\n    title: `Open in ${defaultStructureTool?.title || 'Structure'}`,\n    onAction() {\n      navigateIntent('edit', {\n        id: documentId,\n        type: documentType,\n        mode: 'structure',\n        path: pathToString(path),\n      })\n    },\n    renderAsButton: true,\n  }\n}\n\nexport const openInStructure = defineDocumentFieldAction({\n  name: 'presentation/openInStructure',\n  useAction: useOpenInStructureAction,\n})\n\nfunction findStructureTool(\n  tools: Tool[],\n  documentId: string,\n  documentType: string,\n  presentationToolName?: string,\n): Tool | undefined {\n  const results = tools\n    .filter((t) => t.name !== presentationToolName)\n    .map((t) => {\n      const match = t.canHandleIntent?.(\n        'edit',\n        {\n          id: documentId,\n          type: documentType,\n          mode: 'structure',\n        },\n        {},\n      )\n\n      return {tool: t, match}\n    })\n\n  const modeMatches = results.filter((t) => isRecord(t.match) && t.match.mode)\n\n  if (modeMatches.length > 0) {\n    return modeMatches[0].tool\n  }\n\n  const matches = results.filter((t) => t.match)\n\n  return matches[0]?.tool\n}\n","import {uuid} from '@sanity/uuid'\nimport {getPublishedId} from 'sanity'\nimport {encodeJsonParams, type RouterState, type SearchParam} from 'sanity/router'\n\nimport {type PresentationSearchParams, type PresentationStateParams} from './types'\n\nconst preservedSearchParamKeys: Array<keyof PresentationSearchParams> = ['preview', 'viewport']\n\n/**\n * @internal\n */\nexport function getIntentState(\n  intent: string,\n  params: Record<string, string>,\n  routerState: RouterState | undefined,\n  payload: unknown,\n):\n  | (PresentationStateParams & {_searchParams: SearchParam[]})\n  | {intent: string; params: Record<string, string>; payload: unknown} {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const {id, mode, path, presentation, type, ...searchParams} = params\n\n  const preservedSearchParams = (routerState?._searchParams || [])\n    // @todo Casting https://github.com/microsoft/TypeScript/issues/14520\n    .filter(([key]) => preservedSearchParamKeys.includes(key as keyof PresentationSearchParams))\n    .reduce((acc, [key, value]) => ({...acc, [key]: value}), {} as Record<string, string>)\n\n  const _searchParams = {\n    ...preservedSearchParams,\n    ...searchParams,\n  }\n\n  if (intent === 'edit' && id) {\n    _searchParams.preview =\n      _searchParams.preview || new URLSearchParams(window.location.search).get('preview') || '/'\n    return {\n      type: type || '*',\n      id: getPublishedId(id),\n      path,\n      _searchParams: Object.entries(_searchParams),\n    }\n  }\n\n  if (intent === 'create') {\n    _searchParams.preview =\n      _searchParams.preview || new URLSearchParams(window.location.search).get('preview') || '/'\n\n    if (payload && typeof payload === 'object') {\n      _searchParams.templateParams = encodeJsonParams(payload as Record<string, unknown>)\n    }\n\n    return {\n      type: type || '*',\n      id: id || uuid(),\n      _searchParams: Object.entries(_searchParams),\n    }\n  }\n  return {intent, params, payload}\n}\n","import {Flex, Spinner} from '@sanity/ui'\n\nexport function PresentationSpinner(): React.JSX.Element {\n  return (\n    <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\" style={{width: '100%'}}>\n      <Spinner />\n    </Flex>\n  )\n}\n","import {route} from 'sanity/router'\n\n// eslint-disable-next-line camelcase\nexport const router = route.create('/', {__unsafe_disableScopedSearchParams: true}, [\n  route.intents('/intent'),\n  route.create(':type', [route.create(':id', [route.create(':path')])]),\n])\n","import {type SanityDocument} from '@sanity/client'\nimport {lazy, Suspense} from 'react'\nimport {\n  definePlugin,\n  getPublishedId,\n  getVersionFromId,\n  type InputProps,\n  isDocumentSchemaType,\n} from 'sanity'\n\nimport {DEFAULT_TOOL_ICON, DEFAULT_TOOL_NAME, EDIT_INTENT_MODE} from './constants'\nimport {PresentationDocumentHeader} from './document/PresentationDocumentHeader'\nimport {PresentationDocumentProvider} from './document/PresentationDocumentProvider'\nimport {openInStructure} from './fieldActions/openInStructure'\nimport {getIntentState} from './getIntentState'\nimport {presentationUsEnglishLocaleBundle} from './i18n'\nimport {PresentationSpinner} from './PresentationSpinner'\nimport {router} from './router'\nimport {\n  type DocumentLocationResolverObject,\n  type DocumentLocationsState,\n  type DocumentResolver,\n  type PresentationPluginOptions,\n} from './types'\n\nconst PresentationTool = lazy(() => import('./PresentationToolGrantsCheck'))\nconst BroadcastDisplayedDocument = lazy(() => import('./loader/BroadcastDisplayedDocument'))\n\n/**\n * Define locations for a given document type.\n * This function doesn't do anything itself, it is used to provide type information.\n * @param resolver - resolver that return locations for a document.\n * @public\n */\nexport function defineLocations<K extends string>(\n  resolver: DocumentLocationResolverObject<K> | DocumentLocationsState,\n): typeof resolver {\n  return resolver\n}\n\n/**\n * Define documents for a given location.\n * This function doesn't do anything itself, it is used to provide type information.\n * @param resolvers - resolvers that return documents.\n * @public\n */\nexport function defineDocuments(resolvers: DocumentResolver[]): typeof resolvers {\n  return resolvers\n}\n\n/** @public */\nexport const presentationTool = definePlugin<PresentationPluginOptions>((options) => {\n  const toolName = options.name || DEFAULT_TOOL_NAME\n\n  if ('locate' in options) {\n    // eslint-disable-next-line no-console\n    console.warn('Presentation’s `locate` option is deprecated. Use `resolve.locations` instead.')\n  }\n\n  const hasLocationsResolver = !!(options.resolve?.locations || options.locate)\n\n  function PresentationDocumentInput(props: InputProps) {\n    const value = props.value as SanityDocument\n    const documentId = value?._id ? getPublishedId(value?._id) : undefined\n    const documentVersion = value?._id ? getVersionFromId(value._id) : undefined\n    if (isDocumentSchemaType(props.schemaType)) {\n      return (\n        <PresentationDocumentProvider options={options}>\n          {hasLocationsResolver && documentId && (\n            <PresentationDocumentHeader\n              documentId={documentId}\n              version={documentVersion}\n              options={options}\n              schemaType={props.schemaType}\n            />\n          )}\n          <Suspense fallback={<PresentationSpinner />}>{props.renderDefault(props)}</Suspense>\n          <Suspense key=\"broadcast-displayed-document\">\n            <BroadcastDisplayedDocument key={documentId} value={value} />\n          </Suspense>\n        </PresentationDocumentProvider>\n      )\n    }\n\n    return props.renderDefault(props)\n  }\n\n  function canHandleCreateIntent(params: Record<string, unknown>) {\n    // We can't handle create intents without a `type` parameter\n    if (!('type' in params)) {\n      return false\n    }\n\n    if ('presentation' in params && params.presentation !== toolName) {\n      return false\n    }\n\n    return 'template' in params ? {template: true} : true\n  }\n\n  function canHandleEditIntent(params: Record<string, unknown>) {\n    // We can't handle edit intents without `type` or `id` parameters\n    if (!('type' in params) || !('id' in params)) {\n      return false\n    }\n\n    if ('presentation' in params && params.presentation !== toolName) {\n      return false\n    }\n\n    return 'mode' in params ? {mode: params.mode === EDIT_INTENT_MODE} : true\n  }\n\n  return {\n    i18n: {\n      bundles: [presentationUsEnglishLocaleBundle],\n    },\n    document: {\n      unstable_fieldActions: (prev) => {\n        return [\n          ...prev.filter((a) => a.name !== openInStructure.name), // prevent duplication\n          openInStructure,\n        ]\n      },\n    },\n\n    form: {\n      components: {\n        input: PresentationDocumentInput,\n      },\n    },\n\n    tools: [\n      {\n        icon: options.icon || DEFAULT_TOOL_ICON,\n        name: toolName,\n        title: options.title,\n        component: PresentationTool,\n        options,\n        canHandleIntent(intent, params) {\n          if (intent === 'create') return canHandleCreateIntent(params)\n          if (intent === 'edit') return canHandleEditIntent(params)\n          return false\n        },\n        getIntentState,\n        router,\n        __internalApplicationType: 'sanity/presentation',\n      },\n    ],\n  }\n})\n","import {useContext} from 'react'\nimport {PresentationNavigateContext} from 'sanity/_singletons'\n\nimport {type PresentationNavigateContextValue} from './types'\n\n/** @public */\nexport function usePresentationNavigate(): PresentationNavigateContextValue {\n  const navigate = useContext(PresentationNavigateContext)\n\n  if (!navigate) {\n    throw new Error('Presentation navigate context is missing')\n  }\n\n  return navigate\n}\n\nexport type {PresentationNavigateContextValue}\n","import {useContext} from 'react'\nimport {PresentationParamsContext} from 'sanity/_singletons'\n\nimport {type PresentationParamsContextValue} from './types'\n\n/** @public */\nexport function usePresentationParams(throwOnMissingContext?: true): PresentationParamsContextValue\n/** @public */\nexport function usePresentationParams(\n  throwOnMissingContext: false,\n): PresentationParamsContextValue | null\n/** @public */\nexport function usePresentationParams(\n  throwOnMissingContext = true,\n): PresentationParamsContextValue | null {\n  const params = useContext(PresentationParamsContext)\n\n  if (throwOnMissingContext && !params) {\n    throw new Error('Presentation params context is missing')\n  }\n\n  return params\n}\n"],"names":["useSharedState","key","value","$","_c","context","useContext","PresentationSharedStateContext","Error","setValue","t0","t1","useEffect","DEFAULT_TOOL_ICON","ComposeIcon","DEFAULT_TOOL_NAME","DEFAULT_TOOL_TITLE","EDIT_INTENT_MODE","MAX_TIME_TO_OVERLAYS_CONNECTION","API_VERSION","apiVersion","MIN_LOADER_QUERY_LISTEN_HEARTBEAT_INTERVAL","LOADER_QUERY_GC_INTERVAL","POPUP_CHECK_INTERVAL","keysOf","Object","keys","setKey","source","props","options","Observable","observer","subscribe","pipe","switchMap","object","keyObservables","map","isObservable","from","val","of","wait","combineLatest","pairs","reduce","acc","mergeAll","scan","INITIAL_STATE","locations","getDocumentId","isReference","_ref","_id","undefined","cleanPreviewable","id","previewable","clean","_type","_weak","_dataset","_projectId","_strengthenOnPublish","listen","fields","store","perspectiveStack","query","fetch","join","params","versions","p","getPublishedId","getDraftId","getVersionId","concat","listenQuery","perspective","tag","observeDocument","paths","currentValue","headlessPaths","filter","path","length","Set","snapshot","leads","forEach","head","tail","push","next","res","tails","isRecord","observeForLocations","documentId","resolver","documentStore","select","values","String","split","doc","get","resolve","useDocumentLocations","resolvers","type","version","useDocumentStore","usePerspective","locationsState","setLocationsState","useState","locationsStatus","setLocationsStatus","bb0","_result","result","t2","sub","state","unsubscribe","t3","status","presentationLocaleNamespace","presentationUsEnglishLocaleBundle","defineLocaleResourceBundle","locale","namespace","resources","usePresentationTool","throwOnMissingContext","presentation","PresentationContext","useCurrentPresentationToolName","name","TONE_ICONS","positive","InfoOutlineIcon","caution","WarningOutlineIcon","critical","ErrorOutlineIcon","LocationsBanner","isResolving","schemaType","showPresentationTitle","message","tone","len","t","useTranslation","presentationName","expanded","setExpanded","_temp","toggle","count","title","ToneIcon","Symbol","for","margin","t4","transform","transition","l","active","preview","href","t5","t6","v","LocationItem","documentType","node","toolName","currentPresentationToolName","isCurrentTool","navigate","structureParams","intent","mode","presentationLinkProps","useIntentLink","handleCurrentToolClick","onClick","t7","t8","t9","areUrlsMatching","previewUrlString","locationUrlString","previewUrl","URL","location","origin","locationUrl","pathname","locationParams","URLSearchParams","search","previewParams","entries","LocationStack","styled","Stack","rem","PresentationDocumentHeader","PresentationDocumentContext","locate","contextOptions","options_0","idx","PresentationDocumentProvider","children","parent","parentRegister","register","optionsArray","setOptionsArray","prev","prev_0","o","options_1","registerEffectEvent","useEffectEvent","useLayoutEffect","useOpenInStructureAction","workspace","useWorkspace","navigateIntent","useRouter","tools","findStructureTool","defaultStructureTool","icon","MasterDetailIcon","hidden","onAction","pathToString","renderAsButton","openInStructure","defineDocumentFieldAction","useAction","presentationToolName","results","match","canHandleIntent","tool","modeMatches","preservedSearchParamKeys","getIntentState","routerState","payload","searchParams","_searchParams","includes","window","templateParams","encodeJsonParams","uuid","PresentationSpinner","width","router","route","create","__unsafe_disableScopedSearchParams","intents","PresentationTool","lazy","BroadcastDisplayedDocument","defineLocations","defineDocuments","presentationTool","definePlugin","console","warn","hasLocationsResolver","PresentationDocumentInput","getVersionFromId","documentVersion","isDocumentSchemaType","renderDefault","canHandleCreateIntent","template","canHandleEditIntent","i18n","bundles","document","unstable_fieldActions","a","form","components","input","component","__internalApplicationType","usePresentationNavigate","PresentationNavigateContext","usePresentationParams","PresentationParamsContext"],"mappings":"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"}