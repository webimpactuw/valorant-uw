{"version":3,"file":"TooltipDelayGroupProvider.js","sources":["../../src/ui-components/conditionalWrapper/ConditionalWrapper.tsx","../../src/ui-components/button/Button.tsx","../../src/ui-components/dialog/Dialog.tsx","../../src/ui-components/errorBoundary/ErrorBoundary.tsx","../../src/ui-components/menuButton/MenuButton.tsx","../../src/core/components/Hotkeys.tsx","../../src/ui-components/tooltip/constants.ts","../../src/ui-components/tooltip/Tooltip.tsx","../../src/ui-components/menuItem/MenuItem.tsx","../../src/ui-components/popover/Popover.tsx","../../src/ui-components/tab/Tab.tsx","../../src/ui-components/tooltipDelayGroupProvider/TooltipDelayGroupProvider.tsx"],"sourcesContent":["export type ConditionalWrapperRenderWrapperCallback = (children: React.ReactNode) => React.ReactNode\n\n/**\n * A helper component that conditionally wraps its children in a wrapper component.\n *\n * @internal\n */\nexport function ConditionalWrapper({\n  children,\n  condition,\n  wrapper,\n}: {\n  children: React.ReactNode\n  condition: boolean\n  wrapper: ConditionalWrapperRenderWrapperCallback\n}): React.ReactNode {\n  if (!condition) {\n    return children\n  }\n\n  return wrapper(children)\n}\n","/* eslint-disable no-restricted-imports */\n\nimport {Button as UIButton, type ButtonProps as UIButtonProps} from '@sanity/ui'\nimport {type ForwardedRef, forwardRef, type HTMLProps, useCallback} from 'react'\nimport {styled} from 'styled-components'\n\nimport {Tooltip, type TooltipProps} from '..'\nimport {\n  ConditionalWrapper,\n  type ConditionalWrapperRenderWrapperCallback,\n} from '../conditionalWrapper'\n\ntype BaseButtonProps = Pick<\n  UIButtonProps,\n  | 'as'\n  | 'icon'\n  | 'iconRight'\n  | 'justify'\n  | 'loading'\n  | 'mode'\n  | 'paddingY'\n  | 'selected'\n  | 'tone'\n  | 'type'\n  | 'width'\n> & {\n  size?: 'default' | 'large'\n  radius?: 'full'\n}\n\ntype ButtonWithText = {\n  text: string\n  tooltipProps?: TooltipProps | null\n  icon?: UIButtonProps['icon']\n}\n\ntype IconButton = {\n  text?: undefined\n  icon?: UIButtonProps['icon']\n  /**\n   * When using a button with an icon, tooltipProps are required to enforce consistency in UI.\n   */\n  tooltipProps: TooltipProps | null\n}\n\n/** @internal */\nexport type ButtonProps = BaseButtonProps & (ButtonWithText | IconButton)\n\nconst LARGE_BUTTON_PROPS = {\n  space: 3,\n  padding: 3,\n}\nconst DEFAULT_BUTTON_PROPS = {\n  space: 2,\n  padding: 2,\n}\n\nconst TooltipButtonWrapper = styled.span`\n  display: inline-flex;\n`\n/**\n * Customized Sanity UI <Button> with pre-defined layout options.\n *\n * @internal\n */\nexport const Button = forwardRef(function Button(\n  {\n    size = 'default',\n    mode = 'default',\n    paddingY,\n    tone = 'default',\n    tooltipProps,\n    ...rest\n  }: ButtonProps & Omit<HTMLProps<HTMLButtonElement>, 'as' | 'size' | 'title'>,\n  ref: ForwardedRef<HTMLButtonElement>,\n) {\n  const renderWrapper = useCallback<ConditionalWrapperRenderWrapperCallback>(\n    (children) => {\n      return (\n        <Tooltip content={tooltipProps?.content} portal {...tooltipProps}>\n          {/* This span is needed to make the tooltip work in disabled buttons */}\n          <TooltipButtonWrapper>{children}</TooltipButtonWrapper>\n        </Tooltip>\n      )\n    },\n    [tooltipProps],\n  )\n\n  const sizeProps = size === 'default' ? DEFAULT_BUTTON_PROPS : LARGE_BUTTON_PROPS\n\n  return (\n    <ConditionalWrapper condition={!!tooltipProps} wrapper={renderWrapper}>\n      <UIButton {...rest} {...sizeProps} paddingY={paddingY} ref={ref} mode={mode} tone={tone} />\n    </ConditionalWrapper>\n  )\n})\n","/* eslint-disable no-restricted-imports */\nimport {\n  Box,\n  type BoxHeight,\n  Button as UIButton,\n  Dialog as UIDialog,\n  type DialogProps as UIDialogProps,\n  Flex,\n} from '@sanity/ui'\nimport {type ComponentProps, forwardRef, type HTMLProps, type ReactNode, type Ref} from 'react'\nimport {useTranslation} from 'react-i18next'\n\n/** @internal */\nexport type DialogProps = Pick<\n  UIDialogProps,\n  | '__unstable_autoFocus'\n  | '__unstable_hideCloseButton'\n  | 'contentRef'\n  | 'header'\n  | 'id'\n  | 'onActivate'\n  | 'onClickOutside'\n  | 'onClose'\n  | 'portal'\n  | 'position'\n  | 'scheme'\n  | 'width'\n> & {\n  /**\n   * Dialog body height.\n   * Set this to 'fill' (i.e. 100%) if you want overflow body content to be contained\n   * and not trigger dynamic border visibility.\n   */\n  bodyHeight?: BoxHeight\n  children?: ReactNode\n  footer?: {\n    cancelButton?: Omit<ComponentProps<typeof UIButton>, 'fontSize' | 'padding'>\n    confirmButton?: Omit<ComponentProps<typeof UIButton>, 'fontSize' | 'padding'>\n  }\n  /**\n   * If enabled, removes all default padding from dialog content.\n   */\n  padding?: boolean\n}\n\n/**\n * Customized Sanity UI <Dialog> that enforces an opinionated footer layout with a max of two buttons (confirm and cancel).\n *\n * @internal\n */\nexport const Dialog = forwardRef(function Dialog(\n  {\n    bodyHeight,\n    children,\n    footer,\n    padding = true,\n    ...props\n  }: DialogProps & Pick<HTMLProps<HTMLDivElement>, 'onDragEnter' | 'onDrop'>,\n  ref: Ref<HTMLDivElement>,\n) {\n  const {t} = useTranslation()\n\n  return (\n    <UIDialog\n      {...props}\n      animate\n      ref={ref}\n      footer={\n        (footer?.confirmButton || footer?.cancelButton) && (\n          <Flex width=\"full\" gap={3} justify=\"flex-end\" padding={3}>\n            {props.onClose && (\n              <UIButton\n                mode=\"bleed\"\n                padding={2}\n                text={t('common.dialog.cancel-button.text')}\n                tone=\"default\"\n                onClick={props.onClose}\n                data-testid=\"cancel-button\"\n                {...footer.cancelButton}\n              />\n            )}\n            {footer.confirmButton && (\n              <UIButton\n                mode=\"default\"\n                padding={2}\n                text={t('common.dialog.confirm-button.text')}\n                tone=\"critical\"\n                data-testid=\"confirm-button\"\n                {...footer.confirmButton}\n              />\n            )}\n          </Flex>\n        )\n      }\n    >\n      <Box height={bodyHeight} padding={padding ? 4 : 0}>\n        {children}\n      </Box>\n    </UIDialog>\n  )\n})\n","import {\n  // eslint-disable-next-line no-restricted-imports\n  ErrorBoundary as UIErrorBoundary,\n  type ErrorBoundaryProps as UIErrorBoundaryProps,\n} from '@sanity/ui'\nimport {useCallback, useContext} from 'react'\n\nimport {SourceContext} from '../../_singletons'\n\nexport type ErrorBoundaryProps = UIErrorBoundaryProps\n\n/**\n * ErrorBoundary component that catches errors and uses onUncaughtError config property\n * It also calls the onCatch prop if it exists.\n */\nexport function ErrorBoundary({onCatch, ...rest}: ErrorBoundaryProps): React.JSX.Element {\n  // Use context, because source could be undefined and we don't want to throw in that case\n  const source = useContext(SourceContext)\n\n  const handleCatch = useCallback(\n    ({error: caughtError, info: caughtInfo}: {error: Error; info: React.ErrorInfo}) => {\n      // Send the error to the source if it has an onUncaughtError method\n      source?.onUncaughtError?.(caughtError, caughtInfo)\n\n      // Call the onCatch prop if it exists\n      onCatch?.({error: caughtError, info: caughtInfo})\n    },\n    [source, onCatch],\n  )\n\n  return <UIErrorBoundary {...rest} onCatch={handleCatch} />\n}\n","/* eslint-disable no-restricted-imports */\nimport {\n  MenuButton as UIMenuButton,\n  type MenuButtonProps as UIMenuButtonProps,\n  type PopoverProps,\n} from '@sanity/ui'\nimport {type ForwardedRef, forwardRef} from 'react'\n\n/** @internal */\nexport type MenuButtonProps = Omit<UIMenuButtonProps, 'popover'> & {\n  popover?: Omit<PopoverProps, 'animate' | 'content' | 'open'>\n}\n\n/**\n * Customized Sanity UI <MenuButton> that enforces popover animation.\n *\n * @internal\n */\nexport const MenuButton = forwardRef(function MenuButton(\n  props: MenuButtonProps,\n  ref: ForwardedRef<HTMLButtonElement>,\n) {\n  return (\n    <UIMenuButton\n      {...props}\n      ref={ref}\n      popover={{\n        ...props.popover,\n        animate: true,\n      }}\n    />\n  )\n})\n","import {Hotkeys as UIHotkeys, type HotkeysProps as UIHotkeysProps} from '@sanity/ui'\nimport {type HTMLProps, type RefAttributes} from 'react'\n\n/**\n * Properties for the `Hotkeys` component.\n *\n * @public\n */\nexport type HotkeysProps = UIHotkeysProps & {\n  /**\n   * Whether to make the keys platform-aware (eg `alt` to `option` on Apple devices).\n   *\n   * @defaultValue true\n   */\n  makePlatformAware?: boolean\n} & Omit<HTMLProps<HTMLElement>, 'ref' | 'size' | 'as'> &\n  RefAttributes<HTMLElement>\n\n/**\n * Renders given `keys` as \"keycaps\" visually.\n *\n * This is a wrapper around `@sanity/ui`'s `Hotkeys` component, which allows for altering keys\n * (eg `alt` to `option`) on Apple devices unless `makePlatformAware` is set to `false`.\n *\n * @param props - Properties to render with\n * @returns React element\n * @public\n */\nexport function Hotkeys({makePlatformAware = true, keys: hotKeys = [], ...props}: HotkeysProps) {\n  const keys = makePlatformAware ? hotKeys.map(platformifyKey) : hotKeys\n  return <UIHotkeys {...props} keys={keys} />\n}\n\n/**\n * @internal\n */\nconst IS_APPLE_DEVICE =\n  typeof navigator === 'undefined' || typeof navigator.platform !== 'string'\n    ? false\n    : /Mac|iPod|iPhone|iPad/.test(navigator.platform || '')\n\n/**\n * Given key 'Alt', or 'Option' (case-insensitive), return the platform-appropriate key name\n * (eg 'Alt' on non-Apple devices, 'Option' on Apple devices).\n *\n * @param key - Key to platformify\n * @returns Platform-appropriate key name\n * @internal\n */\nfunction platformifyKey(key: string): string {\n  const lowerKey = key.toLowerCase()\n\n  if (lowerKey === 'alt' && IS_APPLE_DEVICE) {\n    return matchCase(key, 'option')\n  }\n\n  if (lowerKey === 'option' && !IS_APPLE_DEVICE) {\n    return matchCase(key, 'alt')\n  }\n\n  return key\n}\n\n/**\n * Apply the case (lowercase/uppercase) of `original` to `target`, character by character,\n * eg matching ALL CAPS, all lowercase or Mixed Case.\n *\n * @param original - The original string to match case of\n * @param target - The target string to apply case to\n * @returns Target string with case applied from original\n * @internal\n */\nfunction matchCase(original: string, target: string): string {\n  const orgLength = original.length\n\n  return target.replace(/./g, (char, i) => {\n    // Replace character by character matching case of original\n    // If running out of original, just return the target case as-is\n    return i < orgLength && original[i] === original[i].toUpperCase() ? char.toUpperCase() : char\n  })\n}\n","export const TOOLTIP_DELAY_PROPS = {\n  open: 400,\n}\n","import {\n  Box,\n  Flex,\n  type HotkeysProps,\n  Text,\n  // eslint-disable-next-line no-restricted-imports\n  Tooltip as UITooltip,\n  // eslint-disable-next-line no-restricted-imports\n  type TooltipProps as UITooltipProps,\n} from '@sanity/ui'\nimport {type ForwardedRef, forwardRef} from 'react'\n\nimport {Hotkeys} from '../../core/components/Hotkeys'\nimport {TOOLTIP_DELAY_PROPS} from './constants'\n\n/** @internal */\n\nexport type TooltipProps = Omit<UITooltipProps, 'arrow' | 'padding' | 'shadow'> & {\n  hotkeys?: HotkeysProps['keys']\n}\n\nconst TOOLTIP_SHARED_PROPS: UITooltipProps = {\n  animate: true,\n  arrow: false,\n  boundaryElement: null,\n  delay: TOOLTIP_DELAY_PROPS,\n  fallbackPlacements: ['bottom-start', 'bottom-end', 'top-start', 'top-end'],\n  placement: 'bottom',\n  portal: true,\n}\n\n/**\n * Customized Sanity UI <Tooltip> with limited layout options and support for showing hotkeys.\n *\n * In just about all cases, its strongly recommended that you pass a string to the `content` prop.\n * This helps simplify i18n and encourages short and concise.\n *\n * Passing ReactNode values to `content` is supported, but discouraged.\n *\n * @internal\n */\nexport const Tooltip = forwardRef(function Tooltip(\n  props: TooltipProps,\n  ref: ForwardedRef<HTMLDivElement>,\n) {\n  const {content, hotkeys, ...rest} = props\n\n  if (typeof content === 'string') {\n    return (\n      <UITooltip\n        {...TOOLTIP_SHARED_PROPS}\n        content={\n          <Flex align=\"center\">\n            {content && (\n              <Box flex={1} padding={1}>\n                <Text size={1}>{content}</Text>\n              </Box>\n            )}\n            {hotkeys && (\n              <Box flex=\"none\">\n                <Hotkeys keys={hotkeys} />\n              </Box>\n            )}\n          </Flex>\n        }\n        padding={1}\n        ref={ref}\n        {...rest}\n      />\n    )\n  }\n\n  return <UITooltip {...TOOLTIP_SHARED_PROPS} content={content} ref={ref} {...rest} />\n})\n","/* eslint-disable no-restricted-imports */\nimport {\n  Badge,\n  Box,\n  Flex,\n  MenuItem as UIMenuItem,\n  type MenuItemProps as UIMenuItemProps,\n  Stack,\n  Text,\n} from '@sanity/ui'\nimport {\n  forwardRef,\n  type HTMLProps,\n  isValidElement,\n  type ReactNode,\n  type Ref,\n  useCallback,\n  useMemo,\n} from 'react'\nimport {isValidElementType} from 'react-is'\nimport {styled} from 'styled-components'\n\nimport {Hotkeys} from '../../core/components/Hotkeys'\nimport {Tooltip, type TooltipProps} from '..'\nimport {\n  ConditionalWrapper,\n  type ConditionalWrapperRenderWrapperCallback,\n} from '../conditionalWrapper'\n\nconst FONT_SIZE = 1\nconst SUBTITLE_FONT_SIZE = 0\n\n/* Using px value here to make title/subtitles align with icon */\nconst SubtitleText = styled(Text)`\n  margin-top: 2px;\n`\n\n/** @internal */\nexport type MenuItemProps = Pick<\n  UIMenuItemProps,\n  'as' | 'icon' | 'iconRight' | 'pressed' | 'selected' | 'tone' | 'hotkeys'\n> & {\n  badgeText?: string\n  /**\n   * Usage of `children` is not supported, import `MenuItem` from `@sanity/ui` instead.\n   */\n  children?: undefined\n  /**\n   * Previews should be 25x25.\n   */\n  preview?: ReactNode\n  /**\n   * Optional render callback which receives menu item content.\n   */\n  renderMenuItem?: (menuItemContent: React.JSX.Element) => ReactNode\n  text?: string\n  tooltipProps?: TooltipProps | null\n  /**\n   * Optional subtitle prop for the menu item.\n   * While not recommended, it is utilized for the workspace menu button.\n   */\n  __unstable_subtitle?: string\n  /**\n   * An optional property to adjust spacing in the preview between the icon and the text.\n   * Not recommended, but is applied to the workspace menu button..\n   */\n  __unstable_space?: number\n}\n\nconst PreviewWrapper = styled(Box)`\n  height: 25px;\n  width: 25px;\n  overflow: hidden;\n`\n\n/**\n * Customized Sanity UI <MenuItem> that restricts usage of `children` to encourage simple,\n * single line menu items.\n *\n * The workspace menu button needed a subtitle - hence, the StudioUI MenuIten now takes a subtitle prop.\n * This is only an escape hatch for the workspace menu button and is not recommended for general use.\n *\n * It also accepts a prop to attach tooltips as well as custom badges too.\n *\n * @internal\n */\nexport const MenuItem = forwardRef(function MenuItem(\n  {\n    badgeText,\n    children: childrenProp,\n    disabled,\n    hotkeys,\n    icon: Icon,\n    iconRight: IconRight,\n    preview = null,\n    renderMenuItem,\n    text,\n    tooltipProps,\n    __unstable_subtitle,\n    __unstable_space,\n    ...rest\n  }: MenuItemProps &\n    Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref' | 'selected' | 'tabIndex' | 'size'>,\n  ref: Ref<HTMLDivElement>,\n) {\n  const menuItemContent = useMemo(() => {\n    return (\n      <Flex align=\"center\" gap={2}>\n        {preview && (\n          <PreviewWrapper\n            style={{opacity: disabled ? 0.25 : undefined}}\n            paddingRight={__unstable_space ? 1 : 0}\n          >\n            <Flex align=\"center\" height=\"fill\" justify=\"center\">\n              {preview}\n            </Flex>\n          </PreviewWrapper>\n        )}\n        {Icon && (\n          <Box paddingRight={1}>\n            <Text size={FONT_SIZE}>\n              {isValidElement(Icon) && Icon}\n              {isValidElementType(Icon) && <Icon />}\n            </Text>\n          </Box>\n        )}\n        {text && (\n          <Stack\n            flex={1}\n            space={__unstable_subtitle ? 1 : 2}\n            paddingLeft={__unstable_subtitle ? 1 : 0}\n          >\n            <Text size={FONT_SIZE} textOverflow=\"ellipsis\" weight=\"medium\">\n              {text}\n            </Text>\n            {__unstable_subtitle && (\n              <SubtitleText size={SUBTITLE_FONT_SIZE} textOverflow=\"ellipsis\" weight=\"medium\" muted>\n                {__unstable_subtitle}\n              </SubtitleText>\n            )}\n          </Stack>\n        )}\n        {(badgeText || hotkeys || IconRight) && (\n          <Flex align=\"center\" gap={3} marginLeft={3}>\n            {hotkeys && <Hotkeys keys={hotkeys} style={{marginTop: -4, marginBottom: -4}} />}\n\n            {badgeText && (\n              <Badge fontSize={0} style={{marginTop: -4, marginBottom: -4}}>\n                {badgeText}\n              </Badge>\n            )}\n\n            {IconRight && (\n              <Text size={FONT_SIZE}>\n                {isValidElement(IconRight) && IconRight}\n                {isValidElementType(IconRight) && <IconRight />}\n              </Text>\n            )}\n          </Flex>\n        )}\n      </Flex>\n    )\n  }, [\n    preview,\n    disabled,\n    __unstable_space,\n    Icon,\n    text,\n    __unstable_subtitle,\n    badgeText,\n    hotkeys,\n    IconRight,\n  ])\n\n  const renderWrapper = useCallback<ConditionalWrapperRenderWrapperCallback>(\n    (children) => {\n      return (\n        <Tooltip content={tooltipProps?.content} portal {...tooltipProps}>\n          {/* This div is needed to make the tooltip work in disabled menu items */}\n          <div>{children}</div>\n        </Tooltip>\n      )\n    },\n    [tooltipProps],\n  )\n\n  return (\n    <ConditionalWrapper condition={!!tooltipProps} wrapper={renderWrapper}>\n      <UIMenuItem\n        disabled={disabled}\n        paddingLeft={preview ? 1 : 3}\n        paddingRight={3}\n        paddingY={preview ? 1 : 3}\n        ref={ref}\n        {...rest}\n      >\n        {typeof childrenProp === 'undefined' && typeof renderMenuItem === 'function'\n          ? renderMenuItem(menuItemContent)\n          : menuItemContent}\n      </UIMenuItem>\n    </ConditionalWrapper>\n  )\n})\n","/* eslint-disable no-restricted-imports */\nimport {Popover as UIPopover, type PopoverProps as UIPopoverProps} from '@sanity/ui'\nimport {type ForwardedRef, forwardRef, type HTMLProps} from 'react'\n\n/** @internal */\nexport type PopoverProps = Omit<UIPopoverProps, 'animate'>\n\n/**\n * Customized Sanity UI <Popover> that forces `animate=true`\n *\n * All Popovers in the studio should be animated.\n *\n * @internal\n */\nexport const Popover = forwardRef(function Popover(\n  props: PopoverProps & Omit<HTMLProps<HTMLDivElement>, 'as' | 'children' | 'content' | 'width'>,\n  ref: ForwardedRef<HTMLDivElement>,\n) {\n  return <UIPopover {...props} animate ref={ref} />\n})\n","/* eslint-disable no-restricted-imports */\nimport {Tab as UITab, type TabProps as UITabProps} from '@sanity/ui'\nimport {type ForwardedRef, forwardRef, type HTMLProps} from 'react'\n\n/**\n * @internal\n *\n * Padding and font sizes are fixed in Studio UI <Tab> components.\n */\nexport type TabProps = Pick<\n  UITabProps,\n  'aria-controls' | 'focused' | 'icon' | 'id' | 'label' | 'selected' | 'tone'\n>\n\n/**\n * Customized Sanity UI <Tab> with limited layout options.\n *\n * @internal\n */\nexport const Tab = forwardRef(function Tab(\n  {tone = 'default', ...props}: TabProps & Omit<HTMLProps<HTMLButtonElement>, 'as' | 'size'>,\n  ref: ForwardedRef<HTMLButtonElement>,\n) {\n  return <UITab {...props} muted padding={2} ref={ref} tone={tone} />\n})\n","/* eslint-disable no-restricted-imports */\nimport {\n  TooltipDelayGroupProvider as UITooltipDelayGroupProvider,\n  type TooltipDelayGroupProviderProps as UITooltipDelayGroupProviderProps,\n} from '@sanity/ui'\n\nimport {TOOLTIP_DELAY_PROPS} from '../tooltip/constants'\n\n/** @internal */\nexport type TooltipDelayGroupProviderProps = Omit<UITooltipDelayGroupProviderProps, 'delay'>\n\n/**\n * Opinionated Sanity UI <TooltipDelayGroupProvider> which forces the same delay to all tooltips.\n *\n * @internal\n */\nexport const TooltipDelayGroupProvider = (props: TooltipDelayGroupProviderProps) => {\n  return (\n    <UITooltipDelayGroupProvider delay={TOOLTIP_DELAY_PROPS}>\n      {props.children}\n    </UITooltipDelayGroupProvider>\n  )\n}\n"],"names":["ConditionalWrapper","children","condition","wrapper","LARGE_BUTTON_PROPS","space","padding","DEFAULT_BUTTON_PROPS","TooltipButtonWrapper","styled","span","Button","forwardRef","t0","ref","$","_c","paddingY","rest","t1","t2","t3","tooltipProps","size","mode","tone","undefined","t4","jsx","content","renderWrapper","sizeProps","t5","t6","UIButton","t7","Dialog","bodyHeight","footer","props","t","useTranslation","confirmButton","cancelButton","jsxs","Flex","onClose","Box","UIDialog","ErrorBoundary","onCatch","source","useContext","SourceContext","error","caughtError","info","caughtInfo","onUncaughtError","handleCatch","UIErrorBoundary","MenuButton","popover","animate","UIMenuButton","Hotkeys","makePlatformAware","keys","hotKeys","map","platformifyKey","UIHotkeys","IS_APPLE_DEVICE","navigator","platform","test","key","lowerKey","toLowerCase","matchCase","original","target","orgLength","length","replace","char","i","toUpperCase","TOOLTIP_DELAY_PROPS","open","TOOLTIP_SHARED_PROPS","arrow","boundaryElement","delay","fallbackPlacements","placement","portal","Tooltip","hotkeys","Text","UITooltip","FONT_SIZE","SUBTITLE_FONT_SIZE","SubtitleText","PreviewWrapper","MenuItem","Icon","IconRight","__unstable_space","__unstable_subtitle","badgeText","childrenProp","disabled","renderMenuItem","text","icon","iconRight","preview","opacity","isValidElement","isValidElementType","Stack","marginTop","marginBottom","Badge","menuItemContent","t8","t9","t10","t11","t12","t13","UIMenuItem","t14","Popover","UIPopover","Tab","UITab","TooltipDelayGroupProvider","UITooltipDelayGroupProvider"],"mappings":"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"}